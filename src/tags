!_TAG_FILE_FORMAT	2	/extended format; --format=1 will not append ;" to lines/
!_TAG_FILE_SORTED	1	/0=unsorted, 1=sorted, 2=foldcase/
!_TAG_OUTPUT_EXCMD	mixed	/number, pattern, mixed, or combineV2/
!_TAG_OUTPUT_FILESEP	slash	/slash or backslash/
!_TAG_OUTPUT_MODE	u-ctags	/u-ctags or e-ctags/
!_TAG_PATTERN_LENGTH_LIMIT	96	/0 for no limit/
!_TAG_PROC_CWD	/home/zzhang615/rcvip/src/	//
!_TAG_PROGRAM_AUTHOR	Universal Ctags Team	//
!_TAG_PROGRAM_NAME	Universal Ctags	/Derived from Exuberant Ctags/
!_TAG_PROGRAM_URL	https://ctags.io/	/official site/
!_TAG_PROGRAM_VERSION	5.9.0	/140a2b6d/
1Ztbtj65LjRgrELqctWhwzy4usL	copg/car_racing/.idea/workspace.xml	/^  <component name="ProjectId" id="1Ztbtj65LjRgrELqctWhwzy4usL" \/>$/;"	i
1Ztbtj65LjRgrELqctWhwzy4usL	copg/rcvip_racing/.idea/workspace.xml	/^  <component name="ProjectId" id="1Ztbtj65LjRgrELqctWhwzy4usL" \/>$/;"	i
94fdd4fa-def6-4e89-a0e3-49aab01bdb3f	copg/car_racing/.idea/workspace.xml	/^      <changelist id="94fdd4fa-def6-4e89-a0e3-49aab01bdb3f" name="Default Changelist" comment=""/;"	i
94fdd4fa-def6-4e89-a0e3-49aab01bdb3f	copg/car_racing/.idea/workspace.xml	/^    <list default="true" id="94fdd4fa-def6-4e89-a0e3-49aab01bdb3f" name="Default Changelist" com/;"	i
94fdd4fa-def6-4e89-a0e3-49aab01bdb3f	copg/rcvip_racing/.idea/workspace.xml	/^      <changelist id="94fdd4fa-def6-4e89-a0e3-49aab01bdb3f" name="Default Changelist" comment=""/;"	i
94fdd4fa-def6-4e89-a0e3-49aab01bdb3f	copg/rcvip_racing/.idea/workspace.xml	/^    <list default="true" id="94fdd4fa-def6-4e89-a0e3-49aab01bdb3f" name="Default Changelist" com/;"	i
A	controller/mppi/toy_examples/dampedBox.py	/^    A = sim.A$/;"	v
A	misc/cvxpy_test.py	/^A = np.random.randn(m, n)$/;"	v
A	misc/throttle_model.m	/^    A = -1;$/;"	v
ALPHA	controller/cvar/cvar_racecar.cu	/^#define ALPHA /;"	d	file:
Actor	copg/car_racing/network.py	/^class Actor(nn.Module):$/;"	c
Actor	copg/car_racing/results.py	/^from car_racing.network import Actor as Actor$/;"	x	nameref:unknown:Actor
Actor	copg/rcvip_racing/network.py	/^class Actor(nn.Module):$/;"	c
Actor	copg/rcvip_racing/results.py	/^from car_racing.network import Actor as Actor$/;"	x	nameref:unknown:Actor
Actor	results.py	/^from car_racing.network import Actor as Actor$/;"	x	nameref:unknown:Actor
ActorCritic	copg/car_racing/network.py	/^class ActorCritic(nn.Module):$/;"	c
ActorCritic	copg/rcvip_racing/network.py	/^class ActorCritic(nn.Module):$/;"	c
ActorCriticVar	copg/car_racing/network.py	/^class ActorCriticVar(nn.Module):$/;"	c
ActorCriticVar	copg/rcvip_racing/network.py	/^class ActorCriticVar(nn.Module):$/;"	c
ActorVar	copg/car_racing/network.py	/^class ActorVar(nn.Module):$/;"	c
ActorVar	copg/rcvip_racing/network.py	/^class ActorVar(nn.Module):$/;"	c
Actor_tan	copg/car_racing/network.py	/^class Actor_tan(nn.Module):$/;"	c
Actor_tan	copg/rcvip_racing/network.py	/^class Actor_tan(nn.Module):$/;"	c
B	controller/mppi/toy_examples/dampedBox.py	/^    B = sim.B$/;"	v
B	planner/Planner.py	/^            B = lambda t,p: (1-t)**5*p[0] + 5*t*(1-t)**4*p[1] + 10*t**2*(1-t)**3*p[2] + 10*t**3*/;"	f	member:Planner.bezierSpline	file:
B	planner/Planner.py	/^        B = lambda t,p: (1-t)**5*p[0] + 5*t*(1-t)**4*p[1] + 10*t**2*(1-t)**3*p[2] + 10*t**3*(1-t/;"	f	member:Planner.evalBezierSpline	file:
B	qpSmooth.py	/^            B = lambda t,p: (1-t)**5*p[0] + 5*t*(1-t)**4*p[1] + 10*t**2*(1-t)**3*p[2] + 10*t**3*/;"	f	member:QpSmooth.bezierSpline	file:
B	qpSmooth.py	/^        B = lambda t,p: (1-t)**5*p[0] + 5*t*(1-t)**4*p[1] + 10*t**2*(1-t)**3*p[2] + 10*t**3*(1-t/;"	f	member:QpSmooth.evalBezierSpline	file:
B0	misc/throttle_model.m	/^    B0 = -20;$/;"	v
B1	misc/throttle_model.m	/^    B1 = 700;$/;"	v
B2	misc/throttle_model.m	/^    B2 = -450;$/;"	v
BoundaryChecker	extension/BoundaryChecker.py	/^class BoundaryChecker(Extension):$/;"	c
Box	controller/mppi/toy_examples/dampedBox.py	/^class Box:$/;"	c
C	planner/Planner.py	/^        def C(i):$/;"	f	member:Planner.addCurvatureNormObjective	file:
C	planner/Planner.py	/^        def C(i):$/;"	f	member:Planner.buildTangentialConstraint	file:
C	planner/Planner.py	/^        def C(i):$/;"	f	member:Planner.verifyIniial	file:
C	planner/Planner.py	/^        def C(i):$/;"	f	member:Planner.verifyTangentialConstraint	file:
CAR_B	controller/ccmppi/ccmppi.cu	/^#define CAR_B /;"	d	file:
CAR_C	controller/ccmppi/ccmppi.cu	/^#define CAR_C /;"	d	file:
CAR_CD	controller/ccmppi/ccmppi.cu	/^#define CAR_CD /;"	d	file:
CAR_CM1	controller/ccmppi/ccmppi.cu	/^#define CAR_CM1 /;"	d	file:
CAR_CM2	controller/ccmppi/ccmppi.cu	/^#define CAR_CM2 /;"	d	file:
CAR_CR	controller/ccmppi/ccmppi.cu	/^#define CAR_CR /;"	d	file:
CAR_DF	controller/ccmppi/ccmppi.cu	/^#define CAR_DF /;"	d	file:
CAR_DR	controller/ccmppi/ccmppi.cu	/^#define CAR_DR /;"	d	file:
CAR_IZ	controller/ccmppi/ccmppi.cu	/^#define CAR_IZ /;"	d	file:
CAR_L	controller/ccmppi/ccmppi.cu	/^#define CAR_L /;"	d	file:
CAR_LF	controller/ccmppi/ccmppi.cu	/^#define CAR_LF /;"	d	file:
CAR_LR	controller/ccmppi/ccmppi.cu	/^#define CAR_LR /;"	d	file:
CAR_M	controller/ccmppi/ccmppi.cu	/^#define CAR_M /;"	d	file:
CCMPPI	controller/ccmppi/ccmppi.py	/^class CCMPPI:$/;"	c
CCMPPI_DYNAMIC	controller/ccmppi/ccmppi_dynamic.py	/^class CCMPPI_DYNAMIC():$/;"	c
CCMPPI_KINEMATIC	controller/ccmppi/ccmppi_kinematic.py	/^class CCMPPI_KINEMATIC():$/;"	c
CC_RATIO	controller/ccmppi/ccmppi.cu	/^#define CC_RATIO /;"	d	file:
CONTROL_COST_MTX_R_1	controller/ccmppi/ccmppi.cu	/^#define CONTROL_COST_MTX_R_1 /;"	d	file:
CONTROL_COST_MTX_R_2	controller/ccmppi/ccmppi.cu	/^#define CONTROL_COST_MTX_R_2 /;"	d	file:
CONTROL_DIM	controller/ccmppi/ccmppi.cu	/^#define CONTROL_DIM /;"	d	file:
CONTROL_DIM	controller/cvar/cvar_racecar.cu	/^#define CONTROL_DIM /;"	d	file:
CONTROL_DIM	controller/mppi/mppi_racecar.cu	/^#define CONTROL_DIM /;"	d	file:
CONTROL_STEERING	controller/cvar/cvar_racecar.cu	/^#define CONTROL_STEERING /;"	d	file:
CONTROL_STEERING	controller/mppi/mppi_racecar.cu	/^#define CONTROL_STEERING /;"	d	file:
CONTROL_THROTTLE	controller/cvar/cvar_racecar.cu	/^#define CONTROL_THROTTLE /;"	d	file:
CONTROL_THROTTLE	controller/mppi/mppi_racecar.cu	/^#define CONTROL_THROTTLE /;"	d	file:
CSSolver	misc/cs_solver.py	/^class CSSolver:$/;"	c
CSSolver	misc/cs_solver_covariance_only.py	/^class CSSolver:$/;"	c
CURAND_KERNEL_N	controller/ccmppi/ccmppi.cu	/^#define CURAND_KERNEL_N /;"	d	file:
CURAND_KERNEL_N	controller/cvar/cvar_racecar.cu	/^#define CURAND_KERNEL_N /;"	d	file:
CURAND_KERNEL_N	controller/mppi/mppi_racecar.cu	/^#define CURAND_KERNEL_N /;"	d	file:
Caf	misc/hybridDynamicSimNew.py	/^    def Caf(self):$/;"	m	class:hybridDynamicSimNew
Caf	misc/hybridKinematicSim.py	/^    def Caf(self):$/;"	m	class:hybridKinematicSim
Caf	misc/hybridSim.py	/^    def Caf(self):$/;"	m	class:hybridSim
Car	car/Car.py	/^class Car:$/;"	c
Car	misc/hybridDynamicSimNew.py	/^    def Car(self):$/;"	m	class:hybridDynamicSimNew
Car	misc/hybridKinematicSim.py	/^    def Car(self):$/;"	m	class:hybridKinematicSim
Car	misc/hybridSim.py	/^    def Car(self):$/;"	m	class:hybridSim
CarController	controller/CarController.py	/^class CarController(PrintObject):$/;"	c
CarDataset	misc/sysidDataloader.py	/^class CarDataset(Dataset):$/;"	c
CcmppiCarController	controller/ccmppi/CcmppiCarController.py	/^class CcmppiCarController(CarController):$/;"	c
CcmppiCarController	controller/ccmppi/oldCcmppi.py	/^class CcmppiCarController(CarController):$/;"	c
Cd	misc/getThrustCurve.py	/^Cd = 0.00000$/;"	v
Cm1	misc/getThrustCurve.py	/^Cm1 = 6.03154$/;"	v
Cm2	misc/getThrustCurve.py	/^Cm2 = 0.96769$/;"	v
CoPG	copg/car_racing/copg_orca.py	/^from copg_optim import RCoPG as CoPG$/;"	x	nameref:unknown:RCoPG
CoPG	copg/car_racing/gda_orca.py	/^from copg_optim import RCoPG as CoPG$/;"	x	nameref:unknown:RCoPG
CoPG	copg/copg_optim/copg.py	/^class CoPG(object):$/;"	c
CoPG	copg/rcvip_racing/copg_orca.py	/^from copg_optim import RCoPG as CoPG$/;"	x	nameref:unknown:RCoPG
CoPG	copg/rcvip_racing/gda_orca.py	/^from copg_optim import RCoPG as CoPG$/;"	x	nameref:unknown:RCoPG
CollisionChecker	extension/CollisionChecker.py	/^class CollisionChecker(Extension):$/;"	c
ConfigLogger	extension/ConfigLogger.py	/^class ConfigLogger(Extension):$/;"	c
ConfigObject	common.py	/^class ConfigObject(PrintObject):$/;"	c
Cr	misc/getThrustCurve.py	/^Cr = -0.20375$/;"	v
Critic	copg/car_racing/network.py	/^class Critic(nn.Module):$/;"	c
Critic	copg/rcvip_racing/network.py	/^class Critic(nn.Module):$/;"	c
Critic_tan	copg/car_racing/network.py	/^class Critic_tan(nn.Module):$/;"	c
Critic_tan	copg/rcvip_racing/network.py	/^class Critic_tan(nn.Module):$/;"	c
CrosstrackErrorTracker	extension/CrosstrackErrorTracker.py	/^class CrosstrackErrorTracker(Extension):$/;"	c
CvarCarController	controller/cvar/CvarCarController.py	/^class CvarCarController(CarController):$/;"	c
D	controller/mppi/toy_examples/invertedPendulum.py	/^    D = 2$/;"	v
DT	controller/ccmppi/ccmppi.cu	/^#define DT /;"	d	file:
DT	controller/cvar/cvar_racecar.cu	/^#define DT /;"	d	file:
DT	controller/mppi/mppi_racecar.cu	/^#define DT /;"	d	file:
Default	copg/car_racing/.idea/workspace.xml	/^    <task active="true" id="Default" summary="Default task">$/;"	i
Default	copg/rcvip_racing/.idea/workspace.xml	/^    <task active="true" id="Default" summary="Default task">$/;"	i
DoubleValue	third_party/NatNetClient.py	/^DoubleValue = struct.Struct( '<d' )$/;"	v
Dummy	misc/testGpuDynamics.py	/^class Dummy():$/;"	c
DynamicSimulator	extension/simulator/DynamicSimulator.py	/^class DynamicSimulator(Simulator):$/;"	c
ET	configGenerator.py	/^import xml.etree.ElementTree as ET$/;"	I	nameref:module:xml.etree.ElementTree
ET	configs/noise.py	/^import xml.etree.ElementTree as ET$/;"	I	nameref:module:xml.etree.ElementTree
ET	run.py	/^import xml.etree.ElementTree as ET$/;"	I	nameref:module:xml.etree.ElementTree
ET	util/plotTrajectory.py	/^import xml.etree.ElementTree as ET$/;"	I	nameref:module:xml.etree.ElementTree
EmptyCarController	controller/EmptyCarController.py	/^class EmptyCarController(CarController):$/;"	c
EmptyTrack	track/EmptyTrack.py	/^class EmptyTrack(Track):$/;"	c
ExperimentType	common.py	/^class ExperimentType(Enum):$/;"	c
Extension	extension/Extension.py	/^class Extension(PrintObject):$/;"	c
F	copg/car_racing/network.py	/^import torch.nn.functional as F$/;"	I	nameref:module:torch.nn.functional
F	copg/rcvip_racing/network.py	/^import torch.nn.functional as F$/;"	I	nameref:module:torch.nn.functional
F	misc/hybridDynamicSimNew.py	/^import torch.nn.functional as F$/;"	I	nameref:module:torch.nn.functional
F	misc/hybridKinematicSim.py	/^import torch.nn.functional as F$/;"	I	nameref:module:torch.nn.functional
F	misc/hybridSim.py	/^import torch.nn.functional as F$/;"	I	nameref:module:torch.nn.functional
F	misc/throttle_model.py	/^from torch.nn import functional as F$/;"	x	nameref:unknown:functional
Factory	car/Car.py	/^    def Factory(cls, main, config):$/;"	m	class:Car
FloatValue	third_party/NatNetClient.py	/^FloatValue = struct.Struct( '<f' )$/;"	v
G	sysid/cg.py	/^G = Gf + Gr$/;"	v
Gf	sysid/cg.py	/^Gf = 70.26$/;"	v
Gifsaver	extension/Gifsaver.py	/^class Gifsaver(Extension):$/;"	c
Gl	sysid/cg.py	/^Gl = 82.67$/;"	v
Gr	sysid/cg.py	/^        Gr = G - Gs[i]$/;"	v
Gr	sysid/cg.py	/^Gr = 82.28$/;"	v
Gr	sysid/cg.py	/^Gr = 96.78$/;"	v
Gs	sysid/cg.py	/^Gs = [87.65,84.61,97.23,99.4]$/;"	v
HORIZON	controller/ccmppi/ccmppi.cu	/^#define HORIZON /;"	d	file:
HORIZON	controller/cvar/cvar_racecar.cu	/^#define HORIZON /;"	d	file:
HORIZON	controller/mppi/mppi_racecar.cu	/^#define HORIZON /;"	d	file:
I2	controller/mppi/toy_examples/dampedBox.py	/^        I2 = np.eye(2)$/;"	v
IMPULSE_NOISE_PROBABILITY	controller/cvar/cvar_racecar.cu	/^#define IMPULSE_NOISE_PROBABILITY /;"	d	file:
InvertedPendulum	controller/mppi/toy_examples/invertedPendulum.py	/^class InvertedPendulum:$/;"	c
Iz	misc/hybridDynamicSimNew.py	/^    def Iz(self):$/;"	m	class:hybridDynamicSimNew
Iz	misc/hybridKinematicSim.py	/^    def Iz(self):$/;"	m	class:hybridKinematicSim
Iz	misc/hybridSim.py	/^    def Iz(self):$/;"	m	class:hybridSim
Joystick	misc/joystick.py	/^class Joystick:$/;"	c
K	controller/ccmppi/curand.py	/^K = 8192$/;"	v
K	controller/mppi/toy_examples/curand.py	/^K = 8192$/;"	v
K	sysid/steeringSysid.py	/^K = res.x$/;"	v
K_vec	track/RCPTrack.py	/^K_vec = [] # curvature$/;"	v
KalmanFilter	util/kalmanFilter.py	/^class KalmanFilter():$/;"	c
KinematicSimulator	extension/simulator/KinematicSimulator.py	/^class KinematicSimulator(Simulator):$/;"	c
Kp	copg/car_racing_simulator/pure_pursuit.py	/^Kp = 1.0  # speed proportional gain$/;"	v
L	copg/car_racing_simulator/pure_pursuit.py	/^L = 0.029 + 0.033  # [m] wheel base of vehicle$/;"	v
L	sysid/cg.py	/^L = wb = 90$/;"	v
LA	copg/car_racing_simulator/Track.py	/^from numpy import linalg as LA$/;"	x	nameref:unknown:linalg
LapCounter	extension/LapCounter.py	/^class LapCounter(Extension):$/;"	c
Laptimer	controller/ccmppi/ccmppi_dynamic.py	/^from extension.Laptimer import _Laptimer as Laptimer$/;"	x	nameref:unknown:_Laptimer
Laptimer	controller/ccmppi/ccmppi_kinematic.py	/^from extension.Laptimer import _Laptimer as Laptimer$/;"	x	nameref:unknown:_Laptimer
Laptimer	extension/Laptimer.py	/^class Laptimer(Extension):$/;"	c
Lfc	copg/car_racing_simulator/pure_pursuit.py	/^Lfc = 0.1 # look-ahead distance$/;"	v
LinearizeDynamics	misc/linearizeDynamics.py	/^class LinearizeDynamics():$/;"	c
Logger	extension/Logger.py	/^class Logger(Extension):$/;"	c
MAX_OBSTACLE_COUNT	controller/cvar/cvar_racecar.cu	/^#define MAX_OBSTACLE_COUNT /;"	d	file:
MAX_V	controller/ccmppi/ccmppi.cu	/^#define MAX_V /;"	d	file:
MODE_CC	controller/ccmppi/ccmppi.cu	/^#define MODE_CC /;"	d	file:
MODE_NOCC	controller/ccmppi/ccmppi.cu	/^#define MODE_NOCC /;"	d	file:
MODE_REF	controller/ccmppi/ccmppi.cu	/^#define MODE_REF /;"	d	file:
MODE_ZERO_REF	controller/ccmppi/ccmppi.cu	/^#define MODE_ZERO_REF /;"	d	file:
MPC	misc/mpc.py	/^class MPC:$/;"	c
MPC	planner/MPC.py	/^class MPC:$/;"	c
MPC	planner/old_MPC.py	/^class MPC:$/;"	c
Main	misc/QfDemo.py	/^class Main():$/;"	c
Main	misc/benchmark.py	/^class Main():$/;"	c
Main	misc/oneObstacle.py	/^class Main():$/;"	c
Main	run.py	/^class Main(PrintObject):$/;"	c
Model	controller/mppi/toy_examples/mppiJisModel.py	/^class Model:$/;"	c
Model	misc/cs_test.py	/^class Model:$/;"	c
MppiCarController	controller/mppi/MppiCarController.py	/^class MppiCarController(CarController):$/;"	c
MyDataset	misc/sysidTrainDynamicHybridSim.py	/^class MyDataset(Dataset):$/;"	c
MyDataset	misc/sysidTrainDynamicNewHybridSim.py	/^class MyDataset(Dataset):$/;"	c
MyDataset	misc/sysidTrainKinematicHybridSim.py	/^class MyDataset(Dataset):$/;"	c
NAT_DISCONNECT	third_party/NatNetClient.py	/^    NAT_DISCONNECT            = 9 $/;"	v	class:NatNetClient
NAT_FRAMEOFDATA	third_party/NatNetClient.py	/^    NAT_FRAMEOFDATA           = 7$/;"	v	class:NatNetClient
NAT_MESSAGESTRING	third_party/NatNetClient.py	/^    NAT_MESSAGESTRING         = 8$/;"	v	class:NatNetClient
NAT_MODELDEF	third_party/NatNetClient.py	/^    NAT_MODELDEF              = 5$/;"	v	class:NatNetClient
NAT_PING	third_party/NatNetClient.py	/^    NAT_PING                  = 0 $/;"	v	class:NatNetClient
NAT_PINGRESPONSE	third_party/NatNetClient.py	/^    NAT_PINGRESPONSE          = 1$/;"	v	class:NatNetClient
NAT_REQUEST	third_party/NatNetClient.py	/^    NAT_REQUEST               = 2$/;"	v	class:NatNetClient
NAT_REQUEST_FRAMEOFDATA	third_party/NatNetClient.py	/^    NAT_REQUEST_FRAMEOFDATA   = 6$/;"	v	class:NatNetClient
NAT_REQUEST_MODELDEF	third_party/NatNetClient.py	/^    NAT_REQUEST_MODELDEF      = 4$/;"	v	class:NatNetClient
NAT_RESPONSE	third_party/NatNetClient.py	/^    NAT_RESPONSE              = 3$/;"	v	class:NatNetClient
NAT_UNRECOGNIZED_REQUEST	third_party/NatNetClient.py	/^    NAT_UNRECOGNIZED_REQUEST  = 100$/;"	v	class:NatNetClient
NatNetClient	third_party/NatNetClient.py	/^class NatNetClient:$/;"	c
Net	misc/throttle_model.py	/^class Net(torch.nn.Module):$/;"	c
Node	track/RCPTrack.py	/^class Node:$/;"	c
OBSTACLE_RADIUS	controller/cvar/cvar_racecar.cu	/^#define OBSTACLE_RADIUS /;"	d	file:
OBSTACLE_RADIUS	controller/mppi/mppi_racecar.cu	/^#define OBSTACLE_RADIUS /;"	d	file:
OBSTACLE_X	controller/cvar/cvar_racecar.cu	/^#define OBSTACLE_X /;"	d	file:
OBSTACLE_Y	controller/cvar/cvar_racecar.cu	/^#define OBSTACLE_Y /;"	d	file:
Offboard	car/Offboard.py	/^class Offboard(PrintObject,Car):$/;"	c
OffboardPacket	car/Offboard.py	/^class OffboardPacket(PrintObject):$/;"	c
OldOffboard	car/OldOffboard.py	/^class OldOffboard(Car):$/;"	c
Optitrack	extension/Optitrack.py	/^class Optitrack(Extension,PrintObject):$/;"	c
P	controller/mppi/toy_examples/dampedBox.py	/^    P = np.diag([1,0])$/;"	v
PARAM_B	controller/cvar/cvar_racecar.cu	/^#define PARAM_B /;"	d	file:
PARAM_B	controller/mppi/mppi_racecar.cu	/^#define PARAM_B /;"	d	file:
PARAM_C	controller/cvar/cvar_racecar.cu	/^#define PARAM_C /;"	d	file:
PARAM_C	controller/mppi/mppi_racecar.cu	/^#define PARAM_C /;"	d	file:
PARAM_D	controller/cvar/cvar_racecar.cu	/^#define PARAM_D /;"	d	file:
PARAM_D	controller/mppi/mppi_racecar.cu	/^#define PARAM_D /;"	d	file:
PARAM_IZ	controller/cvar/cvar_racecar.cu	/^#define PARAM_IZ /;"	d	file:
PARAM_IZ	controller/mppi/mppi_racecar.cu	/^#define PARAM_IZ /;"	d	file:
PARAM_L	controller/ccmppi/ccmppi.cu	/^#define PARAM_L /;"	d	file:
PARAM_L	controller/cvar/cvar_racecar.cu	/^#define PARAM_L /;"	d	file:
PARAM_L	controller/mppi/mppi_racecar.cu	/^#define PARAM_L /;"	d	file:
PARAM_LF	controller/cvar/cvar_racecar.cu	/^#define PARAM_LF /;"	d	file:
PARAM_LF	controller/mppi/mppi_racecar.cu	/^#define PARAM_LF /;"	d	file:
PARAM_LR	controller/ccmppi/ccmppi.cu	/^#define PARAM_LR /;"	d	file:
PARAM_LR	controller/cvar/cvar_racecar.cu	/^#define PARAM_LR /;"	d	file:
PARAM_LR	controller/mppi/mppi_racecar.cu	/^#define PARAM_LR /;"	d	file:
PARAM_MASS	controller/cvar/cvar_racecar.cu	/^#define PARAM_MASS /;"	d	file:
PARAM_MASS	controller/mppi/mppi_racecar.cu	/^#define PARAM_MASS /;"	d	file:
PI	controller/ccmppi/ccmppi.cu	/^#define PI /;"	d	file:
PI	controller/cvar/cvar_racecar.cu	/^#define PI /;"	d	file:
PI	controller/mppi/mppi_racecar.cu	/^#define PI /;"	d	file:
PIDControl	copg/car_racing_simulator/pure_pursuit.py	/^def PIDControl(target, current):$/;"	f
PerformanceTracker	extension/PerformanceTracker.py	/^class PerformanceTracker(Extension):$/;"	c
PidController	controller/PidController.py	/^class PidController:$/;"	c
Planner	planner/Planner.py	/^class Planner(ConfigObject):$/;"	c
PrintObject	common.py	/^class PrintObject:$/;"	c
PurePursuitCarController	controller/PurePursuitCarController.py	/^class PurePursuitCarController(CarController):$/;"	c
Q	controller/mppi/toy_examples/dampedBox.py	/^    Q = 0$/;"	v
Qfs	misc/QfDemo.py	/^    Qfs = [0,10,40]$/;"	v
Qfs	misc/QfDemo.py	/^    Qfs = np.linspace(0,3,31)$/;"	v
QpSmooth	qpSmooth.py	/^class QpSmooth(RCPTrack):$/;"	c
Quaternion	third_party/NatNetClient.py	/^Quaternion = struct.Struct( '<ffff' )$/;"	v
R	misc/advCarSim.py	/^        R = lambda angle: np.array([[cos(angle), 0,-sin(angle),0,0,0],$/;"	f	member:advCarSim.updateCar	file:
R	misc/hybridKinematicSim.py	/^        R = lambda angle: np.array([[cos(angle), 0,-sin(angle),0,0,0],$/;"	f	member:hybridKinematicSim.testForward	file:
R	misc/hybridSim.py	/^        R = lambda angle: np.array([[cos(angle), 0,-sin(angle),0,0,0],$/;"	f	member:hybridSim.testForward	file:
R2euler	misc/tf.py	/^    def R2euler(self,R):$/;"	m	class:TF
RACELINE_DIM	controller/ccmppi/ccmppi.cu	/^#define RACELINE_DIM /;"	d	file:
RACELINE_DIM	controller/cvar/cvar_racecar.cu	/^#define RACELINE_DIM /;"	d	file:
RACELINE_DIM	controller/mppi/mppi_racecar.cu	/^#define RACELINE_DIM /;"	d	file:
RACELINE_HEADING	controller/ccmppi/ccmppi.cu	/^#define RACELINE_HEADING /;"	d	file:
RACELINE_HEADING	controller/cvar/cvar_racecar.cu	/^#define RACELINE_HEADING /;"	d	file:
RACELINE_HEADING	controller/mppi/mppi_racecar.cu	/^#define RACELINE_HEADING /;"	d	file:
RACELINE_LEFT_BOUNDARY	controller/ccmppi/ccmppi.cu	/^#define RACELINE_LEFT_BOUNDARY /;"	d	file:
RACELINE_LEFT_BOUNDARY	controller/cvar/cvar_racecar.cu	/^#define RACELINE_LEFT_BOUNDARY /;"	d	file:
RACELINE_LEFT_BOUNDARY	controller/mppi/mppi_racecar.cu	/^#define RACELINE_LEFT_BOUNDARY /;"	d	file:
RACELINE_LEN	controller/ccmppi/ccmppi.cu	/^#define RACELINE_LEN /;"	d	file:
RACELINE_LEN	controller/cvar/cvar_racecar.cu	/^#define RACELINE_LEN /;"	d	file:
RACELINE_LEN	controller/mppi/mppi_racecar.cu	/^#define RACELINE_LEN /;"	d	file:
RACELINE_RIGHT_BOUNDARY	controller/ccmppi/ccmppi.cu	/^#define RACELINE_RIGHT_BOUNDARY /;"	d	file:
RACELINE_RIGHT_BOUNDARY	controller/cvar/cvar_racecar.cu	/^#define RACELINE_RIGHT_BOUNDARY /;"	d	file:
RACELINE_RIGHT_BOUNDARY	controller/mppi/mppi_racecar.cu	/^#define RACELINE_RIGHT_BOUNDARY /;"	d	file:
RACELINE_SEARCH_RANGE	controller/ccmppi/ccmppi.cu	/^#define RACELINE_SEARCH_RANGE /;"	d	file:
RACELINE_SEARCH_RANGE	controller/cvar/cvar_racecar.cu	/^#define RACELINE_SEARCH_RANGE /;"	d	file:
RACELINE_SEARCH_RANGE	controller/mppi/mppi_racecar.cu	/^#define RACELINE_SEARCH_RANGE /;"	d	file:
RACELINE_V	controller/ccmppi/ccmppi.cu	/^#define RACELINE_V /;"	d	file:
RACELINE_V	controller/cvar/cvar_racecar.cu	/^#define RACELINE_V /;"	d	file:
RACELINE_V	controller/mppi/mppi_racecar.cu	/^#define RACELINE_V /;"	d	file:
RACELINE_X	controller/ccmppi/ccmppi.cu	/^#define RACELINE_X /;"	d	file:
RACELINE_X	controller/cvar/cvar_racecar.cu	/^#define RACELINE_X /;"	d	file:
RACELINE_X	controller/mppi/mppi_racecar.cu	/^#define RACELINE_X /;"	d	file:
RACELINE_Y	controller/ccmppi/ccmppi.cu	/^#define RACELINE_Y /;"	d	file:
RACELINE_Y	controller/cvar/cvar_racecar.cu	/^#define RACELINE_Y /;"	d	file:
RACELINE_Y	controller/mppi/mppi_racecar.cu	/^#define RACELINE_Y /;"	d	file:
RCPTrack	track/RCPTrack.py	/^class RCPTrack(Track,PrintObject):$/;"	c
RCoPG	copg/copg_optim/copg.py	/^class RCoPG(object):$/;"	c
Realworld	common.py	/^    Realworld = auto()$/;"	v	class:ExperimentType
SAMPLE_COUNT	controller/ccmppi/ccmppi.cu	/^#define SAMPLE_COUNT /;"	d	file:
SAMPLE_COUNT	controller/cvar/cvar_racecar.cu	/^#define SAMPLE_COUNT /;"	d	file:
SAMPLE_COUNT	controller/mppi/mppi_racecar.cu	/^#define SAMPLE_COUNT /;"	d	file:
STATE_DIM	controller/ccmppi/ccmppi.cu	/^#define STATE_DIM /;"	d	file:
STATE_DIM	controller/cvar/cvar_racecar.cu	/^#define STATE_DIM /;"	d	file:
STATE_DIM	controller/mppi/mppi_racecar.cu	/^#define STATE_DIM /;"	d	file:
STATE_HEADING	controller/cvar/cvar_racecar.cu	/^#define STATE_HEADING /;"	d	file:
STATE_HEADING	controller/mppi/mppi_racecar.cu	/^#define STATE_HEADING /;"	d	file:
STATE_OMEGA	controller/cvar/cvar_racecar.cu	/^#define STATE_OMEGA /;"	d	file:
STATE_OMEGA	controller/mppi/mppi_racecar.cu	/^#define STATE_OMEGA /;"	d	file:
STATE_VX	controller/cvar/cvar_racecar.cu	/^#define STATE_VX /;"	d	file:
STATE_VX	controller/mppi/mppi_racecar.cu	/^#define STATE_VX /;"	d	file:
STATE_VY	controller/cvar/cvar_racecar.cu	/^#define STATE_VY /;"	d	file:
STATE_VY	controller/mppi/mppi_racecar.cu	/^#define STATE_VY /;"	d	file:
STATE_X	controller/cvar/cvar_racecar.cu	/^#define STATE_X /;"	d	file:
STATE_X	controller/mppi/mppi_racecar.cu	/^#define STATE_X /;"	d	file:
STATE_Y	controller/cvar/cvar_racecar.cu	/^#define STATE_Y /;"	d	file:
STATE_Y	controller/mppi/mppi_racecar.cu	/^#define STATE_Y /;"	d	file:
SUBSAMPLE_COUNT	controller/cvar/cvar_racecar.cu	/^#define SUBSAMPLE_COUNT /;"	d	file:
Simulation	common.py	/^    Simulation = auto()$/;"	v	class:ExperimentType
Simulator	extension/Simulator.py	/^class Simulator(Extension,PrintObject):$/;"	c
Skidpad	track/Skidpad.py	/^class Skidpad(Track):$/;"	c
SnapshotSaver	extension/SnapshotSaver.py	/^class SnapshotSaver(Extension):$/;"	c
StanleyCarController	controller/StanleyCarController.py	/^class StanleyCarController(CarController):$/;"	c
State	copg/car_racing_simulator/pure_pursuit.py	/^class State:$/;"	c
SteeringTracker	extension/SteeringTracker.py	/^class SteeringTracker(Extension):$/;"	c
SteeringTuner	extension/SteeringTuner.py	/^class SteeringTuner(Extension):$/;"	c
StepCounter	extension/StepCounter.py	/^class StepCounter(Extension):$/;"	c
T	controller/ccmppi/curand.py	/^T = 30$/;"	v
T	controller/mppi/toy_examples/curand.py	/^T = 30$/;"	v
T	controller/mppi/toy_examples/dampedBox.py	/^    T = 20$/;"	v
T	sysid/steadyStateThrottle.py	/^T = [0.268,0.29,0.3,0.317]$/;"	v
TEMPERATURE	controller/ccmppi/ccmppi.cu	/^#define TEMPERATURE /;"	d	file:
TEMPERATURE	controller/cvar/cvar_racecar.cu	/^#define TEMPERATURE /;"	d	file:
TEMPERATURE	controller/mppi/mppi_racecar.cu	/^#define TEMPERATURE /;"	d	file:
TF	misc/tf.py	/^class TF:$/;"	c
Test	copg/rcvip_racing/trackTest.py	/^class Test:$/;"	c
TorsionPendulum	sysid/torsionPendulum.py	/^class TorsionPendulum:$/;"	c
Track	copg/car_racing/copg_orca.py	/^import car_racing_simulator.Track as Track$/;"	I	nameref:module:car_racing_simulator.Track
Track	copg/car_racing/gda_orca.py	/^import car_racing_simulator.Track as Track$/;"	I	nameref:module:car_racing_simulator.Track
Track	copg/car_racing/results.py	/^import car_racing_simulator.Track as Track$/;"	I	nameref:module:car_racing_simulator.Track
Track	copg/car_racing_simulator/Track.py	/^class Track:$/;"	c
Track	copg/car_racing_simulator/VehicleModel.py	/^import car_racing_simulator.Track as Track$/;"	I	nameref:module:car_racing_simulator.Track
Track	copg/car_racing_simulator/cpg_main.py	/^import dpg_orca.Track as Track$/;"	I	nameref:module:dpg_orca.Track
Track	copg/rcvip_racing/copg_orca.py	/^import car_racing_simulator.Track as Track$/;"	I	nameref:module:car_racing_simulator.Track
Track	copg/rcvip_racing/fun.py	/^import car_racing_simulator.Track as Track$/;"	I	nameref:module:car_racing_simulator.Track
Track	copg/rcvip_racing/gda_orca.py	/^import car_racing_simulator.Track as Track$/;"	I	nameref:module:car_racing_simulator.Track
Track	copg/rcvip_racing/results.py	/^import car_racing_simulator.Track as Track$/;"	I	nameref:module:car_racing_simulator.Track
Track	copg/rcvip_racing/trackTest.py	/^import car_racing_simulator.Track as Track$/;"	I	nameref:module:car_racing_simulator.Track
Track	results.py	/^import car_racing_simulator.Track as Track$/;"	I	nameref:module:car_racing_simulator.Track
Track	track/Track.py	/^class Track(object):$/;"	c
TrackFactory	track/TrackFactory.py	/^def TrackFactory(config,name=None):$/;"	f
TrajectoryPlotter	extension/TrajectoryPlotter.py	/^class TrajectoryPlotter(Extension):$/;"	c
UKF	misc/ukf.py	/^class UKF:$/;"	c
Vector3	third_party/NatNetClient.py	/^Vector3 = struct.Struct( '<fff' )$/;"	v
VehicleModel	copg/car_racing/copg_orca.py	/^import car_racing_simulator.VehicleModel as VehicleModel$/;"	I	nameref:module:car_racing_simulator.VehicleModel
VehicleModel	copg/car_racing/gda_orca.py	/^import car_racing_simulator.VehicleModel as VehicleModel$/;"	I	nameref:module:car_racing_simulator.VehicleModel
VehicleModel	copg/car_racing/results.py	/^import car_racing_simulator.VehicleModel as VehicleModel$/;"	I	nameref:module:car_racing_simulator.VehicleModel
VehicleModel	copg/car_racing_simulator/VehicleModel.py	/^class VehicleModel():$/;"	c
VehicleModel	copg/car_racing_simulator/cpg_main.py	/^import dpg_orca.VehicleModel as VehicleModel$/;"	I	nameref:module:dpg_orca.VehicleModel
VehicleModel	copg/car_racing_simulator/main.py	/^import dpg_orca.VehicleModel as VehicleModel$/;"	I	nameref:module:dpg_orca.VehicleModel
VehicleModel	copg/rcvip_racing/copg_orca.py	/^import car_racing_simulator.VehicleModel as VehicleModel$/;"	I	nameref:module:car_racing_simulator.VehicleModel
VehicleModel	copg/rcvip_racing/fun.py	/^import car_racing_simulator.VehicleModel as VehicleModel$/;"	I	nameref:module:car_racing_simulator.VehicleModel
VehicleModel	copg/rcvip_racing/gda_orca.py	/^import car_racing_simulator.VehicleModel as VehicleModel$/;"	I	nameref:module:car_racing_simulator.VehicleModel
VehicleModel	copg/rcvip_racing/results.py	/^import car_racing_simulator.VehicleModel as VehicleModel$/;"	I	nameref:module:car_racing_simulator.VehicleModel
VehicleModel	results.py	/^import car_racing_simulator.VehicleModel as VehicleModel$/;"	I	nameref:module:car_racing_simulator.VehicleModel
Vicon	misc/vicon.py	/^class Vicon:$/;"	c
Visualization	extension/Visualization.py	/^class Visualization(Extension):$/;"	c
W	copg/car_racing/orca_env_function.py	/^W = 0.03$/;"	v
W	copg/rcvip_racing/orca_env_function.py	/^W = 0.03$/;"	v
Watchdog	extension/Watchdog.py	/^class Watchdog(Extension):$/;"	c
ZERO_REF_CTRL_RATIO	controller/ccmppi/ccmppi.cu	/^#define ZERO_REF_CTRL_RATIO /;"	d	file:
_Laptimer	extension/Laptimer.py	/^class _Laptimer:$/;"	c
_Optitrack	extension/Optitrack.py	/^class _Optitrack(PrintObject):$/;"	c
__announceThread	extension/Laptimer.py	/^    def __announceThread(self):$/;"	m	class:_Laptimer	file:
__commThreadFunction	car/Offboard.py	/^    def __commThreadFunction( self, arg ):$/;"	m	class:Offboard	file:
__createCommandSocket	third_party/NatNetClient.py	/^    def __createCommandSocket( self ):$/;"	m	class:NatNetClient	file:
__createDataSocket	third_party/NatNetClient.py	/^    def __createDataSocket( self, port ):$/;"	m	class:NatNetClient	file:
__dataThreadFunction	third_party/NatNetClient.py	/^    def __dataThreadFunction( self, sock ):$/;"	m	class:NatNetClient	file:
__del__	car/OldOffboard.py	/^    def __del__(self):$/;"	m	class:OldOffboard
__del__	extension/Optitrack.py	/^    def __del__(self):$/;"	m	class:_Optitrack
__del__	misc/vicon.py	/^    def __del__(self):$/;"	m	class:Vicon
__getitem__	misc/sysidDataloader.py	/^    def __getitem__(self, idx):$/;"	m	class:CarDataset
__getitem__	misc/sysidTrainDynamicHybridSim.py	/^    def __getitem__(self, idx):$/;"	m	class:MyDataset
__getitem__	misc/sysidTrainDynamicNewHybridSim.py	/^    def __getitem__(self, idx):$/;"	m	class:MyDataset
__getitem__	misc/sysidTrainKinematicHybridSim.py	/^    def __getitem__(self, idx):$/;"	m	class:MyDataset
__init__	car/Car.py	/^    def __init__(self,main):$/;"	m	class:Car
__init__	car/Offboard.py	/^    def __init__(self):$/;"	m	class:OffboardPacket
__init__	car/Offboard.py	/^    def __init__(self,main):$/;"	m	class:Offboard
__init__	car/OldOffboard.py	/^    def __init__(self,main):$/;"	m	class:OldOffboard
__init__	common.py	/^    def __init__(self):$/;"	m	class:PrintObject
__init__	common.py	/^    def __init__(self,config):$/;"	m	class:ConfigObject
__init__	controller/CarController.py	/^    def __init__(self, car, config):$/;"	m	class:CarController
__init__	controller/EmptyCarController.py	/^    def __init__(self, car,config):$/;"	m	class:EmptyCarController
__init__	controller/PidController.py	/^    def __init__(self, p, i, d, dt, integral_limit, lpf_cutoff_freq):$/;"	m	class:PidController
__init__	controller/PurePursuitCarController.py	/^    def __init__(self, car,config):$/;"	m	class:PurePursuitCarController
__init__	controller/StanleyCarController.py	/^    def __init__(self, car,config):$/;"	m	class:StanleyCarController
__init__	controller/ccmppi/CcmppiCarController.py	/^    def __init__(self,car,config):$/;"	m	class:CcmppiCarController
__init__	controller/ccmppi/ccmppi.py	/^    def __init__(self,arg_list):$/;"	m	class:CCMPPI
__init__	controller/ccmppi/ccmppi_dynamic.py	/^    def __init__(self,dt, N, noise_cov, debug_info=None):$/;"	m	class:CCMPPI_DYNAMIC
__init__	controller/ccmppi/ccmppi_kinematic.py	/^    def __init__(self,dt, N, noise_cov, debug_info=None):$/;"	m	class:CCMPPI_KINEMATIC
__init__	controller/ccmppi/oldCcmppi.py	/^    def __init__(self,car):$/;"	m	class:CcmppiCarController
__init__	controller/cvar/CvarCarController.py	/^    def __init__(self,car,config):$/;"	m	class:CvarCarController
__init__	controller/mppi/MppiCarController.py	/^    def __init__(self,car,config):$/;"	m	class:MppiCarController
__init__	controller/mppi/toy_examples/dampedBox.py	/^    def __init__(self):$/;"	m	class:Box
__init__	controller/mppi/toy_examples/dualMass.py	/^    def __init__(self,x0=[0,0,0,0]):$/;"	m	class:dualMass
__init__	controller/mppi/toy_examples/invertedPendulum.py	/^    def __init__(self,x0=[0,0]):$/;"	m	class:InvertedPendulum
__init__	controller/mppi/toy_examples/mppiJisModel.py	/^    def __init__(self,x0=[10,0,1,3],x_goal=[-5,0,0,0]):$/;"	m	class:Model
__init__	copg/car_racing/network.py	/^    def __init__(self, state_dim):$/;"	m	class:Critic
__init__	copg/car_racing/network.py	/^    def __init__(self, state_dim):$/;"	m	class:Critic_tan
__init__	copg/car_racing/network.py	/^    def __init__(self, state_dim, action_dim, std=1.0):$/;"	m	class:Actor
__init__	copg/car_racing/network.py	/^    def __init__(self, state_dim, action_dim, std=1.0):$/;"	m	class:ActorCritic
__init__	copg/car_racing/network.py	/^    def __init__(self, state_dim, action_dim, std=1.0):$/;"	m	class:ActorCriticVar
__init__	copg/car_racing/network.py	/^    def __init__(self, state_dim, action_dim, std=1.0):$/;"	m	class:ActorVar
__init__	copg/car_racing/network.py	/^    def __init__(self, state_dim, action_dim, std=1.0):$/;"	m	class:Actor_tan
__init__	copg/car_racing_simulator/Track.py	/^    def __init__(self,config):$/;"	m	class:Track
__init__	copg/car_racing_simulator/VehicleModel.py	/^    def __init__(self,n_batch,device,config):$/;"	m	class:VehicleModel
__init__	copg/car_racing_simulator/pure_pursuit.py	/^    def __init__(self, x=0.0, y=0.0, yaw=0.0, v=0.0):$/;"	m	class:State
__init__	copg/copg_optim/copg.py	/^    def __init__(self, max_params, min_params, eps=1e-8, beta2=0.99, lr=1e-3, weight_decay=0, de/;"	m	class:RCoPG
__init__	copg/copg_optim/copg.py	/^    def __init__(self, max_params, min_params, lr=1e-3, weight_decay=0, device=torch.device('cpu/;"	m	class:CoPG
__init__	copg/rcvip_racing/network.py	/^    def __init__(self, state_dim):$/;"	m	class:Critic
__init__	copg/rcvip_racing/network.py	/^    def __init__(self, state_dim):$/;"	m	class:Critic_tan
__init__	copg/rcvip_racing/network.py	/^    def __init__(self, state_dim, action_dim, std=1.0):$/;"	m	class:Actor
__init__	copg/rcvip_racing/network.py	/^    def __init__(self, state_dim, action_dim, std=1.0):$/;"	m	class:ActorCritic
__init__	copg/rcvip_racing/network.py	/^    def __init__(self, state_dim, action_dim, std=1.0):$/;"	m	class:ActorCriticVar
__init__	copg/rcvip_racing/network.py	/^    def __init__(self, state_dim, action_dim, std=1.0):$/;"	m	class:ActorVar
__init__	copg/rcvip_racing/network.py	/^    def __init__(self, state_dim, action_dim, std=1.0):$/;"	m	class:Actor_tan
__init__	copg/rcvip_racing/trackTest.py	/^    def __init__(self):$/;"	m	class:Test
__init__	extension/BoundaryChecker.py	/^    def __init__(self,main):$/;"	m	class:BoundaryChecker
__init__	extension/CollisionChecker.py	/^    def __init__(self,main):$/;"	m	class:CollisionChecker
__init__	extension/ConfigLogger.py	/^    def __init__(self,main):$/;"	m	class:ConfigLogger
__init__	extension/CrosstrackErrorTracker.py	/^    def __init__(self,main):$/;"	m	class:CrosstrackErrorTracker
__init__	extension/Extension.py	/^    def __init__(self,main):$/;"	m	class:Extension
__init__	extension/Gifsaver.py	/^    def __init__(self,main):$/;"	m	class:Gifsaver
__init__	extension/LapCounter.py	/^    def __init__(self, main):$/;"	m	class:LapCounter
__init__	extension/Laptimer.py	/^    def __init__(self, main):$/;"	m	class:Laptimer
__init__	extension/Laptimer.py	/^    def __init__(self,finish,orientation,voice=False):$/;"	m	class:_Laptimer
__init__	extension/Logger.py	/^    def __init__(self,main):$/;"	m	class:Logger
__init__	extension/Optitrack.py	/^    def __init__(self, main):$/;"	m	class:Optitrack
__init__	extension/Optitrack.py	/^    def __init__(self,base,enableKF=True):$/;"	m	class:_Optitrack
__init__	extension/PerformanceTracker.py	/^    def __init__(self,main):$/;"	m	class:PerformanceTracker
__init__	extension/Simulator.py	/^    def __init__(self,main):$/;"	m	class:Simulator
__init__	extension/SnapshotSaver.py	/^    def __init__(self,main):$/;"	m	class:SnapshotSaver
__init__	extension/SteeringTracker.py	/^    def __init__(self, main):$/;"	m	class:SteeringTracker
__init__	extension/SteeringTuner.py	/^    def __init__(self,main):$/;"	m	class:SteeringTuner
__init__	extension/StepCounter.py	/^    def __init__(self,main):$/;"	m	class:StepCounter
__init__	extension/TrajectoryPlotter.py	/^    def __init__(self,main):$/;"	m	class:TrajectoryPlotter
__init__	extension/Visualization.py	/^    def __init__(self,main):$/;"	m	class:Visualization
__init__	extension/Watchdog.py	/^    def __init__(self,main):$/;"	m	class:Watchdog
__init__	extension/simulator/DynamicSimulator.py	/^    def __init__(self,main):$/;"	m	class:DynamicSimulator
__init__	extension/simulator/KinematicSimulator.py	/^    def __init__(self,main):$/;"	m	class:KinematicSimulator
__init__	misc/QfDemo.py	/^    def __init__(self,params={}):$/;"	m	class:Main
__init__	misc/advCarSim.py	/^    def __init__(self,x,y,heading,noise=False,noise_cov=None):$/;"	m	class:advCarSim
__init__	misc/benchmark.py	/^    def __init__(self,params={}):$/;"	m	class:Main
__init__	misc/cs_solver.py	/^    def __init__(self, n, m, l, N, u_min, u_max, mean_only=False, lti_k=False):$/;"	m	class:CSSolver
__init__	misc/cs_solver_covariance_only.py	/^    def __init__(self, n, m, l, N, u_min, u_max, mean_only=False, lti_k=False):$/;"	m	class:CSSolver
__init__	misc/cs_test.py	/^    def __init__(self, N):$/;"	m	class:Model
__init__	misc/ctrlEmptyWrapper.py	/^    def __init__(self):$/;"	m	class:ctrlEmptyWrapper
__init__	misc/ctrlMpcWrapper.py	/^    def __init__(self,car_setting,dt):$/;"	m	class:ctrlMpcWrapper
__init__	misc/ctrlMppiWrapper.py	/^    def __init__(self,car_setting,dt):$/;"	m	class:ctrlMppiWrapper
__init__	misc/ethCarSim.py	/^    def __init__(self,x,y,heading,noise=False,noise_cov=None):$/;"	m	class:ethCarSim
__init__	misc/hybridDynamicSimNew.py	/^    def __init__(self, dtype, device, history_steps, forward_steps, dt):$/;"	m	class:hybridDynamicSimNew
__init__	misc/hybridKinematicSim.py	/^    def __init__(self, dtype, device, history_steps, forward_steps, dt):$/;"	m	class:hybridKinematicSim
__init__	misc/hybridSim.py	/^    def __init__(self, dtype, device, history_steps, forward_steps, dt):$/;"	m	class:hybridSim
__init__	misc/joystick.py	/^    def __init__(self,):$/;"	m	class:Joystick
__init__	misc/linearizeDynamics.py	/^    def __init__(self,horizon):$/;"	m	class:LinearizeDynamics
__init__	misc/mpc.py	/^    def __init__(self,):$/;"	m	class:MPC
__init__	misc/oldkinematicSimulator.py	/^    def __init__(self,X=None):$/;"	m	class:kinematicSimulator
__init__	misc/oneObstacle.py	/^    def __init__(self,params={}):$/;"	m	class:Main
__init__	misc/sysidDataloader.py	/^    def __init__(self, log_names, dt, history_steps, forward_steps):$/;"	m	class:CarDataset
__init__	misc/sysidTrainDynamicHybridSim.py	/^    def __init__(self, dataset):$/;"	m	class:MyDataset
__init__	misc/sysidTrainDynamicNewHybridSim.py	/^    def __init__(self, dataset):$/;"	m	class:MyDataset
__init__	misc/sysidTrainKinematicHybridSim.py	/^    def __init__(self, dataset):$/;"	m	class:MyDataset
__init__	misc/testGpuDynamics.py	/^    def __init__(self):$/;"	m	class:Dummy
__init__	misc/tf.py	/^    def __init__(self):$/;"	m	class:TF
__init__	misc/throttle_model.py	/^    def __init__(self):$/;"	m	class:Net
__init__	misc/ukf.py	/^    def __init__(self,):$/;"	m	class:UKF
__init__	misc/vicon.py	/^    def __init__(self,IP=None,PORT=None,daemon=True,enableKF=True):$/;"	m	class:Vicon
__init__	planner/MPC.py	/^    def __init__(self,):$/;"	m	class:MPC
__init__	planner/Planner.py	/^    def __init__(self,config=None):$/;"	m	class:Planner
__init__	planner/old_MPC.py	/^    def __init__(self,):$/;"	m	class:MPC
__init__	qpSmooth.py	/^    def __init__(self):$/;"	m	class:QpSmooth
__init__	run.py	/^    def __init__(self,config_filename):$/;"	m	class:Main
__init__	sysid/torsionPendulum.py	/^    def __init__(self):$/;"	m	class:TorsionPendulum
__init__	third_party/NatNetClient.py	/^    def __init__( self ):$/;"	m	class:NatNetClient
__init__	track/EmptyTrack.py	/^    def __init__(self):$/;"	m	class:EmptyTrack
__init__	track/RCPTrack.py	/^    def __init__(self, previous=None,entrydir=None):$/;"	m	class:Node
__init__	track/RCPTrack.py	/^    def __init__(self,config=None):$/;"	m	class:RCPTrack
__init__	track/Skidpad.py	/^    def __init__(self):$/;"	m	class:Skidpad
__init__	track/Track.py	/^    def __init__(self):$/;"	m	class:Track
__init__	util/kalmanFilter.py	/^    def __init__(self,wheelbase):$/;"	m	class:KalmanFilter
__init__	util/timeUtil.py	/^    def __init__(self, enable = False):$/;"	m	class:execution_timer
__len__	misc/sysidDataloader.py	/^    def __len__(self):$/;"	m	class:CarDataset
__len__	misc/sysidTrainDynamicHybridSim.py	/^    def __len__(self):$/;"	m	class:MyDataset
__len__	misc/sysidTrainDynamicNewHybridSim.py	/^    def __len__(self):$/;"	m	class:MyDataset
__len__	misc/sysidTrainKinematicHybridSim.py	/^    def __len__(self):$/;"	m	class:MyDataset
__processMessage	third_party/NatNetClient.py	/^    def __processMessage( self, data ):$/;"	m	class:NatNetClient	file:
__unpackDataDescriptions	third_party/NatNetClient.py	/^    def __unpackDataDescriptions( self, data ):$/;"	m	class:NatNetClient	file:
__unpackMarkerSetDescription	third_party/NatNetClient.py	/^    def __unpackMarkerSetDescription( self, data ):$/;"	m	class:NatNetClient	file:
__unpackMocapData	third_party/NatNetClient.py	/^    def __unpackMocapData( self, data ):$/;"	m	class:NatNetClient	file:
__unpackRigidBody	third_party/NatNetClient.py	/^    def __unpackRigidBody( self, data ):$/;"	m	class:NatNetClient	file:
__unpackRigidBodyDescription	third_party/NatNetClient.py	/^    def __unpackRigidBodyDescription( self, data ):$/;"	m	class:NatNetClient	file:
__unpackSkeleton	third_party/NatNetClient.py	/^    def __unpackSkeleton( self, data ):$/;"	m	class:NatNetClient	file:
__unpackSkeletonDescription	third_party/NatNetClient.py	/^    def __unpackSkeletonDescription( self, data ):$/;"	m	class:NatNetClient	file:
_evaluate_control_sequence	controller/ccmppi/ccmppi.cu	/^void _evaluate_control_sequence($/;"	f	typeref:typename:void
_getAplus	misc/ukf.py	/^        def _getAplus(A):$/;"	f	member:UKF.nearPD	file:
_getPs	misc/ukf.py	/^        def _getPs(A, W=None):$/;"	f	member:UKF.nearPD	file:
_getPu	misc/ukf.py	/^        def _getPu(A, W=None):$/;"	f	member:UKF.nearPD	file:
_norm	track/RCPTrack.py	/^        _norm = lambda x:np.linalg.norm(x,axis=0)$/;"	f	member:RCPTrack.discretizePath	file:
_norm	track/RCPTrack.py	/^        _norm = lambda x:np.linalg.norm(x,axis=0)$/;"	f	member:RCPTrack.generateSpeedProfile	file:
_norm	track/RCPTrack.py	/^        _norm = lambda x:np.linalg.norm(x,axis=0)$/;"	f	member:RCPTrack.getRefPoint	file:
_norm	track/RCPTrack.py	/^        _norm = lambda x:np.linalg.norm(x,axis=0)$/;"	f	member:RCPTrack.getRefXYVheading	file:
_norm	track/RCPTrack.py	/^        _norm = lambda x:np.linalg.norm(x,axis=0)$/;"	f	member:RCPTrack.predictOpponent	file:
a	controller/mppi/toy_examples/pycudaTest.py	/^a = numpy.random.randn(400).astype(numpy.float32)$/;"	v
a	copg/car_racing/copg_orca.py	/^    a = random.choice([-0.1,0.1])$/;"	v
a	copg/car_racing/gda_orca.py	/^    a = random.choice([-0.1,0.1])$/;"	v
a	copg/car_racing/results.py	/^a = torch.rand(curr_batch_size)$/;"	v
a	copg/rcvip_racing/copg_orca.py	/^    a = random.choice([-0.1,0.1])$/;"	v
a	copg/rcvip_racing/gda_orca.py	/^    a = random.choice([-0.1,0.1])$/;"	v
a	copg/rcvip_racing/results.py	/^a = torch.rand(curr_batch_size)$/;"	v
a	misc/rpy.py	/^a,b,c = r.apply(x,inverse=True)$/;"	v
a	results.py	/^a = torch.rand(curr_batch_size)$/;"	v
a_high_thresh	misc/plotFrontier.py	/^a_high_thresh = 0.9$/;"	v
a_high_thresh	misc/plotFrontier.py	/^a_high_thresh = 10$/;"	v
a_linear	copg/car_racing/results.py	/^a_linear = (a>0.5)*torch.ones(curr_batch_size)$/;"	v
a_linear	copg/rcvip_racing/results.py	/^a_linear = (a>0.5)*torch.ones(curr_batch_size)$/;"	v
a_linear	results.py	/^a_linear = (a>0.5)*torch.ones(curr_batch_size)$/;"	v
a_low_thresh	misc/plotFrontier.py	/^a_low_thresh = 0$/;"	v
a_low_thresh	misc/plotFrontier.py	/^a_low_thresh = 0.5$/;"	v
a_win	copg/car_racing/results.py	/^        a_win = a_win + torch.sum(torch.ones(out_state_c1.size(0))*(out_state_c1[:,0]>out_state_/;"	v
a_win	copg/car_racing/results.py	/^a_win=0$/;"	v
a_win	copg/rcvip_racing/results.py	/^        a_win = a_win + torch.sum(torch.ones(out_state_c1.size(0))*(out_state_c1[:,0]>out_state_/;"	v
a_win	copg/rcvip_racing/results.py	/^a_win=0$/;"	v
a_win	results.py	/^        a_win = a_win + torch.sum(torch.ones(out_state_c1.size(0))*(out_state_c1[:,0]>out_state_/;"	v
a_win	results.py	/^a_win=0$/;"	v
acc	sysid/fitThrottle.py	/^acc = np.diff(smooth_v)\/dt$/;"	v
acc	sysid/tire.py	/^    acc = tireCurve(xx)$/;"	v
acc_max_motor	track/RCPTrack.py	/^        acc_max_motor = lambda x:3.3$/;"	f	member:RCPTrack.generateSpeedProfile	file:
acc_old	sysid/tire.py	/^    acc_old = oldtireCurve(xx)$/;"	v
action	sysid/fitThrottle.py	/^    action = (-steering[i],predicted_acc)$/;"	v
action	sysid/fitThrottle.py	/^    action = (0,0)$/;"	v
action1	copg/car_racing/copg_orca.py	/^        action1 = dist1.sample().to('cpu')$/;"	v
action1	copg/car_racing/gda_orca.py	/^        action1 = dist1.sample().to('cpu')$/;"	v
action1	copg/car_racing/results.py	/^    action1 = dist1.sample()$/;"	v
action1	copg/rcvip_racing/copg_orca.py	/^        action1 = dist1.sample().to('cpu')$/;"	v
action1	copg/rcvip_racing/gda_orca.py	/^        action1 = dist1.sample().to('cpu')$/;"	v
action1	copg/rcvip_racing/results.py	/^    action1 = dist1.sample()$/;"	v
action1	results.py	/^    action1 = dist1.sample()$/;"	v
action2	copg/car_racing/copg_orca.py	/^        action2 = dist2.sample().to('cpu')$/;"	v
action2	copg/car_racing/gda_orca.py	/^        action2 = dist2.sample().to('cpu')$/;"	v
action2	copg/car_racing/results.py	/^    action2 = dist2.sample()$/;"	v
action2	copg/rcvip_racing/copg_orca.py	/^        action2 = dist2.sample().to('cpu')$/;"	v
action2	copg/rcvip_racing/gda_orca.py	/^        action2 = dist2.sample().to('cpu')$/;"	v
action2	copg/rcvip_racing/results.py	/^    action2 = dist2.sample()$/;"	v
action2	results.py	/^    action2 = dist2.sample()$/;"	v
action_vec	sysid/fitThrottle.py	/^action_vec = []$/;"	v
action_vec	sysid/fitThrottle.py	/^action_vec = np.array(action_vec)$/;"	v
actions	misc/hybridDynamicSimNew.py	/^        actions = actions.to(device)$/;"	v
actions	misc/hybridDynamicSimNew.py	/^        actions = batch[:,-forward_steps:,-simulator.action_dim:]$/;"	v
actions	misc/hybridKinematicSim.py	/^        actions = actions.to(device)$/;"	v
actions	misc/hybridKinematicSim.py	/^        actions = batch[:,-forward_steps:,-simulator.action_dim:]$/;"	v
actions	misc/hybridSim.py	/^        actions = actions.to(device)$/;"	v
actions	misc/hybridSim.py	/^        actions = batch[:,-forward_steps:,-simulator.action_dim:]$/;"	v
actuate	car/Car.py	/^    def actuate(self):$/;"	m	class:Car
actuate	car/OldOffboard.py	/^    def actuate(self):$/;"	m	class:OldOffboard
actuatePWM	car/OldOffboard.py	/^    def actuatePWM(self,steeringPWM,throttlePWM):$/;"	m	class:OldOffboard
addAlgorithmName	sysid/validateModel.py	/^def addAlgorithmName(img,step_fun):$/;"	f
addCar	extension/simulator/DynamicSimulator.py	/^    def addCar(self,car):$/;"	m	class:DynamicSimulator
addCar	extension/simulator/KinematicSimulator.py	/^    def addCar(self,car):$/;"	m	class:KinematicSimulator
addCurvatureNormObjective	planner/Planner.py	/^    def addCurvatureNormObjective(self, weight, n_estimate=None):$/;"	m	class:Planner
addDatapoint	misc/plotComparison.py	/^def addDatapoint(group, samples, laptime, collision, gif):$/;"	f
addDeviationObjective	planner/Planner.py	/^    def addDeviationObjective(self,weight):$/;"	m	class:Planner
addStateNoiseImpulse	extension/Simulator.py	/^    def addStateNoiseImpulse(self):$/;"	m	class:Simulator
addStateNoiseNormal	extension/Simulator.py	/^    def addStateNoiseNormal(self):$/;"	m	class:Simulator
addStateNoiseUniform	extension/Simulator.py	/^    def addStateNoiseUniform(self):$/;"	m	class:Simulator
add_labels	misc/cs_test.py	/^def add_labels():$/;"	f
add_labels	misc/throttle_model.py	/^def add_labels():$/;"	f
additionalSetup	controller/ccmppi/CcmppiCarController.py	/^    def additionalSetup(self):$/;"	m	class:CcmppiCarController
additionalSetup	controller/ccmppi/oldCcmppi.py	/^    def additionalSetup(self):$/;"	m	class:CcmppiCarController
adjustment	misc/laptime.py	/^    adjustment = [0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0,0]$/;"	v
adjustment	misc/laptime.py	/^    adjustment = res.x$/;"	v
advCarSim	misc/advCarSim.py	/^class advCarSim:$/;"	c
advanceDynamics	extension/simulator/DynamicSimulator.py	/^    def advanceDynamics(car_states, control, car):$/;"	m	class:DynamicSimulator
advanceDynamics	extension/simulator/KinematicSimulator.py	/^    def advanceDynamics(car_states,control, car):$/;"	m	class:KinematicSimulator
advanceModel	misc/ukf.py	/^    def advanceModel(self,joint_state,control,dt):$/;"	m	class:UKF
advantage	util/analyzeBatchExpGrid.py	/^    advantage = (grid_cvar\/mean_baseline)$/;"	v
advantage	util/analyzeBatchExpGrid.py	/^    advantage = pandas.DataFrame(data=advantage, index=cvar_a_vec_text, columns=cvar_Cu_vec_text/;"	v
advantage_mat1	copg/car_racing/copg_orca.py	/^    advantage_mat1 = returns1.view(1,-1) - val1.transpose(0,1)$/;"	v
advantage_mat1	copg/car_racing/gda_orca.py	/^    advantage_mat1 = returns1.view(1,-1) - val1.transpose(0,1)$/;"	v
advantage_mat1	copg/rcvip_racing/copg_orca.py	/^    advantage_mat1 = returns1.view(1,-1) - val1.transpose(0,1)$/;"	v
advantage_mat1	copg/rcvip_racing/gda_orca.py	/^    advantage_mat1 = returns1.view(1,-1) - val1.transpose(0,1)$/;"	v
alfa	misc/QfDemo.py	/^    alfa = 1$/;"	v
alfa	misc/oneObstacle.py	/^    alfa = 1$/;"	v
alfa	misc/plotFrontier.py	/^    alfa = mppi[index_mppi,8]$/;"	v
alfas	misc/benchmark.py	/^    alfas = np.hstack([np.linspace(0.5,0.9,9)])$/;"	v
algorithm	misc/QfDemo.py	/^    algorithm = 'wide-ccmppi'$/;"	v
angle_diff	misc/sysidTrainDynamicHybridSim.py	/^def angle_diff(a,b):$/;"	f
angle_diff	misc/sysidTrainDynamicNewHybridSim.py	/^def angle_diff(a,b):$/;"	f
angle_diff	misc/sysidTrainKinematicHybridSim.py	/^def angle_diff(a,b):$/;"	f
angular_difference	common.py	/^def angular_difference(a, b):$/;"	f
announce	extension/Laptimer.py	/^    def announce(self):$/;"	m	class:_Laptimer
applyDiscreteDynamics	controller/ccmppi/CcmppiCarController.py	/^    def applyDiscreteDynamics(self,states,control,dt):$/;"	m	class:CcmppiCarController
applyDiscreteDynamics	controller/ccmppi/oldCcmppi.py	/^    def applyDiscreteDynamics(self,states,control,dt):$/;"	m	class:CcmppiCarController
applyDiscreteDynamics	misc/ctrlMppiWrapper.py	/^    def applyDiscreteDynamics(self,state,control,dt):$/;"	m	class:ctrlMppiWrapper
arcLen	qpSmooth.py	/^    def arcLen(self,fun,ui,uf):$/;"	m	class:QpSmooth
args	misc/QfDemo.py	/^    args = parser.parse_args()$/;"	v
args	misc/benchmark.py	/^    args = parser.parse_args()$/;"	v
args	misc/child.py	/^args = parser.parse_args()$/;"	v
args	misc/oneObstacle.py	/^    args = parser.parse_args()$/;"	v
atan	misc/cs_test.py	/^from numpy import sin, cos, tan, arctan as atan, sqrt, arctan2 as atan2, zeros, zeros_like, abs,/;"	x	nameref:unknown:arctan
atan	misc/throttle_model.py	/^from numpy import sin, cos, tan, arctan as atan, sqrt, arctan2 as atan2, zeros, zeros_like, abs,/;"	x	nameref:unknown:arctan
atan2	misc/cs_test.py	/^from numpy import sin, cos, tan, arctan as atan, sqrt, arctan2 as atan2, zeros, zeros_like, abs,/;"	x	nameref:unknown:arctan2
atan2	misc/throttle_model.py	/^from numpy import sin, cos, tan, arctan as atan, sqrt, arctan2 as atan2, zeros, zeros_like, abs,/;"	x	nameref:unknown:arctan2
attrs	configGenerator.py	/^        attrs = config_controller.attributes.items()$/;"	v
attrs	configs/noise.py	/^        attrs = config_controller.attributes.items()$/;"	v
autograd	copg/copg_optim/copg.py	/^import torch.autograd as autograd$/;"	I	nameref:module:torch.autograd
autograd	copg/copg_optim/utils.py	/^import torch.autograd as autograd$/;"	I	nameref:module:torch.autograd
available_local_port	car/Offboard.py	/^    available_local_port = 58998$/;"	v	class:Offboard
avg_itr	copg/car_racing/copg_orca.py	/^    avg_itr = 0$/;"	v
avg_itr	copg/car_racing/gda_orca.py	/^    avg_itr = 0$/;"	v
avg_itr	copg/rcvip_racing/copg_orca.py	/^    avg_itr = 0$/;"	v
avg_itr	copg/rcvip_racing/gda_orca.py	/^    avg_itr = 0$/;"	v
ax	sysid/fitThrottle.py	/^ax = fig.gca()$/;"	v
ax	sysid/tire.py	/^    ax = fig.gca()$/;"	v
ax	util/analyzeBatchExpGrid.py	/^    ax = sns.heatmap(advantage, annot=True,linewidth=0.5)$/;"	v
b	controller/mppi/toy_examples/pycudaTest.py	/^b = numpy.random.randn(400).astype(numpy.float32)$/;"	v
b	copg/car_racing/copg_orca.py	/^    b = a*(-1)$/;"	v
b	copg/car_racing/gda_orca.py	/^    b = a*(-1)$/;"	v
b	copg/rcvip_racing/copg_orca.py	/^    b = a*(-1)$/;"	v
b	copg/rcvip_racing/gda_orca.py	/^    b = a*(-1)$/;"	v
b	misc/cvxpy_test.py	/^b = np.random.randn(m)$/;"	v
b	misc/rpy.py	/^a,b,c = r.apply(x,inverse=True)$/;"	v
b_high_thresh	misc/plotFrontier.py	/^b_high_thresh = 100$/;"	v
b_high_thresh	misc/plotFrontier.py	/^b_high_thresh = 6$/;"	v
b_low_thresh	misc/plotFrontier.py	/^b_low_thresh = 0$/;"	v
b_win	copg/car_racing/results.py	/^        b_win = b_win + torch.sum(torch.ones(out_state_c1.size(0))*(out_state_c1[:,0]<out_state_/;"	v
b_win	copg/car_racing/results.py	/^b_win=0$/;"	v
b_win	copg/rcvip_racing/results.py	/^        b_win = b_win + torch.sum(torch.ones(out_state_c1.size(0))*(out_state_c1[:,0]<out_state_/;"	v
b_win	copg/rcvip_racing/results.py	/^b_win=0$/;"	v
b_win	results.py	/^        b_win = b_win + torch.sum(torch.ones(out_state_c1.size(0))*(out_state_c1[:,0]<out_state_/;"	v
b_win	results.py	/^b_win=0$/;"	v
base_dir	controller/ccmppi/CcmppiCarController.py	/^base_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), '.\/ccmppi\/')$/;"	v
base_dir	controller/ccmppi/ccmppi.py	/^base_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), '..\/')$/;"	v
base_dir	controller/ccmppi/ccmppi_dynamic.py	/^base_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), '..\/')$/;"	v
base_dir	controller/ccmppi/ccmppi_kinematic.py	/^base_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), '..\/')$/;"	v
base_dir	controller/ccmppi/curand.py	/^base_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), '..\/')$/;"	v
base_dir	controller/ccmppi/oldCcmppi.py	/^base_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), '.\/ccmppi\/')$/;"	v
base_dir	controller/mppi/toy_examples/curand.py	/^base_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), '..\/')$/;"	v
base_dir	controller/mppi/toy_examples/dualMass.py	/^base_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), '..\/')$/;"	v
base_dir	controller/mppi/toy_examples/mppiJisModel.py	/^base_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), '..\/')$/;"	v
base_dir	misc/ctrlMpcWrapper.py	/^base_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), '.\/mppi\/')$/;"	v
base_dir	misc/ctrlMppiWrapper.py	/^base_dir = os.path.join(os.path.dirname(os.path.abspath(__file__)), '.\/mppi\/')$/;"	v
batch_mat_action1	copg/car_racing/copg_orca.py	/^                batch_mat_action1 = mat_action1.transpose(0, 1)[~remaining_xo].view(-1, 2)$/;"	v
batch_mat_action1	copg/car_racing/copg_orca.py	/^                batch_mat_action1 = torch.cat([batch_mat_action1, mat_action1.transpose(0, 1)[~r/;"	v
batch_mat_action1	copg/car_racing/copg_orca.py	/^            batch_mat_action1 = torch.cat([batch_mat_action1, mat_action1.transpose(0, 1).reshap/;"	v
batch_mat_action1	copg/car_racing/copg_orca.py	/^    batch_mat_action1 = torch.empty(0)$/;"	v
batch_mat_action1	copg/car_racing/gda_orca.py	/^                batch_mat_action1 = mat_action1.transpose(0, 1)[~remaining_xo].view(-1, 2)$/;"	v
batch_mat_action1	copg/car_racing/gda_orca.py	/^                batch_mat_action1 = torch.cat([batch_mat_action1, mat_action1.transpose(0, 1)[~r/;"	v
batch_mat_action1	copg/car_racing/gda_orca.py	/^            batch_mat_action1 = torch.cat([batch_mat_action1, mat_action1.transpose(0, 1).reshap/;"	v
batch_mat_action1	copg/car_racing/gda_orca.py	/^    batch_mat_action1 = torch.empty(0)$/;"	v
batch_mat_action1	copg/rcvip_racing/copg_orca.py	/^                batch_mat_action1 = mat_action1.transpose(0, 1)[~remaining_xo].view(-1, 2)$/;"	v
batch_mat_action1	copg/rcvip_racing/copg_orca.py	/^                batch_mat_action1 = torch.cat([batch_mat_action1, mat_action1.transpose(0, 1)[~r/;"	v
batch_mat_action1	copg/rcvip_racing/copg_orca.py	/^            batch_mat_action1 = torch.cat([batch_mat_action1, mat_action1.transpose(0, 1).reshap/;"	v
batch_mat_action1	copg/rcvip_racing/copg_orca.py	/^    batch_mat_action1 = torch.empty(0)$/;"	v
batch_mat_action1	copg/rcvip_racing/gda_orca.py	/^                batch_mat_action1 = mat_action1.transpose(0, 1)[~remaining_xo].view(-1, 2)$/;"	v
batch_mat_action1	copg/rcvip_racing/gda_orca.py	/^                batch_mat_action1 = torch.cat([batch_mat_action1, mat_action1.transpose(0, 1)[~r/;"	v
batch_mat_action1	copg/rcvip_racing/gda_orca.py	/^            batch_mat_action1 = torch.cat([batch_mat_action1, mat_action1.transpose(0, 1).reshap/;"	v
batch_mat_action1	copg/rcvip_racing/gda_orca.py	/^    batch_mat_action1 = torch.empty(0)$/;"	v
batch_mat_action1_gpu	copg/car_racing/copg_orca.py	/^    batch_mat_action1_gpu = batch_mat_action1.to(device)$/;"	v
batch_mat_action1_gpu	copg/rcvip_racing/copg_orca.py	/^    batch_mat_action1_gpu = batch_mat_action1.to(device)$/;"	v
batch_mat_action2	copg/car_racing/copg_orca.py	/^                batch_mat_action2 = mat_action2.transpose(0, 1)[~remaining_xo].view(-1, 2)$/;"	v
batch_mat_action2	copg/car_racing/copg_orca.py	/^                batch_mat_action2 = torch.cat([batch_mat_action2, mat_action2.transpose(0, 1)[~r/;"	v
batch_mat_action2	copg/car_racing/copg_orca.py	/^            batch_mat_action2 = torch.cat([batch_mat_action2, mat_action2.transpose(0, 1).reshap/;"	v
batch_mat_action2	copg/car_racing/copg_orca.py	/^    batch_mat_action2 = torch.empty(0)$/;"	v
batch_mat_action2	copg/car_racing/gda_orca.py	/^                batch_mat_action2 = mat_action2.transpose(0, 1)[~remaining_xo].view(-1, 2)$/;"	v
batch_mat_action2	copg/car_racing/gda_orca.py	/^                batch_mat_action2 = torch.cat([batch_mat_action2, mat_action2.transpose(0, 1)[~r/;"	v
batch_mat_action2	copg/car_racing/gda_orca.py	/^            batch_mat_action2 = torch.cat([batch_mat_action2, mat_action2.transpose(0, 1).reshap/;"	v
batch_mat_action2	copg/car_racing/gda_orca.py	/^    batch_mat_action2 = torch.empty(0)$/;"	v
batch_mat_action2	copg/rcvip_racing/copg_orca.py	/^                batch_mat_action2 = mat_action2.transpose(0, 1)[~remaining_xo].view(-1, 2)$/;"	v
batch_mat_action2	copg/rcvip_racing/copg_orca.py	/^                batch_mat_action2 = torch.cat([batch_mat_action2, mat_action2.transpose(0, 1)[~r/;"	v
batch_mat_action2	copg/rcvip_racing/copg_orca.py	/^            batch_mat_action2 = torch.cat([batch_mat_action2, mat_action2.transpose(0, 1).reshap/;"	v
batch_mat_action2	copg/rcvip_racing/copg_orca.py	/^    batch_mat_action2 = torch.empty(0)$/;"	v
batch_mat_action2	copg/rcvip_racing/gda_orca.py	/^                batch_mat_action2 = mat_action2.transpose(0, 1)[~remaining_xo].view(-1, 2)$/;"	v
batch_mat_action2	copg/rcvip_racing/gda_orca.py	/^                batch_mat_action2 = torch.cat([batch_mat_action2, mat_action2.transpose(0, 1)[~r/;"	v
batch_mat_action2	copg/rcvip_racing/gda_orca.py	/^            batch_mat_action2 = torch.cat([batch_mat_action2, mat_action2.transpose(0, 1).reshap/;"	v
batch_mat_action2	copg/rcvip_racing/gda_orca.py	/^    batch_mat_action2 = torch.empty(0)$/;"	v
batch_mat_action2_gpu	copg/car_racing/copg_orca.py	/^    batch_mat_action2_gpu = batch_mat_action2.to(device)$/;"	v
batch_mat_action2_gpu	copg/rcvip_racing/copg_orca.py	/^    batch_mat_action2_gpu = batch_mat_action2.to(device)$/;"	v
batch_mat_done	copg/car_racing/copg_orca.py	/^                batch_mat_done = mat_done.transpose(0, 1).reshape(-1, 1)$/;"	v
batch_mat_done	copg/car_racing/copg_orca.py	/^                batch_mat_done = mat_done.transpose(0, 1)[~remaining_xo].view(-1, 1)$/;"	v
batch_mat_done	copg/car_racing/copg_orca.py	/^                batch_mat_done = torch.cat([batch_mat_done, mat_done.transpose(0, 1)[~remaining_/;"	v
batch_mat_done	copg/car_racing/copg_orca.py	/^    batch_mat_done = torch.empty(0)$/;"	v
batch_mat_done	copg/car_racing/gda_orca.py	/^                batch_mat_done = mat_done.transpose(0, 1).reshape(-1, 1)$/;"	v
batch_mat_done	copg/car_racing/gda_orca.py	/^                batch_mat_done = mat_done.transpose(0, 1)[~remaining_xo].view(-1, 1)$/;"	v
batch_mat_done	copg/car_racing/gda_orca.py	/^                batch_mat_done = torch.cat([batch_mat_done, mat_done.transpose(0, 1)[~remaining_/;"	v
batch_mat_done	copg/car_racing/gda_orca.py	/^    batch_mat_done = torch.empty(0)$/;"	v
batch_mat_done	copg/rcvip_racing/copg_orca.py	/^                batch_mat_done = mat_done.transpose(0, 1).reshape(-1, 1)$/;"	v
batch_mat_done	copg/rcvip_racing/copg_orca.py	/^                batch_mat_done = mat_done.transpose(0, 1)[~remaining_xo].view(-1, 1)$/;"	v
batch_mat_done	copg/rcvip_racing/copg_orca.py	/^                batch_mat_done = torch.cat([batch_mat_done, mat_done.transpose(0, 1)[~remaining_/;"	v
batch_mat_done	copg/rcvip_racing/copg_orca.py	/^    batch_mat_done = torch.empty(0)$/;"	v
batch_mat_done	copg/rcvip_racing/gda_orca.py	/^                batch_mat_done = mat_done.transpose(0, 1).reshape(-1, 1)$/;"	v
batch_mat_done	copg/rcvip_racing/gda_orca.py	/^                batch_mat_done = mat_done.transpose(0, 1)[~remaining_xo].view(-1, 1)$/;"	v
batch_mat_done	copg/rcvip_racing/gda_orca.py	/^                batch_mat_done = torch.cat([batch_mat_done, mat_done.transpose(0, 1)[~remaining_/;"	v
batch_mat_done	copg/rcvip_racing/gda_orca.py	/^    batch_mat_done = torch.empty(0)$/;"	v
batch_mat_reward1	copg/car_racing/copg_orca.py	/^                batch_mat_reward1 = mat_reward1.transpose(0, 1)[~remaining_xo].view(-1, 1)$/;"	v
batch_mat_reward1	copg/car_racing/copg_orca.py	/^                batch_mat_reward1 = torch.cat([batch_mat_reward1, mat_reward1.transpose(0, 1)[~r/;"	v
batch_mat_reward1	copg/car_racing/copg_orca.py	/^            batch_mat_reward1 = torch.cat([batch_mat_reward1, mat_reward1.transpose(0, 1).reshap/;"	v
batch_mat_reward1	copg/car_racing/copg_orca.py	/^    batch_mat_reward1 = torch.empty(0)$/;"	v
batch_mat_reward1	copg/car_racing/gda_orca.py	/^                batch_mat_reward1 = mat_reward1.transpose(0, 1)[~remaining_xo].view(-1, 1)$/;"	v
batch_mat_reward1	copg/car_racing/gda_orca.py	/^                batch_mat_reward1 = torch.cat([batch_mat_reward1, mat_reward1.transpose(0, 1)[~r/;"	v
batch_mat_reward1	copg/car_racing/gda_orca.py	/^            batch_mat_reward1 = torch.cat([batch_mat_reward1, mat_reward1.transpose(0, 1).reshap/;"	v
batch_mat_reward1	copg/car_racing/gda_orca.py	/^    batch_mat_reward1 = torch.empty(0)$/;"	v
batch_mat_reward1	copg/rcvip_racing/copg_orca.py	/^                batch_mat_reward1 = mat_reward1.transpose(0, 1)[~remaining_xo].view(-1, 1)$/;"	v
batch_mat_reward1	copg/rcvip_racing/copg_orca.py	/^                batch_mat_reward1 = torch.cat([batch_mat_reward1, mat_reward1.transpose(0, 1)[~r/;"	v
batch_mat_reward1	copg/rcvip_racing/copg_orca.py	/^            batch_mat_reward1 = torch.cat([batch_mat_reward1, mat_reward1.transpose(0, 1).reshap/;"	v
batch_mat_reward1	copg/rcvip_racing/copg_orca.py	/^    batch_mat_reward1 = torch.empty(0)$/;"	v
batch_mat_reward1	copg/rcvip_racing/gda_orca.py	/^                batch_mat_reward1 = mat_reward1.transpose(0, 1)[~remaining_xo].view(-1, 1)$/;"	v
batch_mat_reward1	copg/rcvip_racing/gda_orca.py	/^                batch_mat_reward1 = torch.cat([batch_mat_reward1, mat_reward1.transpose(0, 1)[~r/;"	v
batch_mat_reward1	copg/rcvip_racing/gda_orca.py	/^            batch_mat_reward1 = torch.cat([batch_mat_reward1, mat_reward1.transpose(0, 1).reshap/;"	v
batch_mat_reward1	copg/rcvip_racing/gda_orca.py	/^    batch_mat_reward1 = torch.empty(0)$/;"	v
batch_mat_state1	copg/car_racing/copg_orca.py	/^                batch_mat_state1 = mat_state1.transpose(0, 1)[~remaining_xo].view(-1, 5)$/;"	v
batch_mat_state1	copg/car_racing/copg_orca.py	/^                batch_mat_state1 = torch.cat([batch_mat_state1,mat_state1.transpose(0, 1)[~remai/;"	v
batch_mat_state1	copg/car_racing/copg_orca.py	/^            batch_mat_state1 = torch.cat([batch_mat_state1, mat_state1.transpose(0, 1).reshape(-/;"	v
batch_mat_state1	copg/car_racing/copg_orca.py	/^    batch_mat_state1 = torch.empty(0)$/;"	v
batch_mat_state1	copg/car_racing/gda_orca.py	/^                batch_mat_state1 = mat_state1.transpose(0, 1)[~remaining_xo].view(-1, 5)$/;"	v
batch_mat_state1	copg/car_racing/gda_orca.py	/^                batch_mat_state1 = torch.cat([batch_mat_state1,mat_state1.transpose(0, 1)[~remai/;"	v
batch_mat_state1	copg/car_racing/gda_orca.py	/^            batch_mat_state1 = torch.cat([batch_mat_state1, mat_state1.transpose(0, 1).reshape(-/;"	v
batch_mat_state1	copg/car_racing/gda_orca.py	/^    batch_mat_state1 = torch.empty(0)$/;"	v
batch_mat_state1	copg/rcvip_racing/copg_orca.py	/^                batch_mat_state1 = mat_state1.transpose(0, 1)[~remaining_xo].view(-1, 5)$/;"	v
batch_mat_state1	copg/rcvip_racing/copg_orca.py	/^                batch_mat_state1 = torch.cat([batch_mat_state1,mat_state1.transpose(0, 1)[~remai/;"	v
batch_mat_state1	copg/rcvip_racing/copg_orca.py	/^            batch_mat_state1 = torch.cat([batch_mat_state1, mat_state1.transpose(0, 1).reshape(-/;"	v
batch_mat_state1	copg/rcvip_racing/copg_orca.py	/^    batch_mat_state1 = torch.empty(0)$/;"	v
batch_mat_state1	copg/rcvip_racing/gda_orca.py	/^                batch_mat_state1 = mat_state1.transpose(0, 1)[~remaining_xo].view(-1, 5)$/;"	v
batch_mat_state1	copg/rcvip_racing/gda_orca.py	/^                batch_mat_state1 = torch.cat([batch_mat_state1,mat_state1.transpose(0, 1)[~remai/;"	v
batch_mat_state1	copg/rcvip_racing/gda_orca.py	/^            batch_mat_state1 = torch.cat([batch_mat_state1, mat_state1.transpose(0, 1).reshape(-/;"	v
batch_mat_state1	copg/rcvip_racing/gda_orca.py	/^    batch_mat_state1 = torch.empty(0)$/;"	v
batch_mat_state2	copg/car_racing/copg_orca.py	/^                batch_mat_state2 = mat_state2.transpose(0, 1)[~remaining_xo].view(-1, 5)$/;"	v
batch_mat_state2	copg/car_racing/copg_orca.py	/^                batch_mat_state2 = torch.cat([batch_mat_state2, mat_state2.transpose(0, 1)[~rema/;"	v
batch_mat_state2	copg/car_racing/copg_orca.py	/^            batch_mat_state2 = torch.cat([batch_mat_state2, mat_state2.transpose(0, 1).reshape(-/;"	v
batch_mat_state2	copg/car_racing/copg_orca.py	/^    batch_mat_state2 = torch.empty(0)$/;"	v
batch_mat_state2	copg/car_racing/gda_orca.py	/^                batch_mat_state2 = mat_state2.transpose(0, 1)[~remaining_xo].view(-1, 5)$/;"	v
batch_mat_state2	copg/car_racing/gda_orca.py	/^                batch_mat_state2 = torch.cat([batch_mat_state2, mat_state2.transpose(0, 1)[~rema/;"	v
batch_mat_state2	copg/car_racing/gda_orca.py	/^            batch_mat_state2 = torch.cat([batch_mat_state2, mat_state2.transpose(0, 1).reshape(-/;"	v
batch_mat_state2	copg/car_racing/gda_orca.py	/^    batch_mat_state2 = torch.empty(0)$/;"	v
batch_mat_state2	copg/rcvip_racing/copg_orca.py	/^                batch_mat_state2 = mat_state2.transpose(0, 1)[~remaining_xo].view(-1, 5)$/;"	v
batch_mat_state2	copg/rcvip_racing/copg_orca.py	/^                batch_mat_state2 = torch.cat([batch_mat_state2, mat_state2.transpose(0, 1)[~rema/;"	v
batch_mat_state2	copg/rcvip_racing/copg_orca.py	/^            batch_mat_state2 = torch.cat([batch_mat_state2, mat_state2.transpose(0, 1).reshape(-/;"	v
batch_mat_state2	copg/rcvip_racing/copg_orca.py	/^    batch_mat_state2 = torch.empty(0)$/;"	v
batch_mat_state2	copg/rcvip_racing/gda_orca.py	/^                batch_mat_state2 = mat_state2.transpose(0, 1)[~remaining_xo].view(-1, 5)$/;"	v
batch_mat_state2	copg/rcvip_racing/gda_orca.py	/^                batch_mat_state2 = torch.cat([batch_mat_state2, mat_state2.transpose(0, 1)[~rema/;"	v
batch_mat_state2	copg/rcvip_racing/gda_orca.py	/^            batch_mat_state2 = torch.cat([batch_mat_state2, mat_state2.transpose(0, 1).reshape(-/;"	v
batch_mat_state2	copg/rcvip_racing/gda_orca.py	/^    batch_mat_state2 = torch.empty(0)$/;"	v
batch_size	copg/car_racing/copg_orca.py	/^batch_size = 8$/;"	v
batch_size	copg/car_racing/gda_orca.py	/^batch_size = 8$/;"	v
batch_size	copg/rcvip_racing/copg_orca.py	/^batch_size = 8$/;"	v
batch_size	copg/rcvip_racing/gda_orca.py	/^batch_size = 8$/;"	v
beta	misc/QfDemo.py	/^    beta = 1$/;"	v
beta	misc/oneObstacle.py	/^    beta = 1$/;"	v
beta	misc/plotFrontier.py	/^    beta = mppi[index_mppi,9]$/;"	v
betas	misc/benchmark.py	/^    betas = np.hstack([np.linspace(1,6,11)])$/;"	v
bezierCurve	planner/Planner.py	/^    def bezierCurve(self,r,dr,ddr,ds=None):$/;"	m	class:Planner
bezierCurve	qpSmooth.py	/^    def bezierCurve(self,r,dr,ddr,ds=None):$/;"	m	class:QpSmooth
bezierSpline	planner/Planner.py	/^    def bezierSpline(self,p,dp,ddp,ds):$/;"	m	class:Planner
bezierSpline	qpSmooth.py	/^    def bezierSpline(self,break_pts):$/;"	m	class:QpSmooth
bnds	misc/laptime.py	/^    bnds = tuple([(-max_offset,max_offset) for i in range(track_len)])$/;"	v
boundaryClearanceVector	track/RCPTrack.py	/^    def boundaryClearanceVector(self,k):$/;"	m	class:RCPTrack
boundary_data	util/analyzeBatchExpGrid.py	/^    boundary_data = np.array(data_dict['boundary_violation'])$/;"	v
boundary_img	util/plotTrajectory.py	/^    boundary_img = pickle.load(f)$/;"	v
buildSolution	planner/Planner.py	/^    def buildSolution(self,mpc,x0):$/;"	m	class:Planner
buildTangentialConstraint	planner/Planner.py	/^    def buildTangentialConstraint(self,x0):$/;"	m	class:Planner
c	misc/rpy.py	/^a,b,c = r.apply(x,inverse=True)$/;"	v
c1_out	copg/car_racing/results.py	/^    c1_out = c1_out + n_c1$/;"	v
c1_out	copg/car_racing/results.py	/^c1_out=0$/;"	v
c1_out	copg/rcvip_racing/results.py	/^    c1_out = c1_out + n_c1$/;"	v
c1_out	copg/rcvip_racing/results.py	/^c1_out=0$/;"	v
c1_out	results.py	/^    c1_out = c1_out + n_c1$/;"	v
c1_out	results.py	/^c1_out=0$/;"	v
c2_out	copg/car_racing/results.py	/^    c2_out = c2_out + n_c2$/;"	v
c2_out	copg/car_racing/results.py	/^c2_out=0$/;"	v
c2_out	copg/rcvip_racing/results.py	/^    c2_out = c2_out + n_c2$/;"	v
c2_out	copg/rcvip_racing/results.py	/^c2_out=0$/;"	v
c2_out	results.py	/^    c2_out = c2_out + n_c2$/;"	v
c2_out	results.py	/^c2_out=0$/;"	v
calcArcLen	planner/Planner.py	/^    def calcArcLen(self,path):$/;"	m	class:Planner
calcCurvature	planner/Planner.py	/^    def calcCurvature(self,dr_vec,ddr_vec):$/;"	m	class:Planner
calcCurvature	track/RCPTrack.py	/^    def calcCurvature(self,dr_vec,ddr_vec):$/;"	m	class:RCPTrack
calcDerivative	planner/Planner.py	/^    def calcDerivative(self,curve):$/;"	m	class:Planner
calcDerivative	track/RCPTrack.py	/^    def calcDerivative(self,curve,ds):$/;"	m	class:RCPTrack
calcNextState	controller/mppi/toy_examples/mppiJisModel.py	/^    def calcNextState(self,state,u,dt):$/;"	m	class:Model
calcPathDistance	track/RCPTrack.py	/^    def calcPathDistance(self,u0,u1):$/;"	m	class:RCPTrack
calcThrottle	controller/EmptyCarController.py	/^    def calcThrottle(self,ax):$/;"	m	class:EmptyCarController
calcThrottle	controller/PurePursuitCarController.py	/^    def calcThrottle(self,state,v_target):$/;"	m	class:PurePursuitCarController
calcThrottle	controller/StanleyCarController.py	/^    def calcThrottle(self,state,v_target):$/;"	m	class:StanleyCarController
calc_distance	copg/car_racing_simulator/pure_pursuit.py	/^def calc_distance(state, point_x, point_y):$/;"	f
calc_target_index	copg/car_racing_simulator/pure_pursuit.py	/^def calc_target_index(state, cx, cy):$/;"	f
callback_fun	sysid/torsionPendulum.py	/^    def callback_fun(self,optitrack_id, position, rotation):$/;"	m	class:TorsionPendulum
car	controller/ccmppi/ccmppi_dynamic.py	/^    car = Car.Factory(main, "porsche", controller=StanleyCarController,init_states=(3.7*0.6,1.75/;"	v
car	misc/testGpuDynamics.py	/^car = Car.Factory(Dummy(), "porsche", controller=None,init_states=(3.7*0.6,3.75*0.6, radians(-90/;"	v
car_count	car/Car.py	/^    car_count = 0$/;"	v	class:Car
car_count	car/OldOffboard.py	/^    car_count = 0$/;"	v	class:OldOffboard
car_pos	controller/mppi/cost_visualization.py	/^car_pos = 0.0$/;"	v
car_state	misc/testGpuDynamics.py	/^car_state = np.array([2.4847, 1.9582, 0.1866, 0.9854, 0.0832, 1.6597])$/;"	v
cars	car/Car.py	/^    cars = []$/;"	v	class:Car
cars	car/OldOffboard.py	/^    cars = []$/;"	v	class:OldOffboard
cartesianToCurvilinear	planner/Planner.py	/^    def cartesianToCurvilinear(self,coord,skip_wrap=False):$/;"	m	class:Planner
cartesianToPolar	misc/ukf.py	/^    def cartesianToPolar(self,states):$/;"	m	class:UKF
cc	controller/ccmppi/ccmppi_dynamic.py	/^    def cc(self, state, return_sx=False, debug=False):$/;"	m	class:CCMPPI_DYNAMIC
cc	controller/ccmppi/ccmppi_kinematic.py	/^    def cc(self, state, return_sx=False, debug=False):$/;"	m	class:CCMPPI_KINEMATIC
ccmppi	misc/plotComparison.py	/^ccmppi = []$/;"	v
ccmppi	misc/plotComparison.py	/^ccmppi = np.array(ccmppi)$/;"	v
ccmppi	misc/plotCov.py	/^ccmppi = []$/;"	v
ccmppi	misc/plotCov.py	/^ccmppi = np.array(ccmppi)$/;"	v
ccmppi	misc/plotFrontier.py	/^ccmppi = []$/;"	v
ccmppi	misc/plotFrontier.py	/^ccmppi = ccmppi[mask]$/;"	v
ccmppi	misc/plotFrontier.py	/^ccmppi = np.array(ccmppi)$/;"	v
ccmppi	misc/read_mppi_ccmppi_log.py	/^ccmppi = []$/;"	v
ccmppi	misc/read_mppi_ccmppi_log.py	/^ccmppi = np.array(ccmppi)$/;"	v
ccmppi_bad_count	misc/plotFrontier.py	/^ccmppi_bad_count = 0$/;"	v
ccmppi_cov	misc/plotCov.py	/^    ccmppi_cov = getCov(ccmppi_log_no[i])$/;"	v
ccmppi_cov_vec	misc/plotCov.py	/^ccmppi_cov_vec = []$/;"	v
ccmppi_log_no	misc/plotCov.py	/^ccmppi_log_no = ccmppi[:,7]$/;"	v
ccmppi_logno	misc/plotAllTrajectory.py	/^ccmppi_logno = 2652$/;"	v
ccmppi_logno	misc/plotFrontier.py	/^    ccmppi_logno = int(ccmppi[index_cc,7])$/;"	v
ccmppi_mean_collision	misc/plotFrontier.py	/^ccmppi_mean_collision = np.mean(ccmppi[:,3])$/;"	v
ccmppi_mean_cov	misc/plotFrontier.py	/^ccmppi_mean_cov = np.mean(ccmppi[:,5])$/;"	v
ccmppi_mean_laptime	misc/plotFrontier.py	/^ccmppi_mean_laptime = np.mean(ccmppi[:,2])$/;"	v
ccmppi_total_count	misc/plotFrontier.py	/^ccmppi_total_count = 0$/;"	v
center	track/RCPTrack.py	/^        center = lambda x,y : [(x+0.5)*self.scale,(y+0.5)*self.scale]$/;"	f	member:RCPTrack.initRaceline	file:
checkTrackBoundary	qpSmooth.py	/^    def checkTrackBoundary(self,coord,n,delta_max):$/;"	m	class:QpSmooth
checkTrackBoundary	track/RCPTrack.py	/^    def checkTrackBoundary(self,coord):$/;"	m	class:RCPTrack
code	controller/ccmppi/curand.py	/^    code = f.read()$/;"	v
code	controller/mppi/toy_examples/cudaMppiTest.py	/^code = f.read()$/;"	v
code	controller/mppi/toy_examples/curand.py	/^    code = f.read()$/;"	v
coll_c1	copg/car_racing/copg_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
coll_c1	copg/car_racing/gda_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
coll_c1	copg/rcvip_racing/copg_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
coll_c1	copg/rcvip_racing/fun.py	/^reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTimecollosio/;"	v
coll_c1	copg/rcvip_racing/gda_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
coll_c2	copg/car_racing/copg_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
coll_c2	copg/car_racing/gda_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
coll_c2	copg/rcvip_racing/copg_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
coll_c2	copg/rcvip_racing/fun.py	/^reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTimecollosio/;"	v
coll_c2	copg/rcvip_racing/gda_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
collisions	misc/benchmark.py	/^                        collisions = -1$/;"	v
collisions	misc/benchmark.py	/^                        collisions = experiment.car_total_collisions[0]$/;"	v
command	misc/nanny.py	/^    command = "python benchmark.py --skip %d"%(num_lines)$/;"	v
command	misc/nanny.py	/^command = "python benchmark.py --skip %d"%(skip)$/;"	v
command	misc/parent.py	/^    command = "python3 child.py --skip %d"%(num_lines)$/;"	v
command	misc/parent.py	/^command = "python3 child.py"$/;"	v
commanded_steering	sysid/steeringSysid.py	/^commanded_steering = np.array(data[:,0,7])$/;"	v
compLocalCoordinates	copg/car_racing_simulator/Track.py	/^    def compLocalCoordinates(self, x):$/;"	m	class:Track
compLocalCoordinates	copg/car_racing_simulator/VehicleModel.py	/^    def compLocalCoordinates(self, x):$/;"	m	class:VehicleModel
confidence_ellipse	misc/ukf.py	/^    def confidence_ellipse(self, mean,cov, ax, n_std=3.0, facecolor='none', **kwargs):$/;"	m	class:UKF
config	configGenerator.py	/^        config = deepcopy(original_config)$/;"	v
config	configs/noise.py	/^        config = deepcopy(original_config)$/;"	v
config	copg/car_racing/copg_orca.py	/^config = json.load(open('config.json'))$/;"	v
config	copg/car_racing/gda_orca.py	/^config = json.load(open('config.json'))$/;"	v
config	copg/car_racing/results.py	/^config = json.load(open('config.json'))$/;"	v
config	copg/car_racing_simulator/cpg_main.py	/^    config = json.load(open('config.json'))$/;"	v
config	copg/rcvip_racing/copg_orca.py	/^config = json.load(open('config.json'))$/;"	v
config	copg/rcvip_racing/gda_orca.py	/^config = json.load(open('config.json'))$/;"	v
config	copg/rcvip_racing/results.py	/^config = json.load(open('config.json'))$/;"	v
config	results.py	/^config = json.load(open('config.json'))$/;"	v
config	util/plotTrajectory.py	/^config = minidom.parse(config_filename)$/;"	v
config_car	configGenerator.py	/^        config_car = config_cars.getElementsByTagName('car')[0]$/;"	v
config_car	configs/noise.py	/^        config_car = config_cars.getElementsByTagName('car')[0]$/;"	v
config_cars	configGenerator.py	/^        config_cars = config.getElementsByTagName('cars')[0]$/;"	v
config_cars	configs/noise.py	/^        config_cars = config.getElementsByTagName('cars')[0]$/;"	v
config_controller	configGenerator.py	/^        config_controller = config_car.getElementsByTagName('controller')[0]$/;"	v
config_controller	configs/noise.py	/^        config_controller = config_car.getElementsByTagName('controller')[0]$/;"	v
config_extensions	configGenerator.py	/^        config_extensions = config.getElementsByTagName('extensions')[0]$/;"	v
config_extensions	configs/noise.py	/^        config_extensions = config.getElementsByTagName('extensions')[0]$/;"	v
config_filename	configGenerator.py	/^config_filename = config_folder + 'master.xml'$/;"	v
config_filename	configs/noise.py	/^config_filename = config_folder + 'master.xml'$/;"	v
config_filename	run.py	/^    config_filename = '.\/configs\/'+name+'.xml'$/;"	v
config_filename	util/plotTrajectory.py	/^config_filename = '.\/configs\/cvar.xml'$/;"	v
config_filename_vec	batchRun.py	/^    config_filename_vec = glob.glob(pattern)$/;"	v
config_folder	configGenerator.py	/^config_folder = '.\/configs\/' + name + '\/'$/;"	v
config_folder	configs/noise.py	/^config_folder = '.\/configs\/' + name + '\/'$/;"	v
config_track	util/plotTrajectory.py	/^config_track= config.getElementsByTagName('track')[0]$/;"	v
conjugate_gradient	copg/copg_optim/utils.py	/^def conjugate_gradient(grad_x, grad_y,  tot_grad_x, tot_grad_y, x_params, y_params, b, x=None, n/;"	f
cons	misc/laptime.py	/^    cons = tuple([{'type': 'ineq', 'fun': lambda x:x[i]} for i in range(track_len)])$/;"	v
constraints	misc/cvxpy_test.py	/^constraints = [0 <= x, x <= 1]$/;"	v
constructOpponentConstraint	planner/Planner.py	/^    def constructOpponentConstraint(self,opponent_state):$/;"	m	class:Planner
constructTrackBoundaryConstraint	planner/Planner.py	/^    def constructTrackBoundaryConstraint(self):$/;"	m	class:Planner
control	car/Car.py	/^    def control(self):$/;"	m	class:Car
control	controller/CarController.py	/^    def control(self):$/;"	m	class:CarController
control	controller/EmptyCarController.py	/^    def control(self):$/;"	m	class:EmptyCarController
control	controller/PidController.py	/^    def control(self, x0, x, dxdt=None):$/;"	m	class:PidController
control	controller/PurePursuitCarController.py	/^    def control(self):$/;"	m	class:PurePursuitCarController
control	controller/StanleyCarController.py	/^    def control(self):$/;"	m	class:StanleyCarController
control	controller/ccmppi/CcmppiCarController.py	/^    def control(self):$/;"	m	class:CcmppiCarController
control	controller/ccmppi/ccmppi.py	/^    def control(self,state,opponents_prediction,control_limit):$/;"	m	class:CCMPPI
control	controller/ccmppi/oldCcmppi.py	/^    def control(self):$/;"	m	class:CcmppiCarController
control	controller/cvar/CvarCarController.py	/^    def control(self):$/;"	m	class:CvarCarController
control	controller/mppi/MppiCarController.py	/^    def control(self):$/;"	m	class:MppiCarController
control	controller/mppi/toy_examples/cudaMppiTest.py	/^control = control.astype(np.float32)$/;"	v
control	controller/mppi/toy_examples/cudaMppiTest.py	/^control = control.flatten()$/;"	v
control	controller/mppi/toy_examples/cudaMppiTest.py	/^control = np.dstack([u1,u2])$/;"	v
control	misc/testGpuDynamics.py	/^control = np.array([0.3974, 0.0356])$/;"	v
control_dim	controller/mppi/toy_examples/cudaMppiTest.py	/^control_dim = 2$/;"	v
control_dim	controller/mppi/toy_examples/dualMass.py	/^    control_dim = 2$/;"	v
control_dim	controller/mppi/toy_examples/invertedPendulum.py	/^    control_dim = 1$/;"	v
control_effort	misc/benchmark.py	/^                        control_effort = -1$/;"	v
control_effort	misc/benchmark.py	/^                        control_effort = experiment.performance_tracker.mean_control_effort$/;"	v
control_limit	controller/cvar/cvar_racecar.cu	/^__device__ float control_limit[2*CONTROL_DIM];$/;"	v	typeref:typename:float[]
control_limit	controller/mppi/mppi_racecar.cu	/^__device__ float control_limit[2*CONTROL_DIM];$/;"	v	typeref:typename:float[]
control_noise_mean	controller/cvar/cvar_racecar.cu	/^__device__ float control_noise_mean[CONTROL_DIM];$/;"	v	typeref:typename:float[]
control_noise_std	controller/cvar/cvar_racecar.cu	/^__device__ float control_noise_std[CONTROL_DIM];$/;"	v	typeref:typename:float[]
convertLti	misc/mpc.py	/^    def convertLti(self,A,B,P,Q,xref,x0,p,du_max,u_max):$/;"	m	class:MPC
convertLti	planner/MPC.py	/^    def convertLti(self,A,B,P,Q,xref,x0,p,du_max,u_max):$/;"	m	class:MPC
convertLti	planner/old_MPC.py	/^    def convertLti(self,A,B,P,Q,xref,x0,p,du_max,u_max):$/;"	m	class:MPC
convertLtiPlanner	planner/MPC.py	/^    def convertLtiPlanner(self,A,B,P,Q,xref,x0,p,u_max=None,du_max=None):$/;"	m	class:MPC
convertLtiPlanner	planner/old_MPC.py	/^    def convertLtiPlanner(self,A,B,P,Q,xref,x0,p,u_max=None,du_max=None):$/;"	m	class:MPC
convertLtv	misc/mpc.py	/^    def convertLtv(self,A_vec,B_vec,C,P,Q,y_ref,x0,du_max,u_max):$/;"	m	class:MPC
convertLtv	planner/MPC.py	/^    def convertLtv(self,A_vec,B_vec,C,P,Q,y_ref,x0,du_max,u_max):$/;"	m	class:MPC
convertLtv	planner/old_MPC.py	/^    def convertLtv(self,A_vec,B_vec,C,P,Q,y_ref,x0,du_max,u_max):$/;"	m	class:MPC
convertToSpline	qpSmooth.py	/^    def convertToSpline(self):$/;"	m	class:QpSmooth
cost	controller/mppi/toy_examples/cudaMppiTest.py	/^cost = np.zeros([sample_count]).astype(np.float32)$/;"	v
cost	controller/mppi/toy_examples/dualMass.py	/^def cost(state,u):$/;"	f
cost	controller/mppi/toy_examples/invertedPendulum.py	/^def cost(state):$/;"	f
cost	track/RCPTrack.py	/^    def cost(self,k):$/;"	m	class:RCPTrack
count	batchRun.py	/^    count = 0$/;"	v
count	misc/Qfstudy/QfGif.py	/^count = 20$/;"	v
count	misc/laptime.py	/^count = 0$/;"	v
counter1	copg/car_racing/copg_orca.py	/^        counter1 = counter1[remaining_xo]$/;"	v
counter1	copg/car_racing/copg_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
counter1	copg/car_racing/copg_orca.py	/^    counter1 = torch.zeros((curr_batch_size))$/;"	v
counter1	copg/car_racing/gda_orca.py	/^        counter1 = counter1[remaining_xo]$/;"	v
counter1	copg/car_racing/gda_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
counter1	copg/car_racing/gda_orca.py	/^    counter1 = torch.zeros((curr_batch_size))$/;"	v
counter1	copg/car_racing/results.py	/^    counter1 = counter1[remaining_xo]$/;"	v
counter1	copg/car_racing/results.py	/^counter1 = torch.zeros((curr_batch_size))$/;"	v
counter1	copg/rcvip_racing/copg_orca.py	/^        counter1 = counter1[remaining_xo]$/;"	v
counter1	copg/rcvip_racing/copg_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
counter1	copg/rcvip_racing/copg_orca.py	/^    counter1 = torch.zeros((curr_batch_size))$/;"	v
counter1	copg/rcvip_racing/fun.py	/^reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTimecollosio/;"	v
counter1	copg/rcvip_racing/gda_orca.py	/^        counter1 = counter1[remaining_xo]$/;"	v
counter1	copg/rcvip_racing/gda_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
counter1	copg/rcvip_racing/gda_orca.py	/^    counter1 = torch.zeros((curr_batch_size))$/;"	v
counter1	copg/rcvip_racing/results.py	/^    counter1 = counter1[remaining_xo]$/;"	v
counter1	copg/rcvip_racing/results.py	/^counter1 = torch.zeros((curr_batch_size))$/;"	v
counter1	results.py	/^    counter1 = counter1[remaining_xo]$/;"	v
counter1	results.py	/^counter1 = torch.zeros((curr_batch_size))$/;"	v
counter2	copg/car_racing/copg_orca.py	/^        counter2 = counter2[remaining_xo]$/;"	v
counter2	copg/car_racing/copg_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
counter2	copg/car_racing/copg_orca.py	/^    counter2 = torch.zeros((curr_batch_size))$/;"	v
counter2	copg/car_racing/gda_orca.py	/^        counter2 = counter2[remaining_xo]$/;"	v
counter2	copg/car_racing/gda_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
counter2	copg/car_racing/gda_orca.py	/^    counter2 = torch.zeros((curr_batch_size))$/;"	v
counter2	copg/car_racing/results.py	/^    counter2 = counter2[remaining_xo]$/;"	v
counter2	copg/car_racing/results.py	/^counter2 = torch.zeros((curr_batch_size))$/;"	v
counter2	copg/rcvip_racing/copg_orca.py	/^        counter2 = counter2[remaining_xo]$/;"	v
counter2	copg/rcvip_racing/copg_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
counter2	copg/rcvip_racing/copg_orca.py	/^    counter2 = torch.zeros((curr_batch_size))$/;"	v
counter2	copg/rcvip_racing/fun.py	/^reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTimecollosio/;"	v
counter2	copg/rcvip_racing/gda_orca.py	/^        counter2 = counter2[remaining_xo]$/;"	v
counter2	copg/rcvip_racing/gda_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
counter2	copg/rcvip_racing/gda_orca.py	/^    counter2 = torch.zeros((curr_batch_size))$/;"	v
counter2	copg/rcvip_racing/results.py	/^    counter2 = counter2[remaining_xo]$/;"	v
counter2	copg/rcvip_racing/results.py	/^counter2 = torch.zeros((curr_batch_size))$/;"	v
counter2	results.py	/^    counter2 = counter2[remaining_xo]$/;"	v
counter2	results.py	/^counter2 = torch.zeros((curr_batch_size))$/;"	v
covarianceControlDynamicBicycle	misc/linearizeDynamics.py	/^    def covarianceControlDynamicBicycle(self):$/;"	m	class:LinearizeDynamics
covarianceControl_cvxpy	misc/linearizeDynamics.py	/^    def covarianceControl_cvxpy(self,state,control):$/;"	m	class:LinearizeDynamics
cp	controller/ccmppi/ccmppi_dynamic.py	/^import cvxpy as cp$/;"	I	nameref:module:cvxpy
cp	controller/ccmppi/ccmppi_kinematic.py	/^import cvxpy as cp$/;"	I	nameref:module:cvxpy
cp	misc/cvxpy_test.py	/^import cvxpy as cp$/;"	I	nameref:module:cvxpy
cp	misc/linearizeDynamics.py	/^import cvxpy as cp$/;"	I	nameref:module:cvxpy
cpg_controller	copg/car_racing_simulator/pure_pursuit.py	/^def cpg_controller(cx,cy,state,target_ind):$/;"	f
createBoundary	controller/ccmppi/CcmppiCarController.py	/^    def createBoundary(self,show=False):$/;"	m	class:CcmppiCarController
createBoundary	controller/ccmppi/oldCcmppi.py	/^    def createBoundary(self,show=False):$/;"	m	class:CcmppiCarController
createBoundary	controller/cvar/CvarCarController.py	/^    def createBoundary(self,show=False):$/;"	m	class:CvarCarController
createBoundary	misc/ctrlMppiWrapper.py	/^    def createBoundary(self,show=False):$/;"	m	class:ctrlMppiWrapper
createBoundary	planner/Planner.py	/^    def createBoundary(self,show=False):$/;"	m	class:Planner
createBoundary	track/RCPTrack.py	/^    def createBoundary(self,ref_path=None,ref_heading=None):$/;"	m	class:RCPTrack
createBoundary	track/Track.py	/^    def createBoundary(self,show=False):$/;"	m	class:Track
criterion	misc/hybridDynamicSimNew.py	/^    criterion = nn.MSELoss()$/;"	v
criterion	misc/hybridKinematicSim.py	/^    criterion = nn.MSELoss()$/;"	v
criterion	misc/hybridSim.py	/^    criterion = nn.MSELoss()$/;"	v
critic_update	copg/copg_optim/critic_functions.py	/^def critic_update(state_mb, return_mb, q, optim_q):$/;"	f
cross	planner/Planner.py	/^        def cross(A,B):$/;"	f	member:Planner.addCurvatureNormObjective	file:
ctrlCar	controller/StanleyCarController.py	/^    def ctrlCar(self,state,track,v_override=None,reverse=False):$/;"	m	class:StanleyCarController
ctrlCar	misc/ctrlEmptyWrapper.py	/^    def ctrlCar(self,states,track,v_override=None,reverse=False):$/;"	m	class:ctrlEmptyWrapper
ctrlCar	misc/ctrlMpcWrapper.py	/^    def ctrlCar(self,state,track,v_override=None,reverse=False):$/;"	m	class:ctrlMpcWrapper
ctrlCar	misc/ctrlMppiWrapper.py	/^    def ctrlCar(self,state,track,v_override=None,reverse=False):$/;"	m	class:ctrlMppiWrapper
ctrlEmptyWrapper	misc/ctrlEmptyWrapper.py	/^class ctrlEmptyWrapper(Car):$/;"	c
ctrlMpcWrapper	misc/ctrlMpcWrapper.py	/^class ctrlMpcWrapper(Car):$/;"	c
ctrlMppiWrapper	misc/ctrlMppiWrapper.py	/^class ctrlMppiWrapper(Car):$/;"	c
cuda_code_macros	controller/ccmppi/curand.py	/^cuda_code_macros = cuda_code_macros | {"CURAND_KERNEL_N":1024}$/;"	v
cuda_code_macros	controller/ccmppi/curand.py	/^cuda_code_macros = {"SAMPLE_COUNT":K, "HORIZON":T, "CONTROL_DIM":m,"STATE_DIM":state_dim,"RACELI/;"	v
cuda_code_macros	controller/mppi/toy_examples/curand.py	/^cuda_code_macros = cuda_code_macros | {"CURAND_KERNEL_N":1024}$/;"	v
cuda_code_macros	controller/mppi/toy_examples/curand.py	/^cuda_code_macros = {"SAMPLE_COUNT":K, "HORIZON":T, "CONTROL_DIM":m,"STATE_DIM":state_dim,"RACELI/;"	v
cuda_filename	controller/ccmppi/curand.py	/^cuda_filename = ".\/mppi_racecar.cu"$/;"	v
cuda_filename	controller/mppi/toy_examples/curand.py	/^cuda_filename = ".\/mppi_racecar.cu"$/;"	v
cuda_generate_random_var	controller/ccmppi/curand.py	/^cuda_generate_random_var = mod.get_function("generate_normal_with_limits")$/;"	v
cuda_generate_random_var	controller/mppi/toy_examples/curand.py	/^cuda_generate_random_var = mod.get_function("generate_normal_with_limits")$/;"	v
cuda_init_curand_kernel	controller/ccmppi/curand.py	/^cuda_init_curand_kernel = mod.get_function("init_curand_kernel")$/;"	v
cuda_init_curand_kernel	controller/mppi/toy_examples/curand.py	/^cuda_init_curand_kernel = mod.get_function("init_curand_kernel")$/;"	v
curand_states	controller/ccmppi/ccmppi.cu	/^__device__ curandState_t* curand_states[CURAND_KERNEL_N];$/;"	v	typeref:typename:curandState_t * []
curand_states	controller/cvar/cvar_racecar.cu	/^__device__ curandState_t* curand_states[CURAND_KERNEL_N];$/;"	v	typeref:typename:curandState_t * []
curand_states	controller/mppi/mppi_racecar.cu	/^__device__ curandState_t* curand_states[CURAND_KERNEL_N];$/;"	v	typeref:typename:curandState_t * []
curr_batch_size	copg/car_racing/copg_orca.py	/^        curr_batch_size = state_c1.size(0)$/;"	v
curr_batch_size	copg/car_racing/copg_orca.py	/^    curr_batch_size = 8$/;"	v
curr_batch_size	copg/car_racing/gda_orca.py	/^        curr_batch_size = state_c1.size(0)$/;"	v
curr_batch_size	copg/car_racing/gda_orca.py	/^    curr_batch_size = 2$/;"	v
curr_batch_size	copg/car_racing/results.py	/^    curr_batch_size = state_c1.size(0)$/;"	v
curr_batch_size	copg/car_racing/results.py	/^curr_batch_size = init_size$/;"	v
curr_batch_size	copg/rcvip_racing/copg_orca.py	/^        curr_batch_size = state_c1.size(0)$/;"	v
curr_batch_size	copg/rcvip_racing/copg_orca.py	/^    curr_batch_size = 8$/;"	v
curr_batch_size	copg/rcvip_racing/gda_orca.py	/^        curr_batch_size = state_c1.size(0)$/;"	v
curr_batch_size	copg/rcvip_racing/gda_orca.py	/^    curr_batch_size = 2$/;"	v
curr_batch_size	copg/rcvip_racing/results.py	/^    curr_batch_size = state_c1.size(0)$/;"	v
curr_batch_size	copg/rcvip_racing/results.py	/^curr_batch_size = init_size$/;"	v
curr_batch_size	results.py	/^    curr_batch_size = state_c1.size(0)$/;"	v
curr_batch_size	results.py	/^curr_batch_size = init_size$/;"	v
curvatureJac	qpSmooth.py	/^    def curvatureJac(self):$/;"	m	class:QpSmooth
curvilinear_coordinates	copg/car_racing_simulator/cpg_main.py	/^    curvilinear_coordinates = []$/;"	v
curvilinear_coordinates1	copg/car_racing/results.py	/^curvilinear_coordinates1 = []$/;"	v
curvilinear_coordinates1	copg/rcvip_racing/results.py	/^curvilinear_coordinates1 = []$/;"	v
curvilinear_coordinates1	results.py	/^curvilinear_coordinates1 = []$/;"	v
curvilinear_coordinates2	copg/car_racing/results.py	/^curvilinear_coordinates2 = []$/;"	v
curvilinear_coordinates2	copg/rcvip_racing/results.py	/^curvilinear_coordinates2 = []$/;"	v
curvilinear_coordinates2	results.py	/^curvilinear_coordinates2 = []$/;"	v
curvilinear_np	copg/car_racing_simulator/cpg_main.py	/^    curvilinear_np = np.array(curvilinear_coordinates)$/;"	v
cvar_A	configGenerator.py	/^cvar_A = 3.0$/;"	v
cvar_A_vec	configs/noise.py	/^cvar_A_vec = [4,7,10]$/;"	v
cvar_Cu	configs/noise.py	/^cvar_Cu = 0.5$/;"	v
cvar_Cu	util/analyzeBatchExpGrid.py	/^            cvar_Cu = cvar_Cu_vec[j]$/;"	v
cvar_Cu_data	util/analyzeBatchExpGrid.py	/^    cvar_Cu_data = np.array(data_dict['cvar_Cu'])$/;"	v
cvar_Cu_vec	configGenerator.py	/^cvar_Cu_vec = np.linspace(0.6,1.0,5)$/;"	v
cvar_Cu_vec	util/analyzeBatchExpGrid.py	/^    cvar_Cu_vec = np.linspace(0.6,1.0,5)$/;"	v
cvar_Cu_vec_text	util/analyzeBatchExpGrid.py	/^    cvar_Cu_vec_text = ['%.1f'%val for val in cvar_Cu_vec]$/;"	v
cvar_a	util/analyzeBatchExpGrid.py	/^            cvar_a = cvar_a_vec[i]$/;"	v
cvar_a_data	util/analyzeBatchExpGrid.py	/^    cvar_a_data = np.array(data_dict['cvar_a'])$/;"	v
cvar_a_vec	configGenerator.py	/^cvar_a_vec = np.linspace(0.1,0.9,5)$/;"	v
cvar_a_vec	configs/noise.py	/^cvar_a_vec = np.linspace(0.1,0.9,5)$/;"	v
cvar_a_vec	util/analyzeBatchExpGrid.py	/^    cvar_a_vec = np.linspace(0.1,0.9,5)$/;"	v
cvar_a_vec_text	util/analyzeBatchExpGrid.py	/^    cvar_a_vec_text = ['%.1f'%val for val in cvar_a_vec]$/;"	v
cvar_enable	util/analyzeBatchExpGrid.py	/^    cvar_enable = np.array(data_dict['enable_cvar'])$/;"	v
d	copg/car_racing_simulator/cpg_main.py	/^        d, delta, target_ind = cpg_controller(track1.X, track1.Y, state, target_ind)$/;"	v
d_dir	sysid/fitThrottle.py	/^d_dir = np.vstack([np.cos(heading),np.sin(heading)])$/;"	v
d_heading	misc/ukfSysid.py	/^d_heading = (d_heading + np.pi) % (2 * np.pi) - np.pi$/;"	v
d_heading	misc/ukfSysid.py	/^d_heading = np.diff(data[:,3])$/;"	v
data	misc/readlog.py	/^    data = pickle.load(f)$/;"	v
data	misc/readlog.py	/^data = np.array(data)[:,0,:]$/;"	v
data	misc/ukfSysid.py	/^    data = pickle.load(f)$/;"	v
data	misc/ukfSysid.py	/^data = data.squeeze(1)$/;"	v
data	misc/ukfSysid.py	/^data = data[:-100,:]$/;"	v
data	misc/ukfSysid.py	/^data = np.array(data)$/;"	v
data	misc/validateHybridModel.py	/^    data = pickle.load(f)$/;"	v
data	misc/validateHybridModel.py	/^data = np.array(data)$/;"	v
data	sysid/fitThrottle.py	/^    data = pickle.load(f)$/;"	v
data	sysid/fitThrottle.py	/^data = np.array(data)$/;"	v
data	sysid/readlog.py	/^    data = pickle.load(f)$/;"	v
data	sysid/readlog.py	/^data = np.array(data)[:,0,:]$/;"	v
data	sysid/steeringSysid.py	/^    data = pickle.load(f)$/;"	v
data	sysid/steeringSysid.py	/^data = np.array(data)$/;"	v
data_dict	util/analyzeBatchExpGrid.py	/^    data_dict = {}$/;"	v
data_len	misc/ukfSysid.py	/^data_len = t.shape[0]$/;"	v
data_len	misc/validateHybridModel.py	/^data_len = t.shape[0]$/;"	v
data_loader	misc/hybridDynamicSimNew.py	/^    data_loader = DataLoader(dataset, batch_size=512, shuffle=True, num_workers=4)$/;"	v
data_loader	misc/hybridKinematicSim.py	/^    data_loader = DataLoader(dataset, batch_size=512, shuffle=True, num_workers=4)$/;"	v
data_loader	misc/hybridSim.py	/^    data_loader = DataLoader(dataset, batch_size=512, shuffle=True, num_workers=4)$/;"	v
dataset	misc/hybridDynamicSimNew.py	/^    dataset = CarDataset(log_names,dt,history_steps,forward_steps)$/;"	v
dataset	misc/hybridKinematicSim.py	/^    dataset = CarDataset(log_names,dt,history_steps,forward_steps)$/;"	v
dataset	misc/hybridSim.py	/^    dataset = CarDataset(log_names,dt,history_steps,forward_steps)$/;"	v
debug	common.py	/^    debug = False$/;"	v	class:PrintObject
debug	misc/advCarSim.py	/^    def debug(self):$/;"	m	class:advCarSim
debug	misc/ethCarSim.py	/^    def debug(self):$/;"	m	class:ethCarSim
debug	misc/mpc.py	/^    def debug(self):$/;"	m	class:MPC
debug	planner/MPC.py	/^    def debug(self):$/;"	m	class:MPC
debug	planner/old_MPC.py	/^    def debug(self):$/;"	m	class:MPC
debug_info	controller/ccmppi/ccmppi_dynamic.py	/^    debug_info = {'x0':state, 'model':'dynamic', 'input_constraint':True}$/;"	v
dec_max_motor	track/RCPTrack.py	/^        dec_max_motor = lambda x:4.5$/;"	f	member:RCPTrack.generateSpeedProfile	file:
delta	copg/car_racing_simulator/cpg_main.py	/^        d, delta, target_ind = cpg_controller(track1.X, track1.Y, state, target_ind)$/;"	v
delta	sysid/cg.py	/^delta = [-13,13,34.5,-34.5]$/;"	v
demoSingleControl	planner/Planner.py	/^    def demoSingleControl(self):$/;"	m	class:Planner
descrip	misc/laptime.py	/^    descrip = 'uuurrullurrrdddddluulddl'$/;"	v
dest	controller/mppi/toy_examples/pycudaTest.py	/^dest = numpy.zeros_like(a)$/;"	v
device	copg/car_racing/copg_orca.py	/^device = 'cpu'#torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')$/;"	v
device	copg/car_racing/gda_orca.py	/^device = 'cpu' #torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')$/;"	v
device	copg/car_racing/results.py	/^device = torch.device("cpu")$/;"	v
device	copg/car_racing_simulator/cpg_main.py	/^    device = torch.device("cpu")$/;"	v
device	copg/rcvip_racing/copg_orca.py	/^device = 'cpu'#torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')$/;"	v
device	copg/rcvip_racing/gda_orca.py	/^device = 'cpu' #torch.device('cuda:0' if torch.cuda.is_available() else 'cpu')$/;"	v
device	copg/rcvip_racing/results.py	/^device = torch.device("cpu")$/;"	v
device	misc/hybridDynamicSimNew.py	/^    device = torch.device('cpu')$/;"	v
device	misc/hybridKinematicSim.py	/^    device = torch.device('cpu')$/;"	v
device	misc/hybridSim.py	/^    device = torch.device('cpu')$/;"	v
device	misc/validateHybridModel.py	/^device = torch.device('cpu') # cpu or cuda$/;"	v
device	results.py	/^device = torch.device("cpu")$/;"	v
device_limits	controller/ccmppi/curand.py	/^device_limits = drv.to_device(limits)$/;"	v
device_limits	controller/mppi/toy_examples/curand.py	/^device_limits = drv.to_device(limits)$/;"	v
device_rand_vals	controller/ccmppi/curand.py	/^device_rand_vals = drv.to_device(rand_vals)$/;"	v
device_rand_vals	controller/mppi/toy_examples/curand.py	/^device_rand_vals = drv.to_device(rand_vals)$/;"	v
device_scales	controller/ccmppi/curand.py	/^device_scales = drv.to_device(scales)$/;"	v
device_scales	controller/mppi/toy_examples/curand.py	/^device_scales = drv.to_device(scales)$/;"	v
diff	sysid/motorModel.py	/^def diff(a,b):$/;"	f
directory	copg/car_racing/copg_orca.py	/^directory = '.\/' + folder_location + experiment_name + 'model'$/;"	v
directory	copg/car_racing/gda_orca.py	/^directory = '..\/' + folder_location + experiment_name + 'model'$/;"	v
directory	copg/rcvip_racing/copg_orca.py	/^directory = '.\/' + folder_location + experiment_name + 'model'$/;"	v
directory	copg/rcvip_racing/gda_orca.py	/^directory = '..\/' + folder_location + experiment_name + 'model'$/;"	v
discretizePath	track/RCPTrack.py	/^    def discretizePath(self,steps=1000):$/;"	m	class:RCPTrack
dist	planner/Planner.py	/^        dist = lambda x,y:((x[0]-y[0])**2 + (x[1]-y[1])**2)**0.5$/;"	f	member:Planner.bezierCurve	file:
dist	planner/Planner.py	/^        dist = lambda x,y:((x[0]-y[0])**2 + (x[1]-y[1])**2)**0.5$/;"	f	member:Planner.lagrangeDer	file:
dist	qpSmooth.py	/^        dist = lambda x,y:((x[0]-y[0])**2 + (x[1]-y[1])**2)**0.5$/;"	f	member:QpSmooth.bezierCurve	file:
dist	qpSmooth.py	/^        dist = lambda x,y:((x[0]-y[0])**2 + (x[1]-y[1])**2)**0.5$/;"	f	member:QpSmooth.lagrangeDer	file:
dist	track/RCPTrack.py	/^        dist = lambda a,b: ((a[0]-b[0])**2+(a[1]-b[1])**2)**0.5$/;"	f	member:RCPTrack.generateSpeedProfile	file:
dist	track/RCPTrack.py	/^        dist = lambda a,b: ((a[0]-b[0])**2+(a[1]-b[1])**2)**0.5$/;"	f	member:RCPTrack.reconstructRaceline	file:
dist	track/RCPTrack.py	/^        dist = lambda a,b: ((a[0]-b[0])**2+(a[1]-b[1])**2)**0.5$/;"	f	member:RCPTrack.verifySpeedProfile	file:
dist	track/RCPTrack.py	/^        dist = lambda x,y:((x[0]-y[0])**2 + (x[1]-y[1])**2)**0.5$/;"	f	member:RCPTrack.lagrangeDer	file:
dist1	copg/car_racing/copg_orca.py	/^        dist1 = p1(st1_gpu)$/;"	v
dist1	copg/car_racing/gda_orca.py	/^        dist1 = p1(st1_gpu)$/;"	v
dist1	copg/car_racing/results.py	/^    dist1 = p1(torch.cat([state_c1[:, 0:5], state_c2[:, 0:5]], dim=1))$/;"	v
dist1	copg/rcvip_racing/copg_orca.py	/^        dist1 = p1(st1_gpu)$/;"	v
dist1	copg/rcvip_racing/gda_orca.py	/^        dist1 = p1(st1_gpu)$/;"	v
dist1	copg/rcvip_racing/results.py	/^    dist1 = p1(torch.cat([state_c1[:, 0:5], state_c2[:, 0:5]], dim=1))$/;"	v
dist1	results.py	/^    dist1 = p1(torch.cat([state_c1[:, 0:5], state_c2[:, 0:5]], dim=1))$/;"	v
dist2	copg/car_racing/copg_orca.py	/^        dist2 = p2(st2_gpu)$/;"	v
dist2	copg/car_racing/gda_orca.py	/^        dist2 = p2(st2_gpu)$/;"	v
dist2	copg/car_racing/results.py	/^    dist2 = p2(torch.cat([state_c2[:, 0:5], state_c1[:, 0:5]], dim=1))$/;"	v
dist2	copg/rcvip_racing/copg_orca.py	/^        dist2 = p2(st2_gpu)$/;"	v
dist2	copg/rcvip_racing/gda_orca.py	/^        dist2 = p2(st2_gpu)$/;"	v
dist2	copg/rcvip_racing/results.py	/^    dist2 = p2(torch.cat([state_c2[:, 0:5], state_c1[:, 0:5]], dim=1))$/;"	v
dist2	results.py	/^    dist2 = p2(torch.cat([state_c2[:, 0:5], state_c1[:, 0:5]], dim=1))$/;"	v
dist_2	track/RCPTrack.py	/^        dist_2 = lambda a,b: (a[0]-b[0])**2+(a[1]-b[1])**2$/;"	f	member:RCPTrack.localTrajectory	file:
dist_batch1	copg/car_racing/copg_orca.py	/^    dist_batch1 = p1(state_gpu_p1)$/;"	v
dist_batch1	copg/car_racing/gda_orca.py	/^    dist_batch1 = p1(state_gpu_p1)$/;"	v
dist_batch1	copg/rcvip_racing/copg_orca.py	/^    dist_batch1 = p1(state_gpu_p1)$/;"	v
dist_batch1	copg/rcvip_racing/gda_orca.py	/^    dist_batch1 = p1(state_gpu_p1)$/;"	v
dist_batch2	copg/car_racing/copg_orca.py	/^    dist_batch2 = p2(state_gpu_p2)$/;"	v
dist_batch2	copg/car_racing/gda_orca.py	/^    dist_batch2 = p2(state_gpu_p2)$/;"	v
dist_batch2	copg/rcvip_racing/copg_orca.py	/^    dist_batch2 = p2(state_gpu_p2)$/;"	v
dist_batch2	copg/rcvip_racing/gda_orca.py	/^    dist_batch2 = p2(state_gpu_p2)$/;"	v
distuu	track/RCPTrack.py	/^        distuu = lambda u1,u2: dist(splev(u1, self.raceline, der=0),splev(u2, self.raceline, der/;"	f	member:RCPTrack.verifySpeedProfile	file:
doNothing	misc/vicon.py	/^    def doNothing():$/;"	m	class:Vicon
done	copg/car_racing/copg_orca.py	/^        done = (done_c1) * (done_c2)  # ~((~done_c1) * (~done_c2))$/;"	v
done	copg/car_racing/copg_orca.py	/^    done = torch.tensor([False])$/;"	v
done	copg/car_racing/gda_orca.py	/^        done = (done_c1) * (done_c2)  # ~((~done_c1) * (~done_c2))$/;"	v
done	copg/car_racing/gda_orca.py	/^    done = torch.tensor([False])$/;"	v
done	copg/car_racing/results.py	/^    done = ((done_c1) * (done_c2))$/;"	v
done	copg/rcvip_racing/copg_orca.py	/^        done = (done_c1) * (done_c2)  # ~((~done_c1) * (~done_c2))$/;"	v
done	copg/rcvip_racing/copg_orca.py	/^    done = torch.tensor([False])$/;"	v
done	copg/rcvip_racing/gda_orca.py	/^        done = (done_c1) * (done_c2)  # ~((~done_c1) * (~done_c2))$/;"	v
done	copg/rcvip_racing/gda_orca.py	/^    done = torch.tensor([False])$/;"	v
done	copg/rcvip_racing/results.py	/^    done = ((done_c1) * (done_c2))$/;"	v
done	results.py	/^    done = ((done_c1) * (done_c2))$/;"	v
done_c1	copg/car_racing/copg_orca.py	/^                done_c1 = done_c1[element_deducted]$/;"	v
done_c1	copg/car_racing/copg_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
done_c1	copg/car_racing/copg_orca.py	/^    done_c1 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
done_c1	copg/car_racing/gda_orca.py	/^                done_c1 = done_c1[element_deducted]$/;"	v
done_c1	copg/car_racing/gda_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
done_c1	copg/car_racing/gda_orca.py	/^    done_c1 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
done_c1	copg/car_racing/results.py	/^        done_c1 = done_c1[element_deducted]$/;"	v
done_c1	copg/car_racing/results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
done_c1	copg/car_racing/results.py	/^done_c1 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
done_c1	copg/rcvip_racing/copg_orca.py	/^                done_c1 = done_c1[element_deducted]$/;"	v
done_c1	copg/rcvip_racing/copg_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
done_c1	copg/rcvip_racing/copg_orca.py	/^    done_c1 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
done_c1	copg/rcvip_racing/fun.py	/^reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTimecollosio/;"	v
done_c1	copg/rcvip_racing/gda_orca.py	/^                done_c1 = done_c1[element_deducted]$/;"	v
done_c1	copg/rcvip_racing/gda_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
done_c1	copg/rcvip_racing/gda_orca.py	/^    done_c1 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
done_c1	copg/rcvip_racing/results.py	/^        done_c1 = done_c1[element_deducted]$/;"	v
done_c1	copg/rcvip_racing/results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
done_c1	copg/rcvip_racing/results.py	/^done_c1 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
done_c1	results.py	/^        done_c1 = done_c1[element_deducted]$/;"	v
done_c1	results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
done_c1	results.py	/^done_c1 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
done_c2	copg/car_racing/copg_orca.py	/^                done_c2 = done_c2[element_deducted]$/;"	v
done_c2	copg/car_racing/copg_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
done_c2	copg/car_racing/copg_orca.py	/^    done_c2 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
done_c2	copg/car_racing/gda_orca.py	/^                done_c2 = done_c2[element_deducted]$/;"	v
done_c2	copg/car_racing/gda_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
done_c2	copg/car_racing/gda_orca.py	/^    done_c2 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
done_c2	copg/car_racing/results.py	/^        done_c2 = done_c2[element_deducted]$/;"	v
done_c2	copg/car_racing/results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
done_c2	copg/car_racing/results.py	/^done_c2 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
done_c2	copg/rcvip_racing/copg_orca.py	/^                done_c2 = done_c2[element_deducted]$/;"	v
done_c2	copg/rcvip_racing/copg_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
done_c2	copg/rcvip_racing/copg_orca.py	/^    done_c2 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
done_c2	copg/rcvip_racing/fun.py	/^reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTimecollosio/;"	v
done_c2	copg/rcvip_racing/gda_orca.py	/^                done_c2 = done_c2[element_deducted]$/;"	v
done_c2	copg/rcvip_racing/gda_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
done_c2	copg/rcvip_racing/gda_orca.py	/^    done_c2 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
done_c2	copg/rcvip_racing/results.py	/^        done_c2 = done_c2[element_deducted]$/;"	v
done_c2	copg/rcvip_racing/results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
done_c2	copg/rcvip_racing/results.py	/^done_c2 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
done_c2	results.py	/^        done_c2 = done_c2[element_deducted]$/;"	v
done_c2	results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
done_c2	results.py	/^done_c2 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
dot_product	sysid/fitThrottle.py	/^dot_product = np.empty(dr.shape[1])$/;"	v
down	track/RCPTrack.py	/^        down = lambda x,y : [(x+0.5)*self.scale,(y)*self.scale]$/;"	f	member:RCPTrack.initRaceline	file:
dr	sysid/fitThrottle.py	/^dr = np.vstack([dx,dy])$/;"	v
drawAcc	track/RCPTrack.py	/^    def drawAcc(self,acc,img):$/;"	m	class:RCPTrack
drawAcceleration	extension/Visualization.py	/^    def drawAcceleration(self,img,car,coord):$/;"	m	class:Visualization
drawArrow	track/EmptyTrack.py	/^    def drawArrow(self,source, orientation, length, color=(0,0,0),thickness=2, img=None, show=Fa/;"	m	class:EmptyTrack
drawArrow	track/RCPTrack.py	/^    def drawArrow(self,source, orientation, length, color=(0,0,0),thickness=2, img=None, show=Fa/;"	m	class:RCPTrack
drawArrow	track/Skidpad.py	/^    def drawArrow(self,coord, orientation, length, color=(0,0,0),thickness=2, img=None, show=Fal/;"	m	class:Skidpad
drawCar	extension/Visualization.py	/^    def drawCar(self, img, car):$/;"	m	class:Visualization
drawCar	track/EmptyTrack.py	/^    def drawCar(self, img, state, steering):$/;"	m	class:EmptyTrack
drawCar	track/Skidpad.py	/^    def drawCar(self,img, state, steering):$/;"	m	class:Skidpad
drawCircle	track/EmptyTrack.py	/^    def drawCircle(self, img, coord, radius_m, color = (0,0,0)):$/;"	m	class:EmptyTrack
drawCircle	track/RCPTrack.py	/^    def drawCircle(self, img, coord, radius_m, color = (0,0,0)):$/;"	m	class:RCPTrack
drawControl	extension/Visualization.py	/^    def drawControl(self,img,car,coord):$/;"	m	class:Visualization
drawControlForAllCars	extension/Visualization.py	/^    def drawControlForAllCars(self,img):$/;"	m	class:Visualization
drawControlStatic	extension/Visualization.py	/^    def drawControlStatic(self,img,car,coord):$/;"	m	class:Visualization
drawControlStaticForAllCars	extension/Visualization.py	/^    def drawControlStaticForAllCars(self,img):$/;"	m	class:Visualization
drawObstacles	extension/Visualization.py	/^    def drawObstacles(self,img):$/;"	m	class:Visualization
drawPoint	track/EmptyTrack.py	/^    def drawPoint(self, img, coord, color = (0,0,0)):$/;"	m	class:EmptyTrack
drawPoint	track/RCPTrack.py	/^    def drawPoint(self, img, coord, color = (0,0,0)):$/;"	m	class:RCPTrack
drawPointU	track/RCPTrack.py	/^    def drawPointU(self,img,uu):$/;"	m	class:RCPTrack
drawPoints	track/RCPTrack.py	/^    def drawPoints(self, img, coord_vec, color = (0,0,0)):$/;"	m	class:RCPTrack
drawPolyline	track/EmptyTrack.py	/^    def drawPolyline(self,points,img=None,lineColor=(0,0,255),thickness=3 ):$/;"	m	class:EmptyTrack
drawPolyline	track/RCPTrack.py	/^    def drawPolyline(self,points,img=None,lineColor=(0,0,255),thickness=3 ):$/;"	m	class:RCPTrack
drawRaceline	qpSmooth.py	/^    def drawRaceline(self,lineColor=(0,0,255), img=None):$/;"	m	class:QpSmooth
drawRaceline	track/RCPTrack.py	/^    def drawRaceline(self,lineColor=(0,0,255), img=None,points=None):$/;"	m	class:RCPTrack
drawTrack	track/EmptyTrack.py	/^    def drawTrack(self):$/;"	m	class:EmptyTrack
drawTrack	track/RCPTrack.py	/^    def drawTrack(self, img=None,show=False):$/;"	m	class:RCPTrack
drawTrack	track/Skidpad.py	/^    def drawTrack(self):$/;"	m	class:Skidpad
drawTrack	track/Track.py	/^    def drawTrack(self):$/;"	m	class:Track
drv	controller/ccmppi/ccmppi.py	/^        import pycuda.driver as drv$/;"	I	member:CCMPPI.__init__	file:	nameref:module:pycuda.driver
drv	controller/ccmppi/curand.py	/^import pycuda.driver as drv$/;"	I	nameref:module:pycuda.driver
drv	controller/cvar/CvarCarController.py	/^import pycuda.driver as drv$/;"	I	nameref:module:pycuda.driver
drv	controller/mppi/MppiCarController.py	/^import pycuda.driver as drv$/;"	I	nameref:module:pycuda.driver
drv	controller/mppi/toy_examples/cudaMppiTest.py	/^import pycuda.driver as drv$/;"	I	nameref:module:pycuda.driver
drv	controller/mppi/toy_examples/curand.py	/^import pycuda.driver as drv$/;"	I	nameref:module:pycuda.driver
drv	controller/mppi/toy_examples/pycudaTest.py	/^import pycuda.driver as drv$/;"	I	nameref:module:pycuda.driver
ds	sysid/fitThrottle.py	/^ds = np.sqrt(dx**2+dy**2)$/;"	v
dt	controller/ccmppi/ccmppi_dynamic.py	/^    dt = 0.01$/;"	v
dt	controller/ccmppi/curand.py	/^dt = 0.03$/;"	v
dt	controller/mppi/toy_examples/curand.py	/^dt = 0.03$/;"	v
dt	controller/mppi/toy_examples/dampedBox.py	/^    dt = 0.03$/;"	v
dt	controller/mppi/toy_examples/dualMass.py	/^    dt = 0.1$/;"	v
dt	controller/mppi/toy_examples/dualMass.py	/^    dt = 0.3$/;"	v
dt	controller/mppi/toy_examples/invertedPendulum.py	/^    dt = 0.01$/;"	v
dt	controller/mppi/toy_examples/invertedPendulum.py	/^    dt = 0.02$/;"	v
dt	copg/car_racing_simulator/pure_pursuit.py	/^dt = 0.03  # [s]$/;"	v
dt	misc/hybridDynamicSimNew.py	/^    dt = 0.01$/;"	v
dt	misc/hybridKinematicSim.py	/^    dt = 0.01$/;"	v
dt	misc/hybridSim.py	/^    dt = 0.01$/;"	v
dt	misc/ukfSysid.py	/^dt = 0.01$/;"	v
dt	misc/validateHybridModel.py	/^dt = 0.01$/;"	v
dt	sysid/fitThrottle.py	/^dt = 0.01$/;"	v
dt	sysid/meet.py	/^dt = 0.01$/;"	v
dtype	misc/hybridDynamicSimNew.py	/^    dtype = torch.double$/;"	v
dtype	misc/hybridKinematicSim.py	/^    dtype = torch.double$/;"	v
dtype	misc/hybridSim.py	/^    dtype = torch.double$/;"	v
dtype	misc/validateHybridModel.py	/^dtype = torch.double$/;"	v
du_max	controller/mppi/toy_examples/dampedBox.py	/^    du_max = 1$/;"	v
dualMass	controller/mppi/toy_examples/dualMass.py	/^class dualMass:$/;"	c
dvv	misc/getThrustCurve.py	/^dvv = (Cm1-Cm2*vv)*0.7 - Cr - Cd*vv*vv$/;"	v
dx	copg/car_racing_simulator/VehicleModel.py	/^    def dx(self, x, u):$/;"	m	class:VehicleModel
dx	sysid/fitThrottle.py	/^dx = np.diff(x)$/;"	v
dxCurve	copg/car_racing_simulator/VehicleModel.py	/^    def dxCurve(self, x, u):$/;"	m	class:VehicleModel
dxCurve_blend	copg/car_racing_simulator/VehicleModel.py	/^    def dxCurve_blend(self, x, u):$/;"	m	class:VehicleModel
dxkin	copg/car_racing_simulator/VehicleModel.py	/^    def dxkin(self, x, u):$/;"	m	class:VehicleModel
dy	sysid/fitThrottle.py	/^dy = np.diff(y)$/;"	v
dynModel	copg/car_racing_simulator/VehicleModel.py	/^    def dynModel(self, x, u):$/;"	m	class:VehicleModel
dynModelBlend	copg/car_racing_simulator/VehicleModel.py	/^    def dynModelBlend(self, x, u):$/;"	m	class:VehicleModel
dynModelBlendBatch	copg/car_racing_simulator/VehicleModel.py	/^    def dynModelBlendBatch(self, x, u_unclipped):$/;"	m	class:VehicleModel
dynModelCurve	copg/car_racing_simulator/VehicleModel.py	/^    def dynModelCurve(self, x, u):$/;"	m	class:VehicleModel
dynamics	controller/mppi/toy_examples/cudaMppiTest.py	/^def dynamics(state,control,dt):$/;"	f
dynamics	controller/mppi/toy_examples/dualMass.py	/^def dynamics(state,control,dt):$/;"	f
dynamics	controller/mppi/toy_examples/invertedPendulum.py	/^def dynamics(state,control,dt):$/;"	f
e	util/timeUtil.py	/^    def e(self, n=None):$/;"	m	class:execution_timer
ed_q_time	copg/car_racing/copg_orca.py	/^    ed_q_time = time.time()$/;"	v
ed_q_time	copg/car_racing/gda_orca.py	/^    ed_q_time = time.time()$/;"	v
ed_q_time	copg/rcvip_racing/copg_orca.py	/^    ed_q_time = time.time()$/;"	v
ed_q_time	copg/rcvip_racing/gda_orca.py	/^    ed_q_time = time.time()$/;"	v
ed_time	copg/car_racing/copg_orca.py	/^    ed_time = time.time()$/;"	v
ed_time	copg/rcvip_racing/copg_orca.py	/^    ed_time = time.time()$/;"	v
element_deducted	copg/car_racing/copg_orca.py	/^                element_deducted = ~(done_c1*done_c2)$/;"	v
element_deducted	copg/car_racing/gda_orca.py	/^                element_deducted = ~(done_c1*done_c2)$/;"	v
element_deducted	copg/car_racing/results.py	/^        element_deducted = ~(done_c1 * done_c2)$/;"	v
element_deducted	copg/rcvip_racing/copg_orca.py	/^                element_deducted = ~(done_c1*done_c2)$/;"	v
element_deducted	copg/rcvip_racing/gda_orca.py	/^                element_deducted = ~(done_c1*done_c2)$/;"	v
element_deducted	copg/rcvip_racing/results.py	/^        element_deducted = ~(done_c1 * done_c2)$/;"	v
element_deducted	results.py	/^        element_deducted = ~(done_c1 * done_c2)$/;"	v
emptyCallback	extension/Optitrack.py	/^    def emptyCallback(self,*args):$/;"	m	class:_Optitrack
emptyPayload	car/Offboard.py	/^    def emptyPayload(self):$/;"	m	class:OffboardPacket
enable_cvar	configGenerator.py	/^enable_cvar = True$/;"	v
enable_cvar	configs/noise.py	/^enable_cvar = True$/;"	v
end	misc/ukfSysid.py	/^end = -500$/;"	v
end	util/timeUtil.py	/^    def end(self, name = None):$/;"	m	class:execution_timer
entry	misc/plotCov.py	/^        entry = line.split(',')$/;"	v
entry	misc/plotFrontier.py	/^            entry = entry[:9] + entry[10:]$/;"	v
entry	misc/plotFrontier.py	/^        entry = line.split(',')$/;"	v
entry	misc/read_mppi_ccmppi_log.py	/^        entry = line.split(',')$/;"	v
epoch_loss	misc/hybridDynamicSimNew.py	/^        epoch_loss = epoch_loss + loss$/;"	v
epoch_loss	misc/hybridDynamicSimNew.py	/^    epoch_loss = 0$/;"	v
epoch_loss	misc/hybridKinematicSim.py	/^        epoch_loss = epoch_loss + loss$/;"	v
epoch_loss	misc/hybridKinematicSim.py	/^    epoch_loss = 0$/;"	v
epoch_loss	misc/hybridSim.py	/^    epoch_loss = 0$/;"	v
epsilon	controller/mppi/toy_examples/cudaMppiTest.py	/^epsilon = np.zeros([sample_count,horizon_steps,control_dim]).astype(np.float32)$/;"	v
err	sysid/steeringSysid.py	/^err = np.linalg.norm(measured_steering_smooth - estimated_steering)$/;"	v
err	sysid/validateModel.py	/^def err():$/;"	f
estimated_steering	sysid/steeringSysid.py	/^estimated_steering = np.zeros_like(t)$/;"	v
ethCarSim	misc/ethCarSim.py	/^class ethCarSim:$/;"	c
euler2R	misc/tf.py	/^    def euler2R(self, roll,pitch,yaw):$/;"	m	class:TF
euler2Rxyz	misc/tf.py	/^    def euler2Rxyz(self, roll,pitch,yaw):$/;"	m	class:TF
euler2q	misc/tf.py	/^    def euler2q(self,roll,pitch,yaw):$/;"	m	class:TF
evalBezierSpline	planner/Planner.py	/^    def evalBezierSpline(self,P,u,der=0):$/;"	m	class:Planner
evalBezierSpline	qpSmooth.py	/^    def evalBezierSpline(self,P,u):$/;"	m	class:QpSmooth
evalControl	controller/ccmppi/ccmppi.py	/^    def evalControl(self,state,candidate_control):$/;"	m	class:CCMPPI
evaluateStepCost	controller/ccmppi/ccmppi.py	/^    def evaluateStepCost(self, state, control, in_raceline):$/;"	m	class:CCMPPI
evaluateStepCost	misc/ctrlMppiWrapper.py	/^    def evaluateStepCost(self,state,control):$/;"	m	class:ctrlMppiWrapper
evaluateTerminalCost	misc/ctrlMppiWrapper.py	/^    def evaluateTerminalCost(self,state,x0):$/;"	m	class:ctrlMppiWrapper
evaluate_boundary_cost	controller/ccmppi/ccmppi.cu	/^float evaluate_boundary_cost( float* state, float* x0, float in_raceline[][RACELINE_DIM], int* u/;"	f	typeref:typename:float
evaluate_boundary_cost	controller/cvar/cvar_racecar.cu	/^float evaluate_boundary_cost( float* state,  int* u_estimate){$/;"	f	typeref:typename:float
evaluate_boundary_cost	controller/mppi/mppi_racecar.cu	/^float evaluate_boundary_cost( float* state,  int* u_estimate){$/;"	f	typeref:typename:float
evaluate_collision_cost	controller/ccmppi/ccmppi.cu	/^float evaluate_collision_cost( float* state, float* opponent_pos){$/;"	f	typeref:typename:float
evaluate_collision_cost	controller/mppi/mppi_racecar.cu	/^float evaluate_collision_cost( float* state, float* opponent_traj, int opponent_id){$/;"	f	typeref:typename:float
evaluate_control_cost	controller/cvar/cvar_racecar.cu	/^float evaluate_control_cost( float* ref_dudt, int id){$/;"	f	typeref:typename:float
evaluate_control_sequence	controller/ccmppi/ccmppi.cu	/^void evaluate_control_sequence($/;"	f	typeref:typename:void
evaluate_control_sequence	controller/cvar/cvar_racecar.cu	/^__device__ void evaluate_control_sequence(float* in_x0, float* in_u0, float* ref_dudt, float* ou/;"	f	typeref:typename:void
evaluate_control_sequence	controller/mppi/mppi_racecar.cu	/^__global__ void evaluate_control_sequence(float* in_x0, float* in_u0, float* ref_dudt, float* ou/;"	f	typeref:typename:void
evaluate_control_sequence	controller/mppi/toy_examples/cudaMppiTest.py	/^evaluate_control_sequence = mod.get_function("evaluate_control_sequence")$/;"	v
evaluate_cvar_boundary_collision	controller/cvar/cvar_racecar.cu	/^float evaluate_cvar_boundary_collision( float* state,  int* u_estimate){$/;"	f	typeref:typename:float
evaluate_noisy_control_sequence	controller/cvar/cvar_racecar.cu	/^__global__ void evaluate_noisy_control_sequence(float* in_x0, float* in_u0, float* ref_dudt, flo/;"	f	typeref:typename:void
evaluate_obstacle_cost	controller/cvar/cvar_racecar.cu	/^float evaluate_obstacle_cost( float* state){$/;"	f	typeref:typename:float
evaluate_opponent_cost	controller/cvar/cvar_racecar.cu	/^float evaluate_opponent_cost( float* state, float* opponent_traj, int opponent_id){$/;"	f	typeref:typename:float
evaluate_step_cost	controller/ccmppi/ccmppi.cu	/^float evaluate_step_cost( float* state, float* u, float in_raceline[][RACELINE_DIM], int idx0, i/;"	f	typeref:typename:float
evaluate_step_cost	controller/cvar/cvar_racecar.cu	/^float evaluate_step_cost( float* state, float* last_u, float* u,int* last_index){$/;"	f	typeref:typename:float
evaluate_step_cost	controller/mppi/mppi_racecar.cu	/^float evaluate_step_cost( float* state, float* last_u, float* u,int* last_index){$/;"	f	typeref:typename:float
evaluate_terminal_cost	controller/ccmppi/ccmppi.cu	/^float evaluate_terminal_cost( float* state,float* x0, float in_raceline[][RACELINE_DIM]){$/;"	f	typeref:typename:float
evaluate_terminal_cost	controller/cvar/cvar_racecar.cu	/^float evaluate_terminal_cost( float* current_state,float* initial_state, int* last_index ){$/;"	f	typeref:typename:float
evaluate_terminal_cost	controller/mppi/mppi_racecar.cu	/^float evaluate_terminal_cost( float* current_state,float* initial_state, int* last_index ){$/;"	f	typeref:typename:float
execution_timer	util/timeUtil.py	/^class execution_timer:$/;"	c
exp_kf_omega	misc/validateHybridModel.py	/^exp_kf_omega = data[skip:,10]$/;"	v
exp_kf_omega	sysid/fitThrottle.py	/^exp_kf_omega = data[:,10]$/;"	v
exp_kf_theta	misc/validateHybridModel.py	/^exp_kf_theta = data[skip:,9]$/;"	v
exp_kf_theta	sysid/fitThrottle.py	/^exp_kf_theta = data[:,9]$/;"	v
exp_kf_v	misc/validateHybridModel.py	/^exp_kf_v = data[skip:,8]$/;"	v
exp_kf_v	sysid/fitThrottle.py	/^exp_kf_v = data[:,8]$/;"	v
exp_kf_vx	misc/validateHybridModel.py	/^exp_kf_vx = exp_kf_v *np.cos(exp_kf_v)$/;"	v
exp_kf_vy	misc/validateHybridModel.py	/^exp_kf_vy = exp_kf_v *np.sin(exp_kf_v)$/;"	v
exp_kf_x	misc/validateHybridModel.py	/^exp_kf_x = data[skip:,6]$/;"	v
exp_kf_x	sysid/fitThrottle.py	/^exp_kf_x = data[:,6]$/;"	v
exp_kf_y	misc/validateHybridModel.py	/^exp_kf_y = data[skip:,7]$/;"	v
exp_kf_y	sysid/fitThrottle.py	/^exp_kf_y = data[:,7]$/;"	v
experiment	batchRun.py	/^        experiment = Main(config_filename)$/;"	v
experiment	misc/QfDemo.py	/^        experiment = Main(params)$/;"	v
experiment	misc/benchmark.py	/^                    experiment = Main(params)$/;"	v
experiment	misc/oneObstacle.py	/^        experiment = Main(params)$/;"	v
experiment	run.py	/^    experiment = Main(config_filename)$/;"	v
experiment_count	misc/QfDemo.py	/^    experiment_count = 0$/;"	v
experiment_count	misc/benchmark.py	/^    experiment_count = 0$/;"	v
experiment_count	misc/oneObstacle.py	/^    experiment_count = 0$/;"	v
experiment_name	copg/car_racing/copg_orca.py	/^experiment_name = 'copg\/'$/;"	v
experiment_name	copg/car_racing/gda_orca.py	/^experiment_name = 'gda\/'$/;"	v
experiment_name	copg/rcvip_racing/copg_orca.py	/^experiment_name = 'copg\/'$/;"	v
experiment_name	copg/rcvip_racing/gda_orca.py	/^experiment_name = 'gda\/'$/;"	v
f	controller/mppi/toy_examples/cudaMppiTest.py	/^f = open(".\/mppi.cu","r")$/;"	v
fig	misc/plotAllTrajectory.py	/^    fig = plt.figure()$/;"	v
fig	misc/plotAllTrajectory.py	/^fig = plt.figure()$/;"	v
fig	misc/plotFrontier.py	/^    fig = plt.figure()$/;"	v
fig	sysid/fitThrottle.py	/^fig = plt.figure()$/;"	v
fig	sysid/tire.py	/^    fig = plt.figure()$/;"	v
fig	util/plotTrajectory.py	/^fig = plt.figure()$/;"	v
filename	misc/plotAllTrajectory.py	/^    filename = "..\/log\/kinematics_results\/full_state"+str(index)+".p"$/;"	v
filename	misc/plotCov.py	/^filename = "log.txt"$/;"	v
filename	misc/plotCov.py	/^filename = "sat_fine_grid.txt"$/;"	v
filename	misc/plotFrontier.py	/^    filename = "..\/log\/kinematics_results\/full_state"+str(ccmppi_logno)+".p"$/;"	v
filename	misc/plotFrontier.py	/^    filename = "..\/log\/kinematics_results\/full_state"+str(mppi_logno)+".p"$/;"	v
filename	misc/plotFrontier.py	/^filename = "more_combined.txt"$/;"	v
filename	misc/plotSingleTrajectory.py	/^filename = "..\/log\/kinematics_results\/full_state11.p"$/;"	v
filename	misc/read_mppi_ccmppi_log.py	/^filename = "log.txt"$/;"	v
filename	misc/ukfSysid.py	/^    filename = "..\/log\/jan3\/full_state1.p"$/;"	v
filename	misc/validateHybridModel.py	/^    filename = "..\/log\/nov10\/full_state1.p"$/;"	v
filename	sysid/fitThrottle.py	/^    filename = '..\/..\/log\/2022_3_14_exp\/full_state2.p'$/;"	v
filename	sysid/meet.py	/^filename = '..\/..\/log\/2022_3_1_sim\/full_state1.p'$/;"	v
filename	sysid/meet.py	/^filename = '..\/..\/log\/2022_3_1_sim\/full_state2.p'$/;"	v
filename	sysid/motorModel.py	/^    filename = '..\/..\/log\/2022_3_2_exp\/full_state2.p'$/;"	v
filename	sysid/readlog.py	/^    filename = '..\/..\/log\/2022_3_14_exp\/full_state2.p'$/;"	v
filename	sysid/steeringSysid.py	/^filename = '..\/..\/log\/2022_2_9_exp\/debug_dict4.p'$/;"	v
filename	sysid/steeringSysid.py	/^filename = '..\/..\/log\/2022_2_9_exp\/full_state4.p'$/;"	v
filename	util/plotTrajectory.py	/^filename = '..\/log\/2022_8_30_sim\/full_state1.p'$/;"	v
filename	util/plotTrajectory.py	/^filename = '..\/log\/2022_8_30_sim\/full_state2.p'$/;"	v
final	extension/BoundaryChecker.py	/^    def final(self):$/;"	m	class:BoundaryChecker
final	extension/CollisionChecker.py	/^    def final(self):$/;"	m	class:CollisionChecker
final	extension/CrosstrackErrorTracker.py	/^    def final(self):$/;"	m	class:CrosstrackErrorTracker
final	extension/Extension.py	/^    def final(self):$/;"	m	class:Extension
final	extension/Gifsaver.py	/^    def final(self):$/;"	m	class:Gifsaver
final	extension/Laptimer.py	/^    def final(self):$/;"	m	class:Laptimer
final	extension/Optitrack.py	/^    def final(self):$/;"	m	class:Optitrack
final	extension/PerformanceTracker.py	/^    def final(self):$/;"	m	class:PerformanceTracker
final	extension/SteeringTuner.py	/^    def final(self):$/;"	m	class:SteeringTuner
final	extension/TrajectoryPlotter.py	/^    def final(self):$/;"	m	class:TrajectoryPlotter
final	extension/Visualization.py	/^    def final(self):$/;"	m	class:Visualization
findClosestId	controller/ccmppi/ccmppi.py	/^    def findClosestId(self, state, in_raceline):$/;"	m	class:CCMPPI
findClosestIds	misc/ctrlMppiWrapper.py	/^    def findClosestIds(self,state):$/;"	m	class:ctrlMppiWrapper
find_closest_id	controller/ccmppi/ccmppi.cu	/^void find_closest_id(float* state, float in_raceline[][RACELINE_DIM], int guess, int range, int*/;"	f	typeref:typename:void
find_closest_id	controller/cvar/cvar_racecar.cu	/^void find_closest_id(float* state, int guess, int* ret_idx, float* ret_dist){$/;"	f	typeref:typename:void
find_closest_id	controller/mppi/mppi_racecar.cu	/^void find_closest_id(float* state, int guess, int* ret_idx, float* ret_dist){$/;"	f	typeref:typename:void
first_order	sysid/steeringSysid.py	/^def first_order(K, src, dst):$/;"	f
folder_location	copg/car_racing/copg_orca.py	/^folder_location = 'model\/'$/;"	v
folder_location	copg/car_racing/gda_orca.py	/^folder_location = 'tensorboard\/orca\/'$/;"	v
folder_location	copg/rcvip_racing/copg_orca.py	/^folder_location = 'model\/'$/;"	v
folder_location	copg/rcvip_racing/gda_orca.py	/^folder_location = 'tensorboard\/orca\/'$/;"	v
forceModel	copg/car_racing_simulator/VehicleModel.py	/^    def forceModel(self, x, u):$/;"	m	class:VehicleModel
form_long_matrices_LTI	misc/cs_test.py	/^    def form_long_matrices_LTI(self, A, B, D):$/;"	m	class:Model
form_long_matrices_LTV	misc/cs_test.py	/^    def form_long_matrices_LTV(self, A, B, d, D):$/;"	m	class:Model
form_long_matrices_LTV	misc/linearizeDynamics.py	/^    def form_long_matrices_LTV(self, A, B, d, D):$/;"	m	class:LinearizeDynamics
forward	copg/car_racing/network.py	/^    def forward(self, state):$/;"	m	class:Actor
forward	copg/car_racing/network.py	/^    def forward(self, state):$/;"	m	class:ActorCritic
forward	copg/car_racing/network.py	/^    def forward(self, state):$/;"	m	class:ActorCriticVar
forward	copg/car_racing/network.py	/^    def forward(self, state):$/;"	m	class:ActorVar
forward	copg/car_racing/network.py	/^    def forward(self, state):$/;"	m	class:Actor_tan
forward	copg/car_racing/network.py	/^    def forward(self, state):$/;"	m	class:Critic
forward	copg/car_racing/network.py	/^    def forward(self, state):$/;"	m	class:Critic_tan
forward	copg/rcvip_racing/network.py	/^    def forward(self, state):$/;"	m	class:Actor
forward	copg/rcvip_racing/network.py	/^    def forward(self, state):$/;"	m	class:ActorCritic
forward	copg/rcvip_racing/network.py	/^    def forward(self, state):$/;"	m	class:ActorCriticVar
forward	copg/rcvip_racing/network.py	/^    def forward(self, state):$/;"	m	class:ActorVar
forward	copg/rcvip_racing/network.py	/^    def forward(self, state):$/;"	m	class:Actor_tan
forward	copg/rcvip_racing/network.py	/^    def forward(self, state):$/;"	m	class:Critic
forward	copg/rcvip_racing/network.py	/^    def forward(self, state):$/;"	m	class:Critic_tan
forward	misc/hybridDynamicSimNew.py	/^    def forward(self,full_states,actions, enable_rnn):$/;"	m	class:hybridDynamicSimNew
forward	misc/hybridKinematicSim.py	/^    def forward(self,full_states,actions, enable_rnn):$/;"	m	class:hybridKinematicSim
forward	misc/hybridSim.py	/^    def forward(self,full_states,actions, enable_rnn):$/;"	m	class:hybridSim
forward	misc/throttle_model.py	/^    def forward(self, inputs):$/;"	m	class:Net
forward_dynamics	controller/ccmppi/ccmppi.cu	/^void forward_dynamics(float* state, float* u){$/;"	f	typeref:typename:void
forward_dynamics	controller/cvar/cvar_racecar.cu	/^void forward_dynamics( float* state, float* u){$/;"	f	typeref:typename:void
forward_dynamics	controller/mppi/mppi_racecar.cu	/^void forward_dynamics( float* state, float* u){$/;"	f	typeref:typename:void
forward_kinematics	controller/ccmppi/ccmppi.cu	/^void forward_kinematics(float* state, float* u){$/;"	f	typeref:typename:void
forward_steps	misc/hybridDynamicSimNew.py	/^    forward_steps = 5$/;"	v
forward_steps	misc/hybridKinematicSim.py	/^    forward_steps = 5$/;"	v
forward_steps	misc/hybridSim.py	/^    forward_steps = 5$/;"	v
forward_steps	misc/validateHybridModel.py	/^forward_steps = 3$/;"	v
fromLocalToGlobal	copg/car_racing_simulator/VehicleModel.py	/^    def fromLocalToGlobal(self,state_local,phi_ref):$/;"	m	class:VehicleModel
fromLocaltoGlobal	copg/car_racing_simulator/Track.py	/^    def fromLocaltoGlobal(self, x_local):$/;"	m	class:Track
fromStoIndex	copg/car_racing_simulator/Track.py	/^    def fromStoIndex(self, s):$/;"	m	class:Track
fromStoIndex	copg/car_racing_simulator/VehicleModel.py	/^    def fromStoIndex(self, s):$/;"	m	class:VehicleModel
fromStoIndexBatch	copg/car_racing_simulator/VehicleModel.py	/^    def fromStoIndexBatch(self,s_in):$/;"	m	class:VehicleModel
fromStoPos	copg/car_racing_simulator/Track.py	/^    def fromStoPos(self, s):$/;"	m	class:Track
from_device	controller/cvar/CvarCarController.py	/^    def from_device(self,data,shape,dtype=np.float32):$/;"	m	class:CvarCarController
from_device	controller/mppi/MppiCarController.py	/^    def from_device(self,data,shape,dtype=np.float32):$/;"	m	class:MppiCarController
full_state_vec	misc/ukfSysid.py	/^full_state_vec = []$/;"	v
full_state_vec	misc/validateHybridModel.py	/^full_state_vec = []$/;"	v
full_states	misc/hybridDynamicSimNew.py	/^        full_states = batch[:,:history_steps,:]$/;"	v
full_states	misc/hybridDynamicSimNew.py	/^        full_states = full_states.to(device)$/;"	v
full_states	misc/hybridKinematicSim.py	/^        full_states = batch[:,:history_steps,:]$/;"	v
full_states	misc/hybridKinematicSim.py	/^        full_states = full_states.to(device)$/;"	v
full_states	misc/hybridSim.py	/^        full_states = batch[:,:history_steps,:]$/;"	v
full_states	misc/hybridSim.py	/^        full_states = full_states.to(device)$/;"	v
full_states_mean	misc/hybridDynamicSimNew.py	/^    full_states_mean = torch.tensor(dataset.full_states_mean, dtype=dtype, device=device, requir/;"	v
full_states_mean	misc/hybridKinematicSim.py	/^    full_states_mean = torch.tensor(dataset.full_states_mean, dtype=dtype, device=device, requir/;"	v
full_states_mean	misc/hybridSim.py	/^    full_states_mean = torch.tensor(dataset.full_states_mean, dtype=dtype, device=device, requir/;"	v
full_states_std	misc/hybridDynamicSimNew.py	/^    full_states_std = torch.tensor(dataset.full_states_std, dtype=dtype, device=device, requires/;"	v
full_states_std	misc/hybridKinematicSim.py	/^    full_states_std = torch.tensor(dataset.full_states_std, dtype=dtype, device=device, requires/;"	v
full_states_std	misc/hybridSim.py	/^    full_states_std = torch.tensor(dataset.full_states_std, dtype=dtype, device=device, requires/;"	v
fulltrack	qpSmooth.py	/^    fulltrack = RCPTrack()$/;"	v
fulltrack	track/RCPTrack.py	/^    fulltrack = RCPTrack()$/;"	v
fun	misc/laptime.py	/^    fun = lambda x: x$/;"	f
fun	planner/Planner.py	/^        def fun(u):$/;"	f	member:Planner.localTrajectory	file:
fun	qpSmooth.py	/^        fun = lambda x:self.raceline_fun(x).flatten()$/;"	f	member:QpSmooth.curvatureJac	file:
fun	sysid/motorModel.py	/^def fun(x,*args):$/;"	f
fun	track/RCPTrack.py	/^        fun = lambda u: dist_2(splev(u%self.track_length_grid,self.raceline),coord)$/;"	f	member:RCPTrack.localTrajectory	file:
fun	track/RCPTrack.py	/^        fun = lambda x : a*x*x*x + b*x*x + c*x + d$/;"	f	member:RCPTrack.localTrajectory	file:
genPath	planner/Planner.py	/^    def genPath(self):$/;"	m	class:Planner
genSamplePath	planner/Planner.py	/^    def genSamplePath(self):$/;"	m	class:Planner
general_conjugate_gradient	copg/copg_optim/utils.py	/^def general_conjugate_gradient(grad_x, grad_y,tot_grad_x, tot_grad_y, x_params, y_params, b, lr_/;"	f
generateSigmaPoints	misc/ukf.py	/^    def generateSigmaPoints(self,x,P):$/;"	m	class:UKF
generateSpeedProfile	track/RCPTrack.py	/^    def generateSpeedProfile(self, n_steps=1000):$/;"	m	class:RCPTrack
generateTestRefTraj	misc/linearizeDynamics.py	/^    def generateTestRefTraj(self):$/;"	m	class:LinearizeDynamics
generate_control_noise	controller/cvar/cvar_racecar.cu	/^__global__ void generate_control_noise(){$/;"	f	typeref:typename:void
generate_control_noise	controller/mppi/mppi_racecar.cu	/^__global__ void generate_control_noise(){$/;"	f	typeref:typename:void
generate_random_normal	controller/ccmppi/ccmppi.cu	/^__global__ void generate_random_normal(float *values,float* scales){$/;"	f	typeref:typename:void
generate_state_noise_impulse	controller/cvar/cvar_racecar.cu	/^__global__ void generate_state_noise_impulse(){$/;"	f	typeref:typename:void
generate_state_noise_normal	controller/cvar/cvar_racecar.cu	/^__global__ void generate_state_noise_normal(){$/;"	f	typeref:typename:void
generate_state_noise_uniform	controller/cvar/cvar_racecar.cu	/^__global__ void generate_state_noise_uniform(){$/;"	f	typeref:typename:void
getA	misc/ctrlMpcWrapper.py	/^        getA = lambda Vx,dpsi_r: In + getA_raw(Vx,dpsi_r) * dt$/;"	f	member:ctrlMpcWrapper.ctrlCar	file:
getA_raw	misc/ctrlMpcWrapper.py	/^        getA_raw = lambda Vx,dpsi_r: \\$/;"	f	member:ctrlMpcWrapper.ctrlCar	file:
getAccCarFrame	sysid/fitThrottle.py	/^def getAccCarFrame(x,y,dt):$/;"	f
getColor	qpSmooth.py	/^        getColor = lambda v:(0,v2c(v),255-v2c(v))$/;"	f	member:QpSmooth.drawRaceline	file:
getColor	track/EmptyTrack.py	/^        getColor = lambda v:(0,v2c(v),255-v2c(v))$/;"	f	member:EmptyTrack.drawPolyline	file:
getColor	track/RCPTrack.py	/^        getColor = lambda v:(0,v2c(v),255-v2c(v))$/;"	f	member:RCPTrack.drawPolyline	file:
getColor	track/RCPTrack.py	/^        getColor = lambda v:(0,v2c(v),255-v2c(v))$/;"	f	member:RCPTrack.drawRaceline	file:
getCost	controller/mppi/toy_examples/mppiJisModel.py	/^    def getCost(self,state,u):$/;"	m	class:Model
getCov	misc/plotCov.py	/^def getCov(log_no):$/;"	f
getCurvature	copg/car_racing_simulator/VehicleModel.py	/^    def getCurvature(self, s):$/;"	m	class:VehicleModel
getDebug	controller/PidController.py	/^    def getDebug(self):$/;"	m	class:PidController
getDiff1Matrix	planner/Planner.py	/^    def getDiff1Matrix(self,N,ds):$/;"	m	class:Planner
getDiff2Matrix	planner/Planner.py	/^    def getDiff2Matrix(self,N,ds):$/;"	m	class:Planner
getDistanceTravelled	sysid/validateModel.py	/^def getDistanceTravelled(log, i, lookahead):$/;"	f
getDynamicTrajectory	controller/CarController.py	/^    def getDynamicTrajectory(self, x0, control):$/;"	m	class:CarController
getEstimatedTerminalCov	controller/ccmppi/CcmppiCarController.py	/^    def getEstimatedTerminalCov(self):$/;"	m	class:CcmppiCarController
getEstimatedTerminalCov	controller/ccmppi/oldCcmppi.py	/^    def getEstimatedTerminalCov(self):$/;"	m	class:CcmppiCarController
getFunctionSafe	controller/cvar/CvarCarController.py	/^    def getFunctionSafe(self,name):$/;"	m	class:CvarCarController
getFunctionSafe	controller/mppi/MppiCarController.py	/^    def getFunctionSafe(self,name):$/;"	m	class:MppiCarController
getGhForN	planner/Planner.py	/^    def getGhForN(self,step,val,is_max_constrain):$/;"	m	class:Planner
getIndex	planner/Planner.py	/^    def getIndex(self,s):$/;"	m	class:Planner
getInternalId	extension/Optitrack.py	/^    def getInternalId(self,optitrack_id):$/;"	m	class:_Optitrack
getItemID	misc/vicon.py	/^    def getItemID(self,obj_name):$/;"	m	class:Vicon
getItemName	misc/vicon.py	/^    def getItemName(self,obj_id):$/;"	m	class:Vicon
getKFstate	extension/Optitrack.py	/^    def getKFstate(self,internal_id):$/;"	m	class:_Optitrack
getKFstate	misc/vicon.py	/^    def getKFstate(self,inquiry_id):$/;"	m	class:Vicon
getKinematicTrajectory	controller/CarController.py	/^    def getKinematicTrajectory(self, x0, control):$/;"	m	class:CarController
getLaptime	misc/laptime.py	/^def getLaptime(ctrl_offset,track_obj,start_grid,start_dir,start_seqno):$/;"	f
getLocalBounds	copg/car_racing_simulator/VehicleModel.py	/^    def getLocalBounds(self,s):$/;"	m	class:VehicleModel
getLongitudinalAcc	misc/hybridDynamicSimNew.py	/^    def getLongitudinalAcc(self,vx,throttle):$/;"	m	class:hybridDynamicSimNew
getLongitudinalAcc	misc/hybridKinematicSim.py	/^    def getLongitudinalAcc(self,throttle):$/;"	m	class:hybridKinematicSim
getLongitudinalAcc	misc/hybridSim.py	/^    def getLongitudinalAcc(self,throttle):$/;"	m	class:hybridSim
getLongitudinalAcc	sysid/fitThrottle.py	/^def getLongitudinalAcc(state,throttle,steering):$/;"	f
getNFcollosionreward	copg/car_racing/orca_env_function.py	/^def getNFcollosionreward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_state_c2):$/;"	f
getNFcollosionreward	copg/rcvip_racing/orca_env_function.py	/^def getNFcollosionreward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_state_c2):$/;"	f
getNoisyAction	misc/oldkinematicSimulator.py	/^    def getNoisyAction(self,action=None):$/;"	m	class:kinematicSimulator
getNoisyObservation	misc/oldkinematicSimulator.py	/^    def getNoisyObservation(self):$/;"	m	class:kinematicSimulator
getOpponentState	planner/Planner.py	/^    def getOpponentState(self):$/;"	m	class:Planner
getOpponentStatus	controller/cvar/CvarCarController.py	/^    def getOpponentStatus(self):$/;"	m	class:CvarCarController
getOpponentStatus	controller/mppi/MppiCarController.py	/^    def getOpponentStatus(self):$/;"	m	class:MppiCarController
getOptitrackId	extension/Optitrack.py	/^    def getOptitrackId(self,internal_id):$/;"	m	class:_Optitrack
getOrcaStyleTrack	track/RCPTrack.py	/^    def getOrcaStyleTrack(self):$/;"	m	class:RCPTrack
getParam	car/Offboard.py	/^    def getParam(self):$/;"	m	class:Offboard
getRefPoint	track/RCPTrack.py	/^    def getRefPoint(self, state, p, dt, reverse=False):$/;"	m	class:RCPTrack
getRefTraj	controller/ccmppi/ccmppi_dynamic.py	/^    def getRefTraj(self, logname, lap_no = 2, show=False):$/;"	m	class:CCMPPI_DYNAMIC
getRefTraj	controller/ccmppi/ccmppi_kinematic.py	/^    def getRefTraj(self, logname, lap_no = 2, show=False):$/;"	m	class:CCMPPI_KINEMATIC
getRefTraj	misc/linearizeDynamics.py	/^    def getRefTraj(self, logname, lap_no = 2, show=False):$/;"	m	class:LinearizeDynamics
getRefXYVheading	track/RCPTrack.py	/^    def getRefXYVheading(self, state, p, dt, reverse=False):$/;"	m	class:RCPTrack
getState	extension/Optitrack.py	/^    def getState(self, internal_id):$/;"	m	class:_Optitrack
getState	misc/vicon.py	/^    def getState(self,inquiry_id):$/;"	m	class:Vicon
getState	util/kalmanFilter.py	/^    def getState(self):$/;"	m	class:KalmanFilter
getState2d	extension/Optitrack.py	/^    def getState2d(self,internal_id):$/;"	m	class:_Optitrack
getState2d	misc/vicon.py	/^    def getState2d(self,inquiry_id):$/;"	m	class:Vicon
getTrackHeading	copg/car_racing_simulator/VehicleModel.py	/^    def getTrackHeading(self,s):$/;"	m	class:VehicleModel
getViconUpdate	misc/vicon.py	/^    def getViconUpdate(self,debugData=None):$/;"	m	class:Vicon
get_R	misc/hybridDynamicSimNew.py	/^    def get_R(self,psi):$/;"	m	class:hybridDynamicSimNew
get_R	misc/hybridKinematicSim.py	/^    def get_R(self,psi):$/;"	m	class:hybridKinematicSim
get_R	misc/hybridSim.py	/^    def get_R(self,psi):$/;"	m	class:hybridSim
get_advantage	copg/copg_optim/critic_functions.py	/^def get_advantage(next_value, reward_mat, value_mat, masks, gamma=0.99, tau=0.95):$/;"	f
get_curvature	misc/cs_test.py	/^    def get_curvature(self, s):$/;"	m	class:Model
get_heuristic_acc	misc/hybridKinematicSim.py	/^    def get_heuristic_acc(self,vx,vy,omega,ut,us):$/;"	m	class:hybridKinematicSim
get_minibatch	copg/car_racing/orca_env_function.py	/^def get_minibatch(state_mat, action_mat, log_probs, returns, advantage_mat, size_mini_batch):$/;"	f
get_minibatch	copg/rcvip_racing/orca_env_function.py	/^def get_minibatch(state_mat, action_mat, log_probs, returns, advantage_mat, size_mini_batch):$/;"	f
get_param	misc/hybridDynamicSimNew.py	/^    def get_param(self,init_val,requires_grad=True):$/;"	m	class:hybridDynamicSimNew
get_param	misc/hybridKinematicSim.py	/^    def get_param(self,init_val,requires_grad=True):$/;"	m	class:hybridKinematicSim
get_param	misc/hybridSim.py	/^    def get_param(self,init_val,requires_grad=True):$/;"	m	class:hybridSim
get_residual_acc	misc/hybridDynamicSimNew.py	/^    def get_residual_acc(self,dynamic_states):$/;"	m	class:hybridDynamicSimNew
get_residual_acc	misc/hybridKinematicSim.py	/^    def get_residual_acc(self,dynamic_states):$/;"	m	class:hybridKinematicSim
get_residual_force	misc/hybridSim.py	/^    def get_residual_force(self,states):$/;"	m	class:hybridSim
get_reward_single	copg/car_racing/orca_env_function.py	/^def get_reward_single(state_c1,  b_c1, kappa, prev_state_c1):$/;"	f
get_reward_single	copg/rcvip_racing/orca_env_function.py	/^def get_reward_single(state_c1,  b_c1, kappa, prev_state_c1):$/;"	f
get_tensor	misc/hybridDynamicSimNew.py	/^    def get_tensor(self, init_val, requires_grad):$/;"	m	class:hybridDynamicSimNew
get_tensor	misc/hybridKinematicSim.py	/^    def get_tensor(self, init_val, requires_grad):$/;"	m	class:hybridKinematicSim
get_tensor	misc/hybridSim.py	/^    def get_tensor(self, init_val, requires_grad):$/;"	m	class:hybridSim
getcollosionreward	copg/car_racing/orca_env_function.py	/^def getcollosionreward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_state_c2):$/;"	f
getcollosionreward	copg/rcvip_racing/orca_env_function.py	/^def getcollosionreward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_state_c2):$/;"	f
getcost	controller/mppi/toy_examples/cudaMppiTest.py	/^def getcost(state):$/;"	f
getdone	copg/car_racing/orca_env_function.py	/^def getdone(state_c1,state_c2):$/;"	f
getdone	copg/rcvip_racing/orca_env_function.py	/^def getdone(state_c1,state_c2):$/;"	f
getfreezeProgressReachedreward	copg/car_racing/orca_env_function.py	/^def getfreezeProgressReachedreward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_state_c2/;"	f
getfreezeProgressReachedreward	copg/rcvip_racing/orca_env_function.py	/^def getfreezeProgressReachedreward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_state_c2/;"	f
getfreezeTimecollosionReachedreward	copg/car_racing/orca_env_function.py	/^def getfreezeTimecollosionReachedreward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_sta/;"	f
getfreezeTimecollosionReachedreward	copg/rcvip_racing/orca_env_function.py	/^def getfreezeTimecollosionReachedreward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_sta/;"	f
getfreezecollosionReachedreward	copg/car_racing/orca_env_function.py	/^def getfreezecollosionReachedreward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_state_c/;"	f
getfreezecollosionReachedreward	copg/rcvip_racing/orca_env_function.py	/^def getfreezecollosionReachedreward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_state_c/;"	f
getfreezecollosionreward	copg/car_racing/orca_env_function.py	/^def getfreezecollosionreward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_state_c2, prev/;"	f
getfreezecollosionreward	copg/rcvip_racing/orca_env_function.py	/^def getfreezecollosionreward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_state_c2, prev/;"	f
getfreezeprogressreward	copg/car_racing/orca_env_function.py	/^def getfreezeprogressreward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_state_c2):$/;"	f
getfreezeprogressreward	copg/rcvip_racing/orca_env_function.py	/^def getfreezeprogressreward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_state_c2):$/;"	f
getfreezereward	copg/car_racing/orca_env_function.py	/^def getfreezereward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_state_c2):$/;"	f
getfreezereward	copg/rcvip_racing/orca_env_function.py	/^def getfreezereward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_state_c2):$/;"	f
getinfo	copg/copg_optim/copg.py	/^    def getinfo(self):$/;"	m	class:CoPG
getinfo	copg/copg_optim/copg.py	/^    def getinfo(self):$/;"	m	class:RCoPG
getreward	copg/car_racing/orca_env_function.py	/^def getreward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_state_c2):$/;"	f
getreward	copg/rcvip_racing/orca_env_function.py	/^def getreward(state_c1,state_c2, lb_c1, lb_c2, prev_state_c1, prev_state_c2):$/;"	f
gif_filename	misc/Qfstudy/QfGif.py	/^gif_filename = "qf.gif"$/;"	v
gif_filename	sysid/validateModel.py	/^        gif_filename = "validate_model.gif"$/;"	v
gifimages	misc/laptime.py	/^gifimages = []$/;"	v
global_c	copg/car_racing_simulator/cpg_main.py	/^    global_c = np.array(global_center)$/;"	v
global_center	copg/car_racing_simulator/cpg_main.py	/^    global_center = []$/;"	v
global_coordinates	copg/car_racing_simulator/cpg_main.py	/^    global_coordinates = []$/;"	v
global_coordinates1	copg/car_racing/results.py	/^global_coordinates1 = []$/;"	v
global_coordinates1	copg/rcvip_racing/results.py	/^global_coordinates1 = []$/;"	v
global_coordinates1	results.py	/^global_coordinates1 = []$/;"	v
global_coordinates2	copg/car_racing/results.py	/^global_coordinates2 = []$/;"	v
global_coordinates2	copg/rcvip_racing/results.py	/^global_coordinates2 = []$/;"	v
global_coordinates2	results.py	/^global_coordinates2 = []$/;"	v
global_end	util/timeUtil.py	/^    def global_end(self):$/;"	m	class:execution_timer
global_l	copg/car_racing_simulator/cpg_main.py	/^    global_l = np.array(global_lower)$/;"	v
global_lower	copg/car_racing_simulator/cpg_main.py	/^    global_lower = []$/;"	v
global_np	copg/car_racing_simulator/cpg_main.py	/^    global_np = np.array(global_coordinates)$/;"	v
global_start	util/timeUtil.py	/^    def global_start(self):$/;"	m	class:execution_timer
global_u	copg/car_racing_simulator/cpg_main.py	/^    global_u = np.array(global_upper)$/;"	v
global_upper	copg/car_racing_simulator/cpg_main.py	/^    global_upper = []$/;"	v
grayness	misc/plotSingleTrajectory.py	/^grayness = 180$/;"	v
grid_baseline	util/analyzeBatchExpGrid.py	/^    grid_baseline = np.zeros((len(cvar_a_vec), len(cvar_Cu_vec)))$/;"	v
grid_cvar	util/analyzeBatchExpGrid.py	/^    grid_cvar = np.zeros((len(cvar_a_vec), len(cvar_Cu_vec)))$/;"	v
guess	sysid/motorModel.py	/^def guess(u,v,c2=0.425):$/;"	f
guess2	sysid/motorModel.py	/^def guess2(u,v,c1=6.17,c2=0.333):$/;"	f
guess_old	sysid/motorModel.py	/^def guess_old(u,vx):$/;"	f
h	sysid/cg.py	/^    h = ( (ll+ tire_w\/2) - Gr\/G*tw )\/np.tan(theta)$/;"	v
heading	misc/readlog.py	/^heading = data[:,3]$/;"	v
heading	misc/ukfSysid.py	/^heading = data[skip:end,3]$/;"	v
heading	misc/validateHybridModel.py	/^heading = data[skip:,3]$/;"	v
heading	misc/validateHybridModel.py	/^heading = exp_kf_theta$/;"	v
heading	sysid/fitThrottle.py	/^heading = data[:,3]$/;"	v
heading	sysid/readlog.py	/^heading = data[:,3]$/;"	v
history_steps	misc/hybridDynamicSimNew.py	/^    history_steps = 5$/;"	v
history_steps	misc/hybridKinematicSim.py	/^    history_steps = 5$/;"	v
history_steps	misc/hybridSim.py	/^    history_steps = 5$/;"	v
history_steps	misc/validateHybridModel.py	/^history_steps = 5$/;"	v
horizon_steps	controller/mppi/toy_examples/cudaMppiTest.py	/^horizon_steps = 20$/;"	v
horizon_steps	controller/mppi/toy_examples/dualMass.py	/^    horizon_steps = 40$/;"	v
horizon_steps	controller/mppi/toy_examples/invertedPendulum.py	/^    horizon_steps = 20$/;"	v
hs	sysid/cg.py	/^hs = []$/;"	v
hybridDynamicSimNew	misc/hybridDynamicSimNew.py	/^class hybridDynamicSimNew(nn.Module):$/;"	c
hybridKinematicSim	misc/hybridKinematicSim.py	/^class hybridKinematicSim(nn.Module):$/;"	c
hybridSim	misc/hybridSim.py	/^class hybridSim(nn.Module):$/;"	c
i	extension/Optitrack.py	/^            i = op.getInternalId(op_id)$/;"	v
i	misc/linearizeDynamics.py	/^    i = 100$/;"	v
img	misc/Qfstudy/QfGif.py	/^    img = cv2.imread(path,cv2.IMREAD_COLOR)$/;"	v
img	misc/plotAllTrajectory.py	/^    img = pickle.load(f)$/;"	v
img	misc/plotAllTrajectory.py	/^img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)$/;"	v
img	misc/plotFrontier.py	/^    img = (img1\/2 + img2\/2)$/;"	v
img	misc/plotFrontier.py	/^    img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)$/;"	v
img	misc/plotFrontier.py	/^    img = np.array(img,dtype=np.uint8)$/;"	v
img	misc/plotSingleTrajectory.py	/^    img = pickle.load(f)$/;"	v
img	misc/plotSingleTrajectory.py	/^img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)$/;"	v
img	misc/plotSingleTrajectory.py	/^img = plotTraj(track,filename, img.copy(), (255,0,0))$/;"	v
img	util/plotTrajectory.py	/^img = cv2.cvtColor(img, cv2.COLOR_BGR2RGB)$/;"	v
img	util/plotTrajectory.py	/^img = np.array(img,dtype=np.uint8)$/;"	v
img	util/plotTrajectory.py	/^img = track_img$/;"	v
img1	misc/plotAllTrajectory.py	/^    img1 = cv2.cvtColor(img1, cv2.COLOR_BGR2RGB)$/;"	v
img1	misc/plotAllTrajectory.py	/^    img1 = np.array(img1,dtype=np.uint8)$/;"	v
img1	misc/plotAllTrajectory.py	/^    img1 = plotTraj(track,filename, img.copy(), (0,0,255), "sample")$/;"	v
img1	misc/plotFrontier.py	/^    img1 = plotTraj(track,filename, track_img.copy(), (0,0,255), "CCMPPI")$/;"	v
img1	util/plotTrajectory.py	/^img1 = plotTraj(track,filename, track_img, (0,0,255), "CVaR")$/;"	v
img2	misc/plotFrontier.py	/^    img2 = plotTraj(track,filename, track_img.copy(), (0,255,0), "MPPI")$/;"	v
img2	util/plotTrajectory.py	/^img2 = plotTraj(track,filename, track_img, (0,255,0), "Baseline")$/;"	v
img_track	misc/laptime.py	/^    img_track = mk103.drawTrack()$/;"	v
img_track	misc/validateHybridModel.py	/^img_track = track.drawTrack()$/;"	v
img_track	qpSmooth.py	/^    img_track = fulltrack.drawRaceline(img=img_track,points=[])$/;"	v
img_track	qpSmooth.py	/^    img_track = fulltrack.drawTrack()$/;"	v
imgs	misc/Qfstudy/QfGif.py	/^imgs = []$/;"	v
index	configGenerator.py	/^index = 0$/;"	v
index	configs/noise.py	/^index = 0$/;"	v
index_cc	misc/plotFrontier.py	/^            index_cc = i$/;"	v
index_cc	misc/plotFrontier.py	/^    index_cc = -1$/;"	v
index_mppi	misc/plotFrontier.py	/^    index_mppi = index $/;"	v
indexes	misc/plotAllTrajectory.py	/^indexes = range(2740,2770,2)$/;"	v
init	car/Car.py	/^    def init(self):$/;"	m	class:Car
init	controller/CarController.py	/^    def init(self):$/;"	m	class:CarController
init	controller/PurePursuitCarController.py	/^    def init(self):$/;"	m	class:PurePursuitCarController
init	controller/ccmppi/CcmppiCarController.py	/^    def init(self):$/;"	m	class:CcmppiCarController
init	controller/ccmppi/oldCcmppi.py	/^    def init(self):$/;"	m	class:CcmppiCarController
init	controller/cvar/CvarCarController.py	/^    def init(self):$/;"	m	class:CvarCarController
init	controller/mppi/MppiCarController.py	/^    def init(self):$/;"	m	class:MppiCarController
init	extension/ConfigLogger.py	/^    def init(self):$/;"	m	class:ConfigLogger
init	extension/Extension.py	/^    def init(self):$/;"	m	class:Extension
init	extension/Gifsaver.py	/^    def init(self):$/;"	m	class:Gifsaver
init	extension/LapCounter.py	/^    def init(self):$/;"	m	class:LapCounter
init	extension/Laptimer.py	/^    def init(self):$/;"	m	class:Laptimer
init	extension/Optitrack.py	/^    def init(self):$/;"	m	class:Optitrack
init	extension/Simulator.py	/^    def init(self):$/;"	m	class:Simulator
init	extension/SteeringTracker.py	/^    def init(self):$/;"	m	class:SteeringTracker
init	extension/TrajectoryPlotter.py	/^    def init(self):$/;"	m	class:TrajectoryPlotter
init	extension/Visualization.py	/^    def init(self,):$/;"	m	class:Visualization
init	extension/simulator/DynamicSimulator.py	/^    def init(self):$/;"	m	class:DynamicSimulator
init	extension/simulator/KinematicSimulator.py	/^    def init(self):$/;"	m	class:KinematicSimulator
init	misc/ctrlEmptyWrapper.py	/^    def init(self, track):$/;"	m	class:ctrlEmptyWrapper
init	misc/ctrlMppiWrapper.py	/^    def init(self,track,sim=None):$/;"	m	class:ctrlMppiWrapper
init	planner/Planner.py	/^    def init(self):$/;"	m	class:Planner
init	run.py	/^    def init(self):$/;"	m	class:Main
init	util/kalmanFilter.py	/^    def init(self,x=None,y=None,theta=None, timestamp=None):$/;"	m	class:KalmanFilter
initCuda	controller/cvar/CvarCarController.py	/^    def initCuda(self):$/;"	m	class:CvarCarController
initCuda	controller/mppi/MppiCarController.py	/^    def initCuda(self):$/;"	m	class:MppiCarController
initCurand	controller/cvar/CvarCarController.py	/^    def initCurand(self):$/;"	m	class:CvarCarController
initCurand	controller/mppi/MppiCarController.py	/^    def initCurand(self):$/;"	m	class:MppiCarController
initDynamicSimulation	misc/advCarSim.py	/^    def initDynamicSimulation(self,car,init_state = (0.3*0.6,1.7*0.6,radians(90))):$/;"	m	class:advCarSim
initEthSimulation	misc/ethCarSim.py	/^    def initEthSimulation(self,car,init_state = (0.3*0.6,1.7*0.6,radians(90))):$/;"	m	class:ethCarSim
initHardware	car/Car.py	/^    def initHardware(self):$/;"	m	class:Car
initHardware	car/Offboard.py	/^    def initHardware(self):$/;"	m	class:Offboard
initHardware	car/OldOffboard.py	/^    def initHardware(self):$/;"	m	class:OldOffboard
initLog	car/Offboard.py	/^    def initLog(self):$/;"	m	class:Offboard
initMpcReal	misc/ctrlMpcWrapper.py	/^    def initMpcReal(self):$/;"	m	class:ctrlMpcWrapper
initMpcSim	misc/ctrlMpcWrapper.py	/^    def initMpcSim(self,sim):$/;"	m	class:ctrlMpcWrapper
initOptitrack	extension/Optitrack.py	/^    def initOptitrack(self,car,unused=None):$/;"	m	class:Optitrack
initParam	car/Car.py	/^    def initParam(self):$/;"	m	class:Car
initParam	car/Offboard.py	/^    def initParam(self):$/;"	m	class:Offboard
initParam	car/OldOffboard.py	/^    def initParam(self):$/;"	m	class:OldOffboard
initRaceline	track/RCPTrack.py	/^    def initRaceline(self,start, start_direction,seq_no,offset=None, filename=None):$/;"	m	class:RCPTrack
initSigmaPoints	misc/ukf.py	/^    def initSigmaPoints(self):$/;"	m	class:UKF
initSkidpad	track/Skidpad.py	/^    def initSkidpad(self,radius, velocity, ccw=True):$/;"	m	class:Skidpad
initSocket	car/Offboard.py	/^    def initSocket(self):$/;"	m	class:Offboard
initState	misc/ukf.py	/^    def initState(self,x,vxg,y,vyg,psi,omega):$/;"	m	class:UKF
initTrack	track/RCPTrack.py	/^    def initTrack(self,description, gridsize, scale,savepath=None):$/;"	m	class:RCPTrack
initTrackOpponents	misc/ctrlMppiWrapper.py	/^    def initTrackOpponents(self):$/;"	m	class:ctrlMppiWrapper
init_curand_kernel	controller/ccmppi/ccmppi.cu	/^__global__ void init_curand_kernel(int seed){$/;"	f	typeref:typename:void
init_curand_kernel	controller/cvar/cvar_racecar.cu	/^__global__ void init_curand_kernel(int seed){$/;"	f	typeref:typename:void
init_curand_kernel	controller/mppi/mppi_racecar.cu	/^__global__ void init_curand_kernel(int seed){$/;"	f	typeref:typename:void
init_p1	copg/car_racing/copg_orca.py	/^    init_p1 = torch.zeros((curr_batch_size)) #5*torch.rand((curr_batch_size))$/;"	v
init_p1	copg/car_racing/gda_orca.py	/^    init_p1 = torch.zeros((curr_batch_size)) #5*torch.rand((curr_batch_size))$/;"	v
init_p1	copg/rcvip_racing/copg_orca.py	/^    init_p1 = torch.zeros((curr_batch_size)) #5*torch.rand((curr_batch_size))$/;"	v
init_p1	copg/rcvip_racing/gda_orca.py	/^    init_p1 = torch.zeros((curr_batch_size)) #5*torch.rand((curr_batch_size))$/;"	v
init_p2	copg/car_racing/copg_orca.py	/^    init_p2 = torch.zeros((curr_batch_size)) #5*torch.rand((curr_batch_size))$/;"	v
init_p2	copg/car_racing/gda_orca.py	/^    init_p2 = torch.zeros((curr_batch_size)) #5*torch.rand((curr_batch_size))$/;"	v
init_p2	copg/rcvip_racing/copg_orca.py	/^    init_p2 = torch.zeros((curr_batch_size)) #5*torch.rand((curr_batch_size))$/;"	v
init_p2	copg/rcvip_racing/gda_orca.py	/^    init_p2 = torch.zeros((curr_batch_size)) #5*torch.rand((curr_batch_size))$/;"	v
init_size	copg/car_racing/results.py	/^init_size  = 10000$/;"	v
init_size	copg/rcvip_racing/results.py	/^init_size  = 10000$/;"	v
init_size	results.py	/^init_size  = 10000$/;"	v
init_weights	copg/car_racing/network.py	/^def init_weights(m):$/;"	f
init_weights	copg/rcvip_racing/network.py	/^def init_weights(m):$/;"	f
inputs	copg/car_racing_simulator/cpg_main.py	/^    inputs = []$/;"	v
inputs	copg/car_racing_simulator/cpg_main.py	/^    inputs = np.array(inputs)$/;"	v
interpol	copg/car_racing_simulator/Track.py	/^    def interpol(self, name, index, rela_proj):$/;"	m	class:Track
isInObstacle	controller/ccmppi/CcmppiCarController.py	/^    def isInObstacle(self, dist = 0.1, get_obstacle_id=False):$/;"	m	class:CcmppiCarController
isInObstacle	controller/ccmppi/oldCcmppi.py	/^    def isInObstacle(self, dist = 0.1, get_obstacle_id=False):$/;"	m	class:CcmppiCarController
isInObstacle	track/RCPTrack.py	/^    def isInObstacle(self, state, get_obstacle_id=False):$/;"	m	class:RCPTrack
isOutOfBoundary	extension/BoundaryChecker.py	/^    def isOutOfBoundary(self,car):$/;"	m	class:BoundaryChecker
isOutside	track/RCPTrack.py	/^    def isOutside(self,coord):$/;"	m	class:RCPTrack
is_pos_def	misc/ukf.py	/^        def is_pos_def(x):$/;"	f	member:UKF.generateSigmaPoints	file:
itr	copg/car_racing/copg_orca.py	/^        itr = itr + 1$/;"	v
itr	copg/car_racing/copg_orca.py	/^    itr = 0$/;"	v
itr	copg/car_racing/gda_orca.py	/^        itr = itr + 1$/;"	v
itr	copg/car_racing/gda_orca.py	/^    itr = 0$/;"	v
itr	copg/rcvip_racing/copg_orca.py	/^        itr = itr + 1$/;"	v
itr	copg/rcvip_racing/copg_orca.py	/^    itr = 0$/;"	v
itr	copg/rcvip_racing/gda_orca.py	/^        itr = itr + 1$/;"	v
itr	copg/rcvip_racing/gda_orca.py	/^    itr = 0$/;"	v
joy	misc/joystick.py	/^    joy = Joystick()$/;"	v
k	copg/car_racing_simulator/pure_pursuit.py	/^k = 0.01  # look forward gain$/;"	v
kensel	track/RCPTrack.py	/^        def kensel(s,x):$/;"	f	member:RCPTrack.kenselTransform	file:
kensel	track/RCPTrack.py	/^        def kensel(s,x):$/;"	f	member:RCPTrack.verify	file:
kenselTransform	track/RCPTrack.py	/^    def kenselTransform(self,K,ds):$/;"	m	class:RCPTrack
kf	sysid/fitThrottle.py	/^kf = KalmanFilter(1.02e-3)$/;"	v
kf_state	sysid/fitThrottle.py	/^    kf_state = kf.getState()$/;"	v
kf_state	sysid/fitThrottle.py	/^kf_state = np.array(kf_state_vec)$/;"	v
kf_state_vec	sysid/fitThrottle.py	/^kf_state_vec = []$/;"	v
kinematicSimulator	misc/oldkinematicSimulator.py	/^class kinematicSimulator():$/;"	c
l_f	copg/car_racing/orca_env_function.py	/^l_f = 0.029$/;"	v
l_f	copg/rcvip_racing/orca_env_function.py	/^l_f = 0.029$/;"	v
l_r	copg/car_racing/orca_env_function.py	/^l_r = 0.033$/;"	v
l_r	copg/rcvip_racing/orca_env_function.py	/^l_r = 0.033$/;"	v
labeledMarkerListener	extension/SteeringTracker.py	/^    def labeledMarkerListener(self,pos_vec):$/;"	m	class:SteeringTracker
labels	util/analyzeBatchExpGrid.py	/^    labels = ['experiment_name' , 'config_file_name' , 'log_name' , 'laps' , 'enable_cvar','cvar/;"	v
lagrangeDer	planner/Planner.py	/^    def lagrangeDer(self,points,ds=None):$/;"	m	class:Planner
lagrangeDer	qpSmooth.py	/^    def lagrangeDer(self,points,ds=None):$/;"	m	class:QpSmooth
lagrangeDer	track/RCPTrack.py	/^    def lagrangeDer(self,points,ds=None):$/;"	m	class:RCPTrack
laps	misc/benchmark.py	/^                        laps = -1$/;"	v
laps	misc/benchmark.py	/^                        laps = experiment.car_total_laps[0]$/;"	v
laptime	misc/benchmark.py	/^                        laptime = -1$/;"	v
laptime_data	util/analyzeBatchExpGrid.py	/^    laptime_data = np.array(data_dict['laptime_mean'])$/;"	v
laptime_stddev	misc/benchmark.py	/^                        laptime_stddev = -1$/;"	v
laptime_stddev	misc/benchmark.py	/^                        laptime_stddev = experiment.car_laptime_stddev[0]$/;"	v
laptime_vec	misc/laptime.py	/^laptime_vec = []$/;"	v
lat_acc	sysid/fitThrottle.py	/^lat_acc, lon_acc, total_acc = getAccCarFrame(x,y,dt)$/;"	v
leading_player	copg/car_racing/results.py	/^    leading_player = torch.ones(state_c1.size(0))*((state_c1[:,0]-state_c2[:,0])>0)# True means /;"	v
leading_player	copg/rcvip_racing/results.py	/^    leading_player = torch.ones(state_c1.size(0))*((state_c1[:,0]-state_c2[:,0])>0)# True means /;"	v
leading_player	results.py	/^    leading_player = torch.ones(state_c1.size(0))*((state_c1[:,0]-state_c2[:,0])>0)# True means /;"	v
left	track/RCPTrack.py	/^        left = lambda x,y : [(x)*self.scale,(y+0.5)*self.scale]$/;"	f	member:RCPTrack.initRaceline	file:
lf	sysid/cg.py	/^lf = np.mean( [ wb*Gr\/G, wb*(1-Gf\/G) ] )$/;"	v
limits	controller/ccmppi/curand.py	/^limits = np.array([-1,1,-2,2],dtype=np.float32)$/;"	v
limits	controller/mppi/toy_examples/curand.py	/^limits = np.array([-1,1,-2,2],dtype=np.float32)$/;"	v
linearize	controller/ccmppi/ccmppi_dynamic.py	/^    def linearize(self, nominal_state, nominal_ctrl):$/;"	m	class:CCMPPI_DYNAMIC
linearize	controller/ccmppi/ccmppi_kinematic.py	/^    def linearize(self, nominal_state, nominal_ctrl):$/;"	m	class:CCMPPI_KINEMATIC
linearize	misc/linearizeDynamics.py	/^    def linearize(self, nominal_state, nominal_ctrl):$/;"	m	class:LinearizeDynamics
linearize_dynamics	misc/cs_test.py	/^    def linearize_dynamics(self, states, controls):$/;"	m	class:Model
lines	util/analyzeBatchExpGrid.py	/^        lines = f.readlines()$/;"	v
ll	sysid/cg.py	/^ll = Gr \/ (Gl+Gr) * tw$/;"	v
load	track/RCPTrack.py	/^    def load(self,filename=None):$/;"	m	class:RCPTrack
loadCudaFile	controller/cvar/CvarCarController.py	/^    def loadCudaFile(self,cuda_filename,macros):$/;"	m	class:CvarCarController
loadCudaFile	controller/mppi/MppiCarController.py	/^    def loadCudaFile(self,cuda_filename,macros):$/;"	m	class:MppiCarController
loadFile	misc/vicon.py	/^    def loadFile(self,filename):$/;"	m	class:Vicon
loadLog	sysid/meet.py	/^def loadLog(filename=None):$/;"	f
loadLog	sysid/motorModel.py	/^def loadLog(filename=None):$/;"	f
loadLog	sysid/slipAngle.py	/^def loadLog(filename=None):$/;"	f
loadLog	sysid/validateModel.py	/^def loadLog(filename=None):$/;"	f
loadMeasuredSteering	sysid/validateModel.py	/^def loadMeasuredSteering(filename):$/;"	f
loadOrcaTrack	copg/rcvip_racing/trackTest.py	/^    def loadOrcaTrack(self):$/;"	m	class:Test
loadRaceline	track/RCPTrack.py	/^    def loadRaceline(self,filename=None):$/;"	m	class:RCPTrack
loadRcpTrack	copg/rcvip_racing/trackTest.py	/^    def loadRcpTrack(self):$/;"	m	class:Test
loadTrack	controller/ccmppi/ccmppi_dynamic.py	/^    def loadTrack(self):$/;"	m	class:CCMPPI_DYNAMIC
loadTrack	controller/ccmppi/ccmppi_kinematic.py	/^    def loadTrack(self):$/;"	m	class:CCMPPI_KINEMATIC
loadTrackfromFile	track/RCPTrack.py	/^    def loadTrackfromFile(self,filename,newtrack,gridsize):$/;"	m	class:RCPTrack
localTrajectory	planner/Planner.py	/^    def localTrajectory(self,state):$/;"	m	class:Planner
localTrajectory	track/RCPTrack.py	/^    def localTrajectory(self,state,wheelbase=90e-3,return_u=False):$/;"	m	class:RCPTrack
localTrajectory	track/Skidpad.py	/^    def localTrajectory(self,state,ccw=True):$/;"	m	class:Skidpad
localTrajectory	track/Track.py	/^    def localTrajectory(self,state):$/;"	m	class:Track
logLaptime	extension/Laptimer.py	/^    def logLaptime(self):$/;"	m	class:Laptimer
log_filename	misc/QfDemo.py	/^    log_filename = "log.txt"$/;"	v
log_filename	misc/benchmark.py	/^    log_filename = "log.txt"$/;"	v
log_filename	misc/oneObstacle.py	/^    log_filename = "log.txt"$/;"	v
log_names	misc/hybridDynamicSimNew.py	/^    log_names =  glob.glob('..\/log\/sysid\/full_state*.p')$/;"	v
log_names	misc/hybridKinematicSim.py	/^    log_names =  glob.glob('..\/log\/sysid\/full_state*.p')$/;"	v
log_names	misc/hybridSim.py	/^    log_names =  glob.glob('..\/log\/sysid\/full_state*.p')$/;"	v
log_names	misc/sysidDataloader.py	/^    log_names =  glob.glob('..\/log\/oct9\/full_state*.p')$/;"	v
log_names	misc/sysidTrainDynamicHybridSim.py	/^    log_names =  glob.glob('..\/log\/nov10\/full_state*.p')$/;"	v
log_names	misc/sysidTrainDynamicNewHybridSim.py	/^    log_names =  glob.glob('..\/log\/nov10\/full_state*.p')$/;"	v
log_names	misc/sysidTrainKinematicHybridSim.py	/^    log_names =  glob.glob('..\/log\/nov10\/full_state*.p')$/;"	v
log_new	sysid/meet.py	/^log_new = prepLog(rawlog,skip=1)$/;"	v
log_old	sysid/meet.py	/^log_old = prepLog(rawlog,skip=1)$/;"	v
log_probs1	copg/car_racing/copg_orca.py	/^    log_probs1 = log_probs1_inid.sum(1)$/;"	v
log_probs1	copg/car_racing/gda_orca.py	/^    log_probs1 = dist_batch1.log_prob(batch_mat_action1)$/;"	v
log_probs1	copg/rcvip_racing/copg_orca.py	/^    log_probs1 = log_probs1_inid.sum(1)$/;"	v
log_probs1	copg/rcvip_racing/gda_orca.py	/^    log_probs1 = dist_batch1.log_prob(batch_mat_action1)$/;"	v
log_probs1_inid	copg/car_racing/copg_orca.py	/^    log_probs1_inid = dist_batch1.log_prob(batch_mat_action1_gpu)$/;"	v
log_probs1_inid	copg/rcvip_racing/copg_orca.py	/^    log_probs1_inid = dist_batch1.log_prob(batch_mat_action1_gpu)$/;"	v
log_probs2	copg/car_racing/copg_orca.py	/^    log_probs2 = log_probs2_inid.sum(1)$/;"	v
log_probs2	copg/car_racing/gda_orca.py	/^    log_probs2 = dist_batch2.log_prob(batch_mat_action2)$/;"	v
log_probs2	copg/rcvip_racing/copg_orca.py	/^    log_probs2 = log_probs2_inid.sum(1)$/;"	v
log_probs2	copg/rcvip_racing/gda_orca.py	/^    log_probs2 = dist_batch2.log_prob(batch_mat_action2)$/;"	v
log_probs2_inid	copg/car_racing/copg_orca.py	/^    log_probs2_inid = dist_batch2.log_prob(batch_mat_action2_gpu)$/;"	v
log_probs2_inid	copg/rcvip_racing/copg_orca.py	/^    log_probs2_inid = dist_batch2.log_prob(batch_mat_action2_gpu)$/;"	v
lon_acc	sysid/fitThrottle.py	/^lat_acc, lon_acc, total_acc = getAccCarFrame(x,y,dt)$/;"	v
loss	misc/hybridDynamicSimNew.py	/^        loss = criterion((predicted_state - full_states_mean) \/ full_states_std, (target_states/;"	v
loss	misc/hybridKinematicSim.py	/^        loss = criterion((predicted_state - full_states_mean) \/ full_states_std, (target_states/;"	v
loss	misc/hybridSim.py	/^        loss = criterion((predicted_state - full_states_mean) \/ full_states_std, (target_states/;"	v
lp	extension/Laptimer.py	/^    lp = Laptimer((0,0),3,voice=True)$/;"	v
lp1	copg/car_racing/copg_orca.py	/^    lp1 = log_probs1*val1_p$/;"	v
lp1	copg/car_racing/copg_orca.py	/^    lp1=lp1.mean()$/;"	v
lp1	copg/rcvip_racing/copg_orca.py	/^    lp1 = log_probs1*val1_p$/;"	v
lp1	copg/rcvip_racing/copg_orca.py	/^    lp1=lp1.mean()$/;"	v
lp2	copg/car_racing/copg_orca.py	/^    lp2 = log_probs2*val1_p$/;"	v
lp2	copg/car_racing/copg_orca.py	/^    lp2=lp2.mean()$/;"	v
lp2	copg/rcvip_racing/copg_orca.py	/^    lp2 = log_probs2*val1_p$/;"	v
lp2	copg/rcvip_racing/copg_orca.py	/^    lp2=lp2.mean()$/;"	v
lr	sysid/cg.py	/^lr = wb - lf$/;"	v
m	controller/ccmppi/curand.py	/^m = 2$/;"	v
m	controller/mppi/toy_examples/curand.py	/^m = 2$/;"	v
m	misc/cvxpy_test.py	/^m = 10$/;"	v
m2canvas	track/EmptyTrack.py	/^    def m2canvas(self,coord):$/;"	m	class:EmptyTrack
m2canvas	track/RCPTrack.py	/^    def m2canvas(self,coord):$/;"	m	class:RCPTrack
m2canvas	track/Skidpad.py	/^    def m2canvas(self,coord):$/;"	m	class:Skidpad
main	controller/ccmppi/ccmppi_dynamic.py	/^    main = CCMPPI_DYNAMIC(dt,20,noise_cov, debug_info)$/;"	v
main	controller/mppi/toy_examples/dualMass.py	/^    main = dualMass(x0=[0,0,0,0])$/;"	v
main	controller/mppi/toy_examples/invertedPendulum.py	/^    main = InvertedPendulum(x0=[0,0.1])$/;"	v
main	controller/mppi/toy_examples/invertedPendulum.py	/^    main = InvertedPendulum(x0=[np.pi\/2.0,0.0])$/;"	v
main	controller/mppi/toy_examples/mppiJisModel.py	/^    main = Model()$/;"	v
main	copg/car_racing_simulator/main.py	/^def main():$/;"	f
main	copg/car_racing_simulator/pure_pursuit.py	/^def main():$/;"	f
main	misc/linearizeDynamics.py	/^    main = LinearizeDynamics(3)$/;"	v
main	sysid/torsionPendulum.py	/^    main = TorsionPendulum()$/;"	v
makeBigMatrices	misc/linearizeDynamics.py	/^    def makeBigMatrices(self, As, Bs, ds, Ds):$/;"	m	class:LinearizeDynamics
makePacket	car/Offboard.py	/^    def makePacket(self):$/;"	m	class:OffboardPacket
make_batch_dynamics	controller/ccmppi/ccmppi_dynamic.py	/^    def make_batch_dynamics(self, As, Bs, ds, Ds,Sigma_epsilon):$/;"	m	class:CCMPPI_DYNAMIC
make_batch_dynamics	controller/ccmppi/ccmppi_kinematic.py	/^    def make_batch_dynamics(self, As, Bs, ds, Ds,Sigma_epsilon):$/;"	m	class:CCMPPI_KINEMATIC
make_batch_dynamics	misc/linearizeDynamics.py	/^    def make_batch_dynamics(self, As, Bs, ds, Ds,Sigma_epsilon):$/;"	m	class:LinearizeDynamics
mapdata	car/OldOffboard.py	/^    def mapdata(self,x,a,b,c,d):$/;"	m	class:OldOffboard
mask	copg/car_racing/copg_orca.py	/^    mask = batch_mat_done.to(device)$/;"	v
mask	copg/rcvip_racing/copg_orca.py	/^    mask = batch_mat_done.to(device)$/;"	v
mask	misc/plotFrontier.py	/^mask = np.bitwise_and(mask1,mask2)$/;"	v
mask	util/analyzeBatchExpGrid.py	/^            mask = np.logical_and(mask1,mask2)$/;"	v
mask1	misc/plotFrontier.py	/^mask1 = np.bitwise_and(ccmppi[:,8] > a_low_thresh, ccmppi[:,8] < a_high_thresh)$/;"	v
mask1	misc/plotFrontier.py	/^mask1 = np.bitwise_and(mppi[:,8] > a_low_thresh, mppi[:,8] < a_high_thresh)$/;"	v
mask1	util/analyzeBatchExpGrid.py	/^            mask1 = np.isclose(cvar_a_data,cvar_a)$/;"	v
mask2	misc/plotFrontier.py	/^mask2 = np.bitwise_and(ccmppi[:,9] > b_low_thresh, ccmppi[:,9] < b_high_thresh)$/;"	v
mask2	misc/plotFrontier.py	/^mask2 = np.bitwise_and(mppi[:,9] > b_low_thresh, mppi[:,9] < b_high_thresh)$/;"	v
mask2	util/analyzeBatchExpGrid.py	/^            mask2 = np.isclose(cvar_Cu_data,cvar_Cu)$/;"	v
mask_ele	copg/car_racing/copg_orca.py	/^        mask_ele = ~done$/;"	v
mask_ele	copg/car_racing/gda_orca.py	/^        mask_ele = ~done$/;"	v
mask_ele	copg/rcvip_racing/copg_orca.py	/^        mask_ele = ~done$/;"	v
mask_ele	copg/rcvip_racing/gda_orca.py	/^        mask_ele = ~done$/;"	v
mat_action1	copg/car_racing/copg_orca.py	/^            mat_action1 = action1$/;"	v
mat_action1	copg/car_racing/copg_orca.py	/^            mat_action1 = mat_action1.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_action1	copg/car_racing/copg_orca.py	/^            mat_action1 = torch.cat([mat_action1.view(-1, curr_batch_size, 2), action1.view(-1, /;"	v
mat_action1	copg/car_racing/copg_orca.py	/^    mat_action1 = []$/;"	v
mat_action1	copg/car_racing/gda_orca.py	/^            mat_action1 = action1$/;"	v
mat_action1	copg/car_racing/gda_orca.py	/^            mat_action1 = mat_action1.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_action1	copg/car_racing/gda_orca.py	/^            mat_action1 = torch.cat([mat_action1.view(-1, curr_batch_size, 2), action1.view(-1, /;"	v
mat_action1	copg/car_racing/gda_orca.py	/^    mat_action1 = []$/;"	v
mat_action1	copg/car_racing/results.py	/^mat_action1 = []$/;"	v
mat_action1	copg/rcvip_racing/copg_orca.py	/^            mat_action1 = action1$/;"	v
mat_action1	copg/rcvip_racing/copg_orca.py	/^            mat_action1 = mat_action1.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_action1	copg/rcvip_racing/copg_orca.py	/^            mat_action1 = torch.cat([mat_action1.view(-1, curr_batch_size, 2), action1.view(-1, /;"	v
mat_action1	copg/rcvip_racing/copg_orca.py	/^    mat_action1 = []$/;"	v
mat_action1	copg/rcvip_racing/gda_orca.py	/^            mat_action1 = action1$/;"	v
mat_action1	copg/rcvip_racing/gda_orca.py	/^            mat_action1 = mat_action1.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_action1	copg/rcvip_racing/gda_orca.py	/^            mat_action1 = torch.cat([mat_action1.view(-1, curr_batch_size, 2), action1.view(-1, /;"	v
mat_action1	copg/rcvip_racing/gda_orca.py	/^    mat_action1 = []$/;"	v
mat_action1	copg/rcvip_racing/results.py	/^mat_action1 = []$/;"	v
mat_action1	results.py	/^mat_action1 = []$/;"	v
mat_action2	copg/car_racing/copg_orca.py	/^            mat_action2 = action2$/;"	v
mat_action2	copg/car_racing/copg_orca.py	/^            mat_action2 = mat_action2.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_action2	copg/car_racing/copg_orca.py	/^            mat_action2 = torch.cat([mat_action2.view(-1, curr_batch_size, 2), action2.view(-1, /;"	v
mat_action2	copg/car_racing/copg_orca.py	/^    mat_action2 = []$/;"	v
mat_action2	copg/car_racing/gda_orca.py	/^            mat_action2 = action2$/;"	v
mat_action2	copg/car_racing/gda_orca.py	/^            mat_action2 = mat_action2.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_action2	copg/car_racing/gda_orca.py	/^            mat_action2 = torch.cat([mat_action2.view(-1, curr_batch_size, 2), action2.view(-1, /;"	v
mat_action2	copg/car_racing/gda_orca.py	/^    mat_action2 = []$/;"	v
mat_action2	copg/car_racing/results.py	/^mat_action2 = []$/;"	v
mat_action2	copg/rcvip_racing/copg_orca.py	/^            mat_action2 = action2$/;"	v
mat_action2	copg/rcvip_racing/copg_orca.py	/^            mat_action2 = mat_action2.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_action2	copg/rcvip_racing/copg_orca.py	/^            mat_action2 = torch.cat([mat_action2.view(-1, curr_batch_size, 2), action2.view(-1, /;"	v
mat_action2	copg/rcvip_racing/copg_orca.py	/^    mat_action2 = []$/;"	v
mat_action2	copg/rcvip_racing/gda_orca.py	/^            mat_action2 = action2$/;"	v
mat_action2	copg/rcvip_racing/gda_orca.py	/^            mat_action2 = mat_action2.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_action2	copg/rcvip_racing/gda_orca.py	/^            mat_action2 = torch.cat([mat_action2.view(-1, curr_batch_size, 2), action2.view(-1, /;"	v
mat_action2	copg/rcvip_racing/gda_orca.py	/^    mat_action2 = []$/;"	v
mat_action2	copg/rcvip_racing/results.py	/^mat_action2 = []$/;"	v
mat_action2	results.py	/^mat_action2 = []$/;"	v
mat_done	copg/car_racing/copg_orca.py	/^            mat_done = mask_ele$/;"	v
mat_done	copg/car_racing/copg_orca.py	/^            mat_done = mat_done.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_done	copg/car_racing/copg_orca.py	/^            mat_done = torch.cat([mat_done.view(-1, curr_batch_size, 1), mask_ele.view(-1, curr_/;"	v
mat_done	copg/car_racing/copg_orca.py	/^    mat_done = []$/;"	v
mat_done	copg/car_racing/gda_orca.py	/^            mat_done = mask_ele$/;"	v
mat_done	copg/car_racing/gda_orca.py	/^            mat_done = mat_done.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_done	copg/car_racing/gda_orca.py	/^            mat_done = torch.cat([mat_done.view(-1, curr_batch_size, 1), mask_ele.view(-1, curr_/;"	v
mat_done	copg/car_racing/gda_orca.py	/^    mat_done = []$/;"	v
mat_done	copg/car_racing/results.py	/^mat_done = []$/;"	v
mat_done	copg/rcvip_racing/copg_orca.py	/^            mat_done = mask_ele$/;"	v
mat_done	copg/rcvip_racing/copg_orca.py	/^            mat_done = mat_done.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_done	copg/rcvip_racing/copg_orca.py	/^            mat_done = torch.cat([mat_done.view(-1, curr_batch_size, 1), mask_ele.view(-1, curr_/;"	v
mat_done	copg/rcvip_racing/copg_orca.py	/^    mat_done = []$/;"	v
mat_done	copg/rcvip_racing/gda_orca.py	/^            mat_done = mask_ele$/;"	v
mat_done	copg/rcvip_racing/gda_orca.py	/^            mat_done = mat_done.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_done	copg/rcvip_racing/gda_orca.py	/^            mat_done = torch.cat([mat_done.view(-1, curr_batch_size, 1), mask_ele.view(-1, curr_/;"	v
mat_done	copg/rcvip_racing/gda_orca.py	/^    mat_done = []$/;"	v
mat_done	copg/rcvip_racing/results.py	/^mat_done = []$/;"	v
mat_done	results.py	/^mat_done = []$/;"	v
mat_reward1	copg/car_racing/copg_orca.py	/^            mat_reward1 = mat_reward1.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_reward1	copg/car_racing/copg_orca.py	/^            mat_reward1 = torch.cat([mat_reward1.view(-1,curr_batch_size,1),reward1.view(-1,curr/;"	v
mat_reward1	copg/car_racing/copg_orca.py	/^    mat_reward1 = []$/;"	v
mat_reward1	copg/car_racing/gda_orca.py	/^            mat_reward1 = mat_reward1.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_reward1	copg/car_racing/gda_orca.py	/^            mat_reward1 = torch.cat([mat_reward1.view(-1,curr_batch_size,1),reward1.view(-1,curr/;"	v
mat_reward1	copg/car_racing/gda_orca.py	/^    mat_reward1 = []$/;"	v
mat_reward1	copg/car_racing/results.py	/^mat_reward1 = []$/;"	v
mat_reward1	copg/rcvip_racing/copg_orca.py	/^            mat_reward1 = mat_reward1.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_reward1	copg/rcvip_racing/copg_orca.py	/^            mat_reward1 = torch.cat([mat_reward1.view(-1,curr_batch_size,1),reward1.view(-1,curr/;"	v
mat_reward1	copg/rcvip_racing/copg_orca.py	/^    mat_reward1 = []$/;"	v
mat_reward1	copg/rcvip_racing/gda_orca.py	/^            mat_reward1 = mat_reward1.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_reward1	copg/rcvip_racing/gda_orca.py	/^            mat_reward1 = torch.cat([mat_reward1.view(-1,curr_batch_size,1),reward1.view(-1,curr/;"	v
mat_reward1	copg/rcvip_racing/gda_orca.py	/^    mat_reward1 = []$/;"	v
mat_reward1	copg/rcvip_racing/results.py	/^mat_reward1 = []$/;"	v
mat_reward1	results.py	/^mat_reward1 = []$/;"	v
mat_reward2	copg/car_racing/copg_orca.py	/^    mat_reward2 = []$/;"	v
mat_reward2	copg/car_racing/gda_orca.py	/^    mat_reward2 = []$/;"	v
mat_reward2	copg/rcvip_racing/copg_orca.py	/^    mat_reward2 = []$/;"	v
mat_reward2	copg/rcvip_racing/gda_orca.py	/^    mat_reward2 = []$/;"	v
mat_state1	copg/car_racing/copg_orca.py	/^            mat_state1 = mat_state1.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_state1	copg/car_racing/copg_orca.py	/^            mat_state1 = torch.cat([mat_state1.view(-1,curr_batch_size,5),state_c1[:,0:5].view(-/;"	v
mat_state1	copg/car_racing/copg_orca.py	/^    mat_state1 = []$/;"	v
mat_state1	copg/car_racing/gda_orca.py	/^            mat_state1 = mat_state1.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_state1	copg/car_racing/gda_orca.py	/^            mat_state1 = torch.cat([mat_state1.view(-1,curr_batch_size,5),state_c1[:,0:5].view(-/;"	v
mat_state1	copg/car_racing/gda_orca.py	/^    mat_state1 = []$/;"	v
mat_state1	copg/car_racing/results.py	/^mat_state1 = []$/;"	v
mat_state1	copg/rcvip_racing/copg_orca.py	/^            mat_state1 = mat_state1.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_state1	copg/rcvip_racing/copg_orca.py	/^            mat_state1 = torch.cat([mat_state1.view(-1,curr_batch_size,5),state_c1[:,0:5].view(-/;"	v
mat_state1	copg/rcvip_racing/copg_orca.py	/^    mat_state1 = []$/;"	v
mat_state1	copg/rcvip_racing/gda_orca.py	/^            mat_state1 = mat_state1.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_state1	copg/rcvip_racing/gda_orca.py	/^            mat_state1 = torch.cat([mat_state1.view(-1,curr_batch_size,5),state_c1[:,0:5].view(-/;"	v
mat_state1	copg/rcvip_racing/gda_orca.py	/^    mat_state1 = []$/;"	v
mat_state1	copg/rcvip_racing/results.py	/^mat_state1 = []$/;"	v
mat_state1	results.py	/^mat_state1 = []$/;"	v
mat_state2	copg/car_racing/copg_orca.py	/^            mat_state2 = mat_state2.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_state2	copg/car_racing/copg_orca.py	/^            mat_state2 = state_c2[:, 0:5]$/;"	v
mat_state2	copg/car_racing/copg_orca.py	/^            mat_state2 = torch.cat([mat_state2.view(-1, curr_batch_size, 5), state_c2[:, 0:5].vi/;"	v
mat_state2	copg/car_racing/copg_orca.py	/^    mat_state2 = []$/;"	v
mat_state2	copg/car_racing/gda_orca.py	/^            mat_state2 = mat_state2.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_state2	copg/car_racing/gda_orca.py	/^            mat_state2 = state_c2[:, 0:5]$/;"	v
mat_state2	copg/car_racing/gda_orca.py	/^            mat_state2 = torch.cat([mat_state2.view(-1, curr_batch_size, 5), state_c2[:, 0:5].vi/;"	v
mat_state2	copg/car_racing/gda_orca.py	/^    mat_state2 = []$/;"	v
mat_state2	copg/car_racing/results.py	/^mat_state2 = []$/;"	v
mat_state2	copg/rcvip_racing/copg_orca.py	/^            mat_state2 = mat_state2.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_state2	copg/rcvip_racing/copg_orca.py	/^            mat_state2 = state_c2[:, 0:5]$/;"	v
mat_state2	copg/rcvip_racing/copg_orca.py	/^            mat_state2 = torch.cat([mat_state2.view(-1, curr_batch_size, 5), state_c2[:, 0:5].vi/;"	v
mat_state2	copg/rcvip_racing/copg_orca.py	/^    mat_state2 = []$/;"	v
mat_state2	copg/rcvip_racing/gda_orca.py	/^            mat_state2 = mat_state2.transpose(0, 1)[remaining_xo].transpose(0, 1)$/;"	v
mat_state2	copg/rcvip_racing/gda_orca.py	/^            mat_state2 = state_c2[:, 0:5]$/;"	v
mat_state2	copg/rcvip_racing/gda_orca.py	/^            mat_state2 = torch.cat([mat_state2.view(-1, curr_batch_size, 5), state_c2[:, 0:5].vi/;"	v
mat_state2	copg/rcvip_racing/gda_orca.py	/^    mat_state2 = []$/;"	v
mat_state2	copg/rcvip_racing/results.py	/^mat_state2 = []$/;"	v
mat_state2	results.py	/^mat_state2 = []$/;"	v
matchRealTime	extension/Simulator.py	/^    def matchRealTime(self):$/;"	m	class:Simulator
matrix_addition_helper	controller/ccmppi/ccmppi.cu	/^void matrix_addition_helper(float* A, float* B, int m, int n, float* out){$/;"	f	typeref:typename:void
matrix_multiply_helper	controller/ccmppi/ccmppi.cu	/^void matrix_multiply_helper( float* A, int offset, float* B, int m, int n, int p, float* out){$/;"	f	typeref:typename:void
matrix_multiply_scalar	controller/ccmppi/ccmppi.cu	/^void matrix_multiply_scalar(float* A, float coeff, int m, int n){$/;"	f	typeref:typename:void
max_offset	misc/laptime.py	/^    max_offset = 0.5$/;"	v
mean_baseline	util/analyzeBatchExpGrid.py	/^    mean_baseline = 367.095$/;"	v
mean_err	sysid/steeringSysid.py	/^mean_err = np.mean(np.abs(measured_steering_smooth - commanded_steering))$/;"	v
mean_err	sysid/steeringSysid.py	/^mean_err = np.mean(np.abs(measured_steering_smooth - estimated_steering))$/;"	v
meas	sysid/cg.py	/^meas = [1,-1,-1,1]$/;"	v
measured_steering	sysid/steeringSysid.py	/^measured_steering = (measured_steering+0.5*np.pi)%(np.pi)-0.5*np.pi$/;"	v
measured_steering	sysid/steeringSysid.py	/^measured_steering = np.array(data[0]['measured_steering'])$/;"	v
measured_steering_smooth	sysid/steeringSysid.py	/^measured_steering_smooth = savgol_filter(measured_steering, 19,2)$/;"	v
memCount	controller/mppi/toy_examples/cudaMppiTest.py	/^memCount = cost.size*cost.itemsize + x0.size*x0.itemsize + control.size*control.itemsize + epsil/;"	v
minimizeCurvatureRoutine	track/RCPTrack.py	/^    def minimizeCurvatureRoutine(self,):$/;"	m	class:RCPTrack
mk103	misc/laptime.py	/^    mk103 = RCPtrack()$/;"	v
mod	controller/ccmppi/curand.py	/^mod = SourceModule(code % cuda_code_macros, no_extern_c=True)$/;"	v
mod	controller/mppi/toy_examples/cudaMppiTest.py	/^mod = SourceModule(code)$/;"	v
mod	controller/mppi/toy_examples/curand.py	/^mod = SourceModule(code % cuda_code_macros, no_extern_c=True)$/;"	v
mod	controller/mppi/toy_examples/pycudaTest.py	/^mod = SourceModule("""$/;"	v
mpc	controller/mppi/toy_examples/dampedBox.py	/^    mpc = MPC()$/;"	v
mpc	misc/mpc.py	/^    mpc = MPC()$/;"	v
mpc	planner/MPC.py	/^    mpc = MPC()$/;"	v
mpc	planner/old_MPC.py	/^    mpc = MPC()$/;"	v
mppi	controller/mppi/toy_examples/dualMass.py	/^    mppi = MPPI(samples_count,horizon_steps,control_dim,temperature,dt,noise_cov)$/;"	v
mppi	controller/mppi/toy_examples/invertedPendulum.py	/^    mppi = MPPI(samples_count,horizon_steps,control_dim,temperature,dt,noise_cov)$/;"	v
mppi	misc/plotComparison.py	/^mppi = []$/;"	v
mppi	misc/plotComparison.py	/^mppi = np.array(mppi)$/;"	v
mppi	misc/plotFrontier.py	/^mppi = []$/;"	v
mppi	misc/plotFrontier.py	/^mppi = mppi[mask] $/;"	v
mppi	misc/plotFrontier.py	/^mppi = np.array(mppi)$/;"	v
mppi	misc/read_mppi_ccmppi_log.py	/^mppi = []$/;"	v
mppi	misc/read_mppi_ccmppi_log.py	/^mppi = np.array(mppi)$/;"	v
mppi_bad_count	misc/plotFrontier.py	/^mppi_bad_count = 0$/;"	v
mppi_cov_cov_vec	misc/plotCov.py	/^mppi_cov_cov_vec = []$/;"	v
mppi_injected	misc/plotCov.py	/^mppi_injected = []$/;"	v
mppi_injected	misc/plotCov.py	/^mppi_injected = np.array(mppi_injected)$/;"	v
mppi_injected_cov	misc/plotCov.py	/^    mppi_injected_cov = getCov(mppi_injected_log_no[i])$/;"	v
mppi_injected_cov_vec	misc/plotCov.py	/^mppi_injected_cov_vec = []$/;"	v
mppi_injected_log_no	misc/plotCov.py	/^mppi_injected_log_no = mppi_injected[:,7]$/;"	v
mppi_injected_logno	misc/plotAllTrajectory.py	/^mppi_injected_logno = 2651$/;"	v
mppi_injected_ratio	misc/plotCov.py	/^mppi_injected_ratio = []$/;"	v
mppi_logno	misc/plotFrontier.py	/^    mppi_logno = int(mppi[index_mppi,7])$/;"	v
mppi_mean_collision	misc/plotFrontier.py	/^mppi_mean_collision = np.mean(mppi[:,3])$/;"	v
mppi_mean_cov	misc/plotFrontier.py	/^mppi_mean_cov = np.mean(mppi[:,5])$/;"	v
mppi_mean_laptime	misc/plotFrontier.py	/^mppi_mean_laptime = np.mean(mppi[:,2])$/;"	v
mppi_total_count	misc/plotFrontier.py	/^mppi_total_count = 0$/;"	v
mse	planner/Planner.py	/^        mse = lambda a: np.sum((a)**2)$/;"	f	member:Planner.verifyCost	file:
multiply_them	controller/mppi/toy_examples/pycudaTest.py	/^multiply_them = mod.get_function("multiply_them")$/;"	v
n	controller/mppi/toy_examples/dampedBox.py	/^    n = 2$/;"	v
n	misc/cvxpy_test.py	/^n = 5$/;"	v
n_c1	copg/car_racing/results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
n_c1	copg/rcvip_racing/results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
n_c1	results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
n_c2	copg/car_racing/results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
n_c2	copg/rcvip_racing/results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
n_c2	results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
name	batchRun.py	/^        name = sys.argv[1]$/;"	v
name	configGenerator.py	/^    name = sys.argv[1]$/;"	v
name	configs/noise.py	/^    name = sys.argv[1]$/;"	v
name	run.py	/^        name = sys.argv[1]$/;"	v
name	util/analyzeBatchExpGrid.py	/^        name = sys.argv[1]$/;"	v
ndarray	common.py	/^def ndarray(x):$/;"	f
nearPD	misc/ukf.py	/^    def nearPD(self,A, nit=10):$/;"	m	class:UKF
nearest_spd_cholesky	controller/ccmppi/ccmppi_dynamic.py	/^    def nearest_spd_cholesky(self,A):$/;"	m	class:CCMPPI_DYNAMIC
nearest_spd_cholesky	controller/ccmppi/ccmppi_kinematic.py	/^    def nearest_spd_cholesky(self,A):$/;"	m	class:CCMPPI_KINEMATIC
nearest_spd_cholesky	misc/cs_solver.py	/^def nearest_spd_cholesky(A):$/;"	f
nearest_spd_cholesky	misc/cs_solver_covariance_only.py	/^def nearest_spd_cholesky(A):$/;"	f
nearest_spd_cholesky	misc/linearizeDynamics.py	/^    def nearest_spd_cholesky(self,A):$/;"	m	class:LinearizeDynamics
next_value	copg/car_racing/copg_orca.py	/^    next_value = 0  # because currently we end ony when its done which is equivalent to no next /;"	v
next_value	copg/car_racing/gda_orca.py	/^    next_value = 0  # because currently we end ony when its done which is equivalent to no next /;"	v
next_value	copg/rcvip_racing/copg_orca.py	/^    next_value = 0  # because currently we end ony when its done which is equivalent to no next /;"	v
next_value	copg/rcvip_racing/gda_orca.py	/^    next_value = 0  # because currently we end ony when its done which is equivalent to no next /;"	v
nn	copg/car_racing/network.py	/^import torch.nn as nn$/;"	I	nameref:module:torch.nn
nn	copg/rcvip_racing/network.py	/^import torch.nn as nn$/;"	I	nameref:module:torch.nn
nn	misc/hybridDynamicSimNew.py	/^import torch.nn as nn$/;"	I	nameref:module:torch.nn
nn	misc/hybridKinematicSim.py	/^import torch.nn as nn$/;"	I	nameref:module:torch.nn
nn	misc/hybridSim.py	/^import torch.nn as nn$/;"	I	nameref:module:torch.nn
nn	misc/sysidTrainDynamicHybridSim.py	/^import torch.nn as nn$/;"	I	nameref:module:torch.nn
nn	misc/sysidTrainDynamicNewHybridSim.py	/^import torch.nn as nn$/;"	I	nameref:module:torch.nn
nn	misc/sysidTrainKinematicHybridSim.py	/^import torch.nn as nn$/;"	I	nameref:module:torch.nn
noise	controller/mppi/toy_examples/dualMass.py	/^    noise = 2$/;"	v
noise	controller/mppi/toy_examples/invertedPendulum.py	/^    noise = 10$/;"	v
noise_cov	controller/ccmppi/ccmppi_dynamic.py	/^    noise_cov = np.diag([(0.7*ratio)**2,radians(20.0*ratio)**2])$/;"	v
noise_cov	controller/mppi/toy_examples/dualMass.py	/^    noise_cov = np.eye(control_dim)*noise*noise$/;"	v
noise_cov	controller/mppi/toy_examples/invertedPendulum.py	/^    noise_cov = np.eye(control_dim)*noise*noise$/;"	v
noise_mean	controller/mppi/mppi_racecar.cu	/^__device__ float noise_mean[CONTROL_DIM];$/;"	v	typeref:typename:float[]
noise_std	controller/mppi/mppi_racecar.cu	/^__device__ float noise_std[CONTROL_DIM];$/;"	v	typeref:typename:float[]
noise_vec	configs/noise.py	/^noise_vec = [0.3,0.5,0.7]$/;"	v
norm	extension/simulator/DynamicSimulator.py	/^            norm = lambda a,b:(a**2+b**2)**0.5$/;"	f	member:DynamicSimulator.advanceDynamics	file:
norm	misc/ctrlMppiWrapper.py	/^            norm = lambda a,b:(a**2+b**2)**0.5$/;"	f	member:ctrlMppiWrapper.applyDiscreteDynamics	file:
norm	misc/ethCarSim.py	/^            norm = lambda a,b:(a**2+b**2)**0.5$/;"	f	member:ethCarSim.updateCar	file:
norm	misc/linearizeDynamics.py	/^        norm = lambda a,b:(a**2+b**2)**0.5$/;"	f	member:LinearizeDynamics.update_dynamics	file:
norm	sysid/validateModel.py	/^        norm = lambda a,b:(a**2+b**2)**0.5$/;"	f	function:step_raw	file:
norm	sysid/validateModel.py	/^        norm = lambda a,b:(a**2+b**2)**0.5$/;"	f	function:step_rig	file:
norm_err	sysid/steeringSysid.py	/^norm_err = np.linalg.norm(measured_steering_smooth - commanded_steering)$/;"	v
np	car/Offboard.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	common.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	configGenerator.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	configs/noise.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/CarController.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/PidController.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/ccmppi/CcmppiCarController.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/ccmppi/ccmppi.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/ccmppi/ccmppi_dynamic.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/ccmppi/ccmppi_kinematic.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/ccmppi/curand.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/ccmppi/oldCcmppi.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/cvar/CvarCarController.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/mppi/MppiCarController.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/mppi/cost_visualization.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/mppi/toy_examples/cudaMppiTest.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/mppi/toy_examples/curand.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/mppi/toy_examples/dampedBox.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/mppi/toy_examples/dualMass.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/mppi/toy_examples/invertedPendulum.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	controller/mppi/toy_examples/mppiJisModel.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	copg/car_racing/copg_orca.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	copg/car_racing/gda_orca.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	copg/car_racing/orca_env_function.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	copg/car_racing/results.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	copg/car_racing_simulator/Track.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	copg/car_racing_simulator/VehicleModel.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	copg/car_racing_simulator/cpg_main.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	copg/car_racing_simulator/main.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	copg/car_racing_simulator/pure_pursuit.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	copg/rcvip_racing/copg_orca.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	copg/rcvip_racing/gda_orca.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	copg/rcvip_racing/orca_env_function.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	copg/rcvip_racing/results.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	copg/rcvip_racing/trackTest.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	extension/BoundaryChecker.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	extension/CollisionChecker.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	extension/ConfigLogger.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	extension/CrosstrackErrorTracker.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	extension/Gifsaver.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	extension/Laptimer.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	extension/Logger.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	extension/Optitrack.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	extension/PerformanceTracker.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	extension/Simulator.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	extension/TrajectoryPlotter.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	extension/simulator/DynamicSimulator.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	extension/simulator/KinematicSimulator.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/Qfstudy/QfGif.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/advCarSim.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/cs_solver.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/cs_solver_covariance_only.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/cs_test.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/ctrlMpcWrapper.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/ctrlMppiWrapper.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/cvxpy_test.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/ethCarSim.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/getThrustCurve.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/hybridDynamicSimNew.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/hybridKinematicSim.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/hybridSim.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/laptime.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/linearizeDynamics.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/mpc.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/oldkinematicSimulator.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/plotComparison.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/plotCov.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/plotFrontier.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/read_mppi_ccmppi_log.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/readlog.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/sysidDataloader.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/sysidTrainDynamicHybridSim.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/sysidTrainDynamicNewHybridSim.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/sysidTrainKinematicHybridSim.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/testGpuDynamics.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/tf.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/throttle_model.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/ukf.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/ukfSysid.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/validateHybridModel.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	misc/vicon.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	planner/MPC.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	planner/Planner.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	planner/old_MPC.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	qpSmooth.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	results.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	sysid/cg.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	sysid/fitThrottle.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	sysid/meet.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	sysid/motorModel.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	sysid/readlog.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	sysid/slipAngle.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	sysid/steadyStateThrottle.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	sysid/steeringSysid.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	sysid/tire.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	sysid/torsionPendulum.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	sysid/validateModel.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	track/EmptyTrack.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	track/RCPTrack.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	track/Skidpad.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	track/Track.py	/^import numpy as np$/;"	I	nameref:module:numpy
np	util/kalmanFilter.py	/^import numpy as np$/;"	I	nameref:module:numpy
num_episode	copg/car_racing/copg_orca.py	/^num_episode = 10000$/;"	v
num_episode	copg/car_racing/gda_orca.py	/^num_episode = 20000$/;"	v
num_episode	copg/rcvip_racing/copg_orca.py	/^num_episode = 10000$/;"	v
num_episode	copg/rcvip_racing/gda_orca.py	/^num_episode = 20000$/;"	v
num_lines	misc/nanny.py	/^    num_lines = sum(1 for line in open('log.txt'))$/;"	v
num_lines	misc/parent.py	/^    num_lines = sum(1 for line in open('testlog.txt'))$/;"	v
ob	copg/car_racing/copg_orca.py	/^    ob = objective.mean()$/;"	v
ob	copg/rcvip_racing/copg_orca.py	/^    ob = objective.mean()$/;"	v
ob1	copg/car_racing/gda_orca.py	/^    ob1 = objective.mean()$/;"	v
ob1	copg/rcvip_racing/gda_orca.py	/^    ob1 = objective.mean()$/;"	v
ob2	copg/car_racing/copg_orca.py	/^    ob2 = objective2.sum()\/(objective2.size(0)-batch_size+1)$/;"	v
ob2	copg/car_racing/gda_orca.py	/^    ob2 = objective.mean()$/;"	v
ob2	copg/rcvip_racing/copg_orca.py	/^    ob2 = objective2.sum()\/(objective2.size(0)-batch_size+1)$/;"	v
ob2	copg/rcvip_racing/gda_orca.py	/^    ob2 = objective.mean()$/;"	v
ob3	copg/car_racing/copg_orca.py	/^    ob3 = objective3.sum()\/(objective2.size(0)-batch_size+1)$/;"	v
ob3	copg/rcvip_racing/copg_orca.py	/^    ob3 = objective3.sum()\/(objective2.size(0)-batch_size+1)$/;"	v
objective	copg/car_racing/copg_orca.py	/^    objective = log_probs1*log_probs2*(val1_p)$/;"	v
objective	copg/car_racing/gda_orca.py	/^    objective = -log_probs1 * val1_p.transpose(0,1) # ob.backward will maximise this$/;"	v
objective	copg/car_racing/gda_orca.py	/^    objective = log_probs2 * val1_p.transpose(0,1) # ob.backward will minimise this$/;"	v
objective	copg/rcvip_racing/copg_orca.py	/^    objective = log_probs1*log_probs2*(val1_p)$/;"	v
objective	copg/rcvip_racing/gda_orca.py	/^    objective = -log_probs1 * val1_p.transpose(0,1) # ob.backward will maximise this$/;"	v
objective	copg/rcvip_racing/gda_orca.py	/^    objective = log_probs2 * val1_p.transpose(0,1) # ob.backward will minimise this$/;"	v
objective	misc/cvxpy_test.py	/^objective = cp.Minimize(cp.quad_form(x,np.eye(n)))$/;"	v
objective2	copg/car_racing/copg_orca.py	/^    objective2 = s_log_probs1[1:s_log_probs1.size(0)]*log_probs2[1:log_probs2.size(0)]*(val1_p[0/;"	v
objective2	copg/rcvip_racing/copg_orca.py	/^    objective2 = s_log_probs1[1:s_log_probs1.size(0)]*log_probs2[1:log_probs2.size(0)]*(val1_p[0/;"	v
objective3	copg/car_racing/copg_orca.py	/^    objective3 = log_probs1[1:log_probs1.size(0)]*s_log_probs2[1:s_log_probs2.size(0)]*(val1_p[0/;"	v
objective3	copg/rcvip_racing/copg_orca.py	/^    objective3 = log_probs1[1:log_probs1.size(0)]*s_log_probs2[1:s_log_probs2.size(0)]*(val1_p[0/;"	v
obstacle_count	controller/cvar/cvar_racecar.cu	/^__device__ int obstacle_count;$/;"	v	typeref:typename:int
obstacle_data	util/analyzeBatchExpGrid.py	/^    obstacle_data = np.array(data_dict['obstacle_violation'])$/;"	v
obstacle_radius	controller/cvar/cvar_racecar.cu	/^__device__ float obstacle_radius;$/;"	v	typeref:typename:float
obstacles	controller/cvar/cvar_racecar.cu	/^__device__ float obstacles[MAX_OBSTACLE_COUNT][2];$/;"	v	typeref:typename:float[][2]
ode	sysid/motorModel.py	/^def ode(u,c1,c2):$/;"	f
offset	util/plotTrajectory.py	/^offset = 0$/;"	v
old_alfas	misc/benchmark.py	/^    old_alfas = []$/;"	v
old_betas	misc/benchmark.py	/^    old_betas = []$/;"	v
old_nearest_point_index	copg/car_racing_simulator/pure_pursuit.py	/^old_nearest_point_index = None$/;"	v
oldoldTireCurve	sysid/tire.py	/^def oldoldTireCurve(slip):$/;"	f
oldtireCurve	sysid/tire.py	/^def oldtireCurve(slip):$/;"	f
omega	misc/readlog.py	/^omega = data[:,6]$/;"	v
omega	misc/ukfSysid.py	/^omega = np.hstack([0,np.diff(data[:,3])])\/dt$/;"	v
omega	misc/ukfSysid.py	/^omega = omega[skip:end]$/;"	v
omega	misc/validateHybridModel.py	/^omega = exp_kf_omega$/;"	v
omega	misc/validateHybridModel.py	/^omega = np.hstack([0,np.diff(heading)])\/dt$/;"	v
omega	sysid/readlog.py	/^omega = data[:,6]$/;"	v
op	extension/Optitrack.py	/^    op = _Optitrack(None)$/;"	v
op_id	extension/Optitrack.py	/^            op_id = op.getOptitrackId(i)$/;"	v
optim	copg/car_racing/copg_orca.py	/^optim = CoPG(p1.parameters(),p2.parameters(), lr=3e-5, device=device)$/;"	v
optim	copg/rcvip_racing/copg_orca.py	/^optim = CoPG(p1.parameters(),p2.parameters(), lr=3e-5, device=device)$/;"	v
optim	misc/hybridDynamicSimNew.py	/^import torch.optim as optim$/;"	I	nameref:module:torch.optim
optim	misc/hybridKinematicSim.py	/^import torch.optim as optim$/;"	I	nameref:module:torch.optim
optim	misc/hybridSim.py	/^import torch.optim as optim$/;"	I	nameref:module:torch.optim
optim	misc/sysidTrainDynamicHybridSim.py	/^import torch.optim as optim$/;"	I	nameref:module:torch.optim
optim	misc/sysidTrainDynamicNewHybridSim.py	/^import torch.optim as optim$/;"	I	nameref:module:torch.optim
optim	misc/sysidTrainKinematicHybridSim.py	/^import torch.optim as optim$/;"	I	nameref:module:torch.optim
optim_p1	copg/car_racing/gda_orca.py	/^optim_p1 = torch.optim.SGD(p1.parameters(), 3e-5) # 0.00008$/;"	v
optim_p1	copg/rcvip_racing/gda_orca.py	/^optim_p1 = torch.optim.SGD(p1.parameters(), 3e-5) # 0.00008$/;"	v
optim_p2	copg/car_racing/gda_orca.py	/^optim_p2 = torch.optim.SGD(p2.parameters(), 3e-5) # 0.00008$/;"	v
optim_p2	copg/rcvip_racing/gda_orca.py	/^optim_p2 = torch.optim.SGD(p2.parameters(), 3e-5) # 0.00008$/;"	v
optim_q	copg/car_racing/copg_orca.py	/^optim_q = torch.optim.Adam(q.parameters(), lr=0.008)$/;"	v
optim_q	copg/car_racing/gda_orca.py	/^optim_q = torch.optim.Adam(q.parameters(), 0.008)$/;"	v
optim_q	copg/rcvip_racing/copg_orca.py	/^optim_q = torch.optim.Adam(q.parameters(), lr=0.008)$/;"	v
optim_q	copg/rcvip_racing/gda_orca.py	/^optim_q = torch.optim.Adam(q.parameters(), 0.008)$/;"	v
optimizePath	qpSmooth.py	/^    def optimizePath(self):$/;"	m	class:QpSmooth
optimizeRaceline	track/RCPTrack.py	/^    def optimizeRaceline(self):$/;"	m	class:RCPTrack
optimizer	misc/hybridDynamicSimNew.py	/^    optimizer = optim.Adam(simulator.parameters(), lr=1e-3)$/;"	v
optimizer	misc/hybridKinematicSim.py	/^    optimizer = optim.Adam(simulator.parameters(), lr=1e-3)$/;"	v
optimizer	misc/hybridSim.py	/^    optimizer = optim.Adam(simulator.parameters(), lr=1e-3)$/;"	v
original_config	configGenerator.py	/^original_config = minidom.parse(config_filename)$/;"	v
original_config	configs/noise.py	/^original_config = minidom.parse(config_filename)$/;"	v
out_seq_no	car/Offboard.py	/^    out_seq_no = 0$/;"	v	class:OffboardPacket
out_state_c1	copg/car_racing/results.py	/^    out_state_c1 = state_c1[~remaining_xo]$/;"	v
out_state_c1	copg/rcvip_racing/results.py	/^    out_state_c1 = state_c1[~remaining_xo]$/;"	v
out_state_c1	results.py	/^    out_state_c1 = state_c1[~remaining_xo]$/;"	v
out_state_c2	copg/car_racing/results.py	/^    out_state_c2 = state_c2[~remaining_xo]$/;"	v
out_state_c2	copg/rcvip_racing/results.py	/^    out_state_c2 = state_c2[~remaining_xo]$/;"	v
out_state_c2	results.py	/^    out_state_c2 = state_c2[~remaining_xo]$/;"	v
over_mat	copg/car_racing/results.py	/^over_mat = []$/;"	v
over_mat	copg/rcvip_racing/results.py	/^over_mat = []$/;"	v
over_mat	results.py	/^over_mat = []$/;"	v
overlayCarRendering	extension/Visualization.py	/^    def overlayCarRendering(self,img, car):$/;"	m	class:Visualization
overlayCarRenderingRaw	extension/Visualization.py	/^    def overlayCarRenderingRaw(self,img, car, src):$/;"	m	class:Visualization
overtakings	copg/car_racing/results.py	/^        overtakings = overtakings[remaining_xo]$/;"	v
overtakings	copg/car_racing/results.py	/^    overtakings = overtakings + torch.ones(leading_player.size(0))*(leading_player!=prev_leading/;"	v
overtakings	copg/car_racing/results.py	/^overtakings = torch.zeros((curr_batch_size))$/;"	v
overtakings	copg/rcvip_racing/results.py	/^        overtakings = overtakings[remaining_xo]$/;"	v
overtakings	copg/rcvip_racing/results.py	/^    overtakings = overtakings + torch.ones(leading_player.size(0))*(leading_player!=prev_leading/;"	v
overtakings	copg/rcvip_racing/results.py	/^overtakings = torch.zeros((curr_batch_size))$/;"	v
overtakings	results.py	/^        overtakings = overtakings[remaining_xo]$/;"	v
overtakings	results.py	/^    overtakings = overtakings + torch.ones(leading_player.size(0))*(leading_player!=prev_leading/;"	v
overtakings	results.py	/^overtakings = torch.zeros((curr_batch_size))$/;"	v
overtakings_p1	copg/car_racing/results.py	/^    overtakings_p1 = overtakings_p1  + torch.sum(torch.ones(leading_player.size(0))*overtakings_/;"	v
overtakings_p1	copg/car_racing/results.py	/^overtakings_p1 = 0$/;"	v
overtakings_p1	copg/rcvip_racing/results.py	/^    overtakings_p1 = overtakings_p1  + torch.sum(torch.ones(leading_player.size(0))*overtakings_/;"	v
overtakings_p1	copg/rcvip_racing/results.py	/^overtakings_p1 = 0$/;"	v
overtakings_p1	results.py	/^    overtakings_p1 = overtakings_p1  + torch.sum(torch.ones(leading_player.size(0))*overtakings_/;"	v
overtakings_p1	results.py	/^overtakings_p1 = 0$/;"	v
overtakings_p1_bool	copg/car_racing/results.py	/^    overtakings_p1_bool= (leading_player!=prev_leading_player)*(leading_player==1)$/;"	v
overtakings_p1_bool	copg/rcvip_racing/results.py	/^    overtakings_p1_bool= (leading_player!=prev_leading_player)*(leading_player==1)$/;"	v
overtakings_p1_bool	results.py	/^    overtakings_p1_bool= (leading_player!=prev_leading_player)*(leading_player==1)$/;"	v
overtakings_p2	copg/car_racing/results.py	/^    overtakings_p2 = overtakings_p2  + torch.sum(torch.ones(leading_player.size(0))*overtakings_/;"	v
overtakings_p2	copg/car_racing/results.py	/^overtakings_p2 = 0$/;"	v
overtakings_p2	copg/rcvip_racing/results.py	/^    overtakings_p2 = overtakings_p2  + torch.sum(torch.ones(leading_player.size(0))*overtakings_/;"	v
overtakings_p2	copg/rcvip_racing/results.py	/^overtakings_p2 = 0$/;"	v
overtakings_p2	results.py	/^    overtakings_p2 = overtakings_p2  + torch.sum(torch.ones(leading_player.size(0))*overtakings_/;"	v
overtakings_p2	results.py	/^overtakings_p2 = 0$/;"	v
overtakings_p2_bool	copg/car_racing/results.py	/^    overtakings_p2_bool= (leading_player!=prev_leading_player)*(leading_player==0)$/;"	v
overtakings_p2_bool	copg/rcvip_racing/results.py	/^    overtakings_p2_bool= (leading_player!=prev_leading_player)*(leading_player==0)$/;"	v
overtakings_p2_bool	results.py	/^    overtakings_p2_bool= (leading_player!=prev_leading_player)*(leading_player==0)$/;"	v
p	controller/mppi/toy_examples/dampedBox.py	/^    p = 40$/;"	v
p	sysid/steadyStateThrottle.py	/^p = np.polyfit(T,v,1)$/;"	v
p1	copg/car_racing/copg_orca.py	/^p1 = Actor(10,2, std=0.1).to(device)$/;"	v
p1	copg/car_racing/gda_orca.py	/^p1 = Actor(10,2, std=0.1)$/;"	v
p1	copg/car_racing/results.py	/^p1 = Actor(10, 2, std=0.1)$/;"	v
p1	copg/rcvip_racing/copg_orca.py	/^p1 = Actor(10,2, std=0.1).to(device)$/;"	v
p1	copg/rcvip_racing/gda_orca.py	/^p1 = Actor(10,2, std=0.1)$/;"	v
p1	copg/rcvip_racing/results.py	/^p1 = Actor(10, 2, std=0.1)$/;"	v
p1	results.py	/^p1 = Actor(10, 2, std=0.1)$/;"	v
p2	copg/car_racing/copg_orca.py	/^p2 = Actor(10,2, std=0.1).to(device)$/;"	v
p2	copg/car_racing/gda_orca.py	/^p2 = Actor(10,2, std=0.1)$/;"	v
p2	copg/car_racing/results.py	/^p2 = Actor(10, 2, std=0.1)$/;"	v
p2	copg/rcvip_racing/copg_orca.py	/^p2 = Actor(10,2, std=0.1).to(device)$/;"	v
p2	copg/rcvip_racing/gda_orca.py	/^p2 = Actor(10,2, std=0.1)$/;"	v
p2	copg/rcvip_racing/results.py	/^p2 = Actor(10, 2, std=0.1)$/;"	v
p2	results.py	/^p2 = Actor(10, 2, std=0.1)$/;"	v
packet_size	car/Offboard.py	/^    packet_size = 64$/;"	v	class:OffboardPacket
params	misc/QfDemo.py	/^        params = {'samples':samples, 'algorithm':algorithm,'alfa':alfa,'beta':beta,'Qf':qf}$/;"	v
params	misc/benchmark.py	/^                    params = {'samples':samples, 'algorithm':algorithm,'alfa':alfa,'beta':beta}$/;"	v
params	misc/oneObstacle.py	/^        params = {'samples':samples, 'algorithm':algorithm,'alfa':alfa,'beta':beta}$/;"	v
parsePacket	car/Offboard.py	/^    def parsePacket(self):$/;"	m	class:OffboardPacket
parseResponse	car/Offboard.py	/^    def parseResponse(self,data):$/;"	m	class:Offboard
parser	misc/QfDemo.py	/^    parser = argparse.ArgumentParser()$/;"	v
parser	misc/benchmark.py	/^    parser = argparse.ArgumentParser()$/;"	v
parser	misc/child.py	/^parser = argparse.ArgumentParser()$/;"	v
parser	misc/oneObstacle.py	/^    parser = argparse.ArgumentParser()$/;"	v
path	misc/Qfstudy/QfGif.py	/^    path = ".\/ccmppi_Qf_"+str(i)+".png"$/;"	v
pathGap	track/RCPTrack.py	/^    def pathGap(self,):$/;"	m	class:RCPTrack
pattern	batchRun.py	/^    pattern = '.\/configs\/'+name+'\/exp*.xml'$/;"	v
pickRelevantIndex	planner/Planner.py	/^    def pickRelevantIndex(self,x0):$/;"	m	class:Planner
plan	planner/Planner.py	/^    def plan(self):$/;"	m	class:Planner
planner	planner/Planner.py	/^    planner = Planner()$/;"	v
player1	copg/car_racing/results.py	/^player1 = 'CoPG-420'$/;"	v
player1	copg/rcvip_racing/results.py	/^player1 = 'CoPG-420'$/;"	v
player1	results.py	/^player1 = 'CoPG'$/;"	v
player2	copg/car_racing/results.py	/^player2 = 'CoPG'$/;"	v
player2	copg/rcvip_racing/results.py	/^player2 = 'CoPG'$/;"	v
player2	results.py	/^player2 = 'GDA'$/;"	v
plot	controller/mppi/toy_examples/dampedBox.py	/^    def plot(self,target=None):$/;"	m	class:Box
plot	controller/mppi/toy_examples/dualMass.py	/^    def plot(self):$/;"	m	class:dualMass
plot	controller/mppi/toy_examples/invertedPendulum.py	/^    def plot(self):$/;"	m	class:InvertedPendulum
plot	controller/mppi/toy_examples/mppiJisModel.py	/^    def plot(self):$/;"	m	class:Model
plot	copg/rcvip_racing/trackTest.py	/^    def plot(self):$/;"	m	class:Test
plot	misc/cs_test.py	/^def plot(states, controls, sim_length):$/;"	f
plotAcc	sysid/motorModel.py	/^def plotAcc(filename):$/;"	f
plotAcc2	sysid/motorModel.py	/^def plotAcc2(filename):$/;"	f
plotAlgorithm	controller/ccmppi/CcmppiCarController.py	/^    def plotAlgorithm(self):$/;"	m	class:CcmppiCarController
plotAlgorithm	controller/ccmppi/oldCcmppi.py	/^    def plotAlgorithm(self):$/;"	m	class:CcmppiCarController
plotAllSolutions	planner/Planner.py	/^    def plotAllSolutions(self):$/;"	m	class:Planner
plotCar	planner/Planner.py	/^    def plotCar(self,x):$/;"	m	class:Planner
plotConfidenceEllipse	controller/ccmppi/ccmppi_dynamic.py	/^    def plotConfidenceEllipse(self, ax, mean, cov_matrix, color='red'):$/;"	m	class:CCMPPI_DYNAMIC
plotConfidenceEllipse	controller/ccmppi/ccmppi_kinematic.py	/^    def plotConfidenceEllipse(self, ax, mean, cov_matrix, color='red'):$/;"	m	class:CCMPPI_KINEMATIC
plotDataset	misc/sysidDataloader.py	/^    def plotDataset(self):$/;"	m	class:CarDataset
plotDebug	controller/ccmppi/CcmppiCarController.py	/^    def plotDebug(self):$/;"	m	class:CcmppiCarController
plotDebug	controller/ccmppi/oldCcmppi.py	/^    def plotDebug(self):$/;"	m	class:CcmppiCarController
plotFile	misc/plotCollisionVsLaptime.py	/^def plotFile(filename,marker,label):$/;"	f
plotLapCount	extension/LapCounter.py	/^    def plotLapCount(self,car):$/;"	m	class:LapCounter
plotObstacles	controller/ccmppi/CcmppiCarController.py	/^    def plotObstacles(self):$/;"	m	class:CcmppiCarController
plotObstacles	controller/ccmppi/oldCcmppi.py	/^    def plotObstacles(self):$/;"	m	class:CcmppiCarController
plotOpponent	planner/Planner.py	/^    def plotOpponent(self,opponent_state):$/;"	m	class:Planner
plotRelation	sysid/slipAngle.py	/^def plotRelation():$/;"	f
plotSolutions	planner/Planner.py	/^    def plotSolutions(self,sols,color=(255,51,204)):$/;"	m	class:Planner
plotSolutionsPoint	planner/Planner.py	/^    def plotSolutionsPoint(self,sols,color=(255,51,204)):$/;"	m	class:Planner
plotStateTraj	planner/Planner.py	/^    def plotStateTraj(self,traj):$/;"	m	class:Planner
plotTrack	planner/Planner.py	/^    def plotTrack(self):$/;"	m	class:Planner
plotTraj	misc/plotAllTrajectory.py	/^def plotTraj(track, filename, img, color, text):$/;"	f
plotTraj	misc/plotFrontier.py	/^def plotTraj(track, filename, img, color, text):$/;"	f
plotTraj	misc/plotSingleTrajectory.py	/^def plotTraj(track, filename, img, color):$/;"	f
plotTraj	util/plotTrajectory.py	/^def plotTraj(track, filename, img, color, text):$/;"	f
plotTrajectory	controller/CarController.py	/^    def plotTrajectory(self,trajectory):$/;"	m	class:CarController
plot_arrow	copg/car_racing_simulator/pure_pursuit.py	/^def plot_arrow(x, y, yaw, length=1.0, width=0.5, fc="r", ec="k"):$/;"	f
plt	controller/PurePursuitCarController.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	controller/ccmppi/CcmppiCarController.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	controller/ccmppi/ccmppi.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	controller/ccmppi/ccmppi_dynamic.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	controller/ccmppi/ccmppi_kinematic.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	controller/ccmppi/curand.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	controller/ccmppi/oldCcmppi.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	controller/cvar/CvarCarController.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	controller/mppi/MppiCarController.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	controller/mppi/cost_visualization.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	controller/mppi/toy_examples/curand.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	controller/mppi/toy_examples/dampedBox.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	controller/mppi/toy_examples/dualMass.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	controller/mppi/toy_examples/invertedPendulum.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	controller/mppi/toy_examples/mppiJisModel.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	copg/car_racing_simulator/cpg_main.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	copg/car_racing_simulator/main.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	copg/car_racing_simulator/pure_pursuit.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	copg/rcvip_racing/trackTest.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	extension/Gifsaver.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	extension/SnapshotSaver.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	extension/SteeringTuner.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	extension/Visualization.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	extension/simulator/DynamicSimulator.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/advCarSim.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/cs_test.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/ctrlMppiWrapper.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/ethCarSim.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/getThrustCurve.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/laptime.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/linearizeDynamics.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/mpc.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/oldkinematicSimulator.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/plotAllTrajectory.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/plotCollisionVsLaptime.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/plotComparison.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/plotCov.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/plotFrontier.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/plotSingleTrajectory.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/read_mppi_ccmppi_log.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/readlog.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/sysidDataloader.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/sysidTrainDynamicHybridSim.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/sysidTrainDynamicNewHybridSim.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/sysidTrainKinematicHybridSim.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/throttle_model.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/ukf.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/ukfSysid.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	misc/validateHybridModel.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	planner/MPC.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	planner/Planner.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	planner/old_MPC.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	qpSmooth.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	sysid/fitThrottle.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	sysid/meet.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	sysid/motorModel.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	sysid/readlog.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	sysid/slipAngle.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	sysid/steadyStateThrottle.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	sysid/steeringSysid.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	sysid/tire.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	sysid/torsionPendulum.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	sysid/validateModel.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	track/RCPTrack.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	track/Skidpad.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	util/analyzeBatchExpGrid.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	util/kalmanFilter.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
plt	util/plotTrajectory.py	/^import matplotlib.pyplot as plt$/;"	I	nameref:module:matplotlib.pyplot
populate_params	misc/cs_solver.py	/^    def populate_params(self, A, B, d, D, mu_0, sigma_0, sigma_N_inv, Q_bar, R_bar, u_0, x_targe/;"	m	class:CSSolver
populate_params	misc/cs_solver_covariance_only.py	/^    def populate_params(self, A, B, d, D, mu_0, sigma_0, sigma_N_inv, Q_bar, R_bar, u_0, x_targe/;"	m	class:CSSolver
posAtIndex	copg/car_racing_simulator/Track.py	/^    def posAtIndex(self, i):$/;"	m	class:Track
postFinal	extension/ConfigLogger.py	/^    def postFinal(self):$/;"	m	class:ConfigLogger
postFinal	extension/Extension.py	/^    def postFinal(self):$/;"	m	class:Extension
postFinal	extension/Logger.py	/^    def postFinal(self):$/;"	m	class:Logger
postInit	extension/BoundaryChecker.py	/^    def postInit(self):$/;"	m	class:BoundaryChecker
postInit	extension/Extension.py	/^    def postInit(self):$/;"	m	class:Extension
postInit	extension/SnapshotSaver.py	/^    def postInit(self):$/;"	m	class:SnapshotSaver
postInit	extension/Visualization.py	/^    def postInit(self,):$/;"	m	class:Visualization
postUpdate	extension/Extension.py	/^    def postUpdate(self):$/;"	m	class:Extension
postUpdate	extension/Gifsaver.py	/^    def postUpdate(self):$/;"	m	class:Gifsaver
postUpdate	extension/PerformanceTracker.py	/^    def postUpdate(self):$/;"	m	class:PerformanceTracker
postUpdate	extension/SnapshotSaver.py	/^    def postUpdate(self):$/;"	m	class:SnapshotSaver
postUpdate	extension/Visualization.py	/^    def postUpdate(self,):$/;"	m	class:Visualization
postUpdate	extension/Watchdog.py	/^    def postUpdate(self):$/;"	m	class:Watchdog
ppo_update	copg/car_racing/orca_env_function.py	/^def ppo_update(state_mat, action_mat, log_probs, returns, advantage_mat, clip_param, num_ppo_epo/;"	f
ppo_update	copg/rcvip_racing/orca_env_function.py	/^def ppo_update(state_mat, action_mat, log_probs, returns, advantage_mat, clip_param, num_ppo_epo/;"	f
preFinal	extension/Extension.py	/^    def preFinal(self):$/;"	m	class:Extension
preUpdate	extension/Extension.py	/^    def preUpdate(self):$/;"	m	class:Extension
preUpdate	extension/Visualization.py	/^    def preUpdate(self,):$/;"	m	class:Visualization
preciseTrackBoundary	track/RCPTrack.py	/^    def preciseTrackBoundary(self,coord,heading):$/;"	m	class:RCPTrack
predict	controller/CarController.py	/^    def predict(self):$/;"	m	class:CarController
predict	misc/ukf.py	/^    def predict(self, state, state_cov, control, dt):$/;"	m	class:UKF
predict	util/kalmanFilter.py	/^    def predict(self,action,timestamp=None):$/;"	m	class:KalmanFilter
predictOpponent	controller/ccmppi/CcmppiCarController.py	/^    def predictOpponent(self):$/;"	m	class:CcmppiCarController
predictOpponent	controller/ccmppi/oldCcmppi.py	/^    def predictOpponent(self):$/;"	m	class:CcmppiCarController
predictOpponent	misc/ctrlMppiWrapper.py	/^    def predictOpponent(self):$/;"	m	class:ctrlMppiWrapper
predictOpponent	track/RCPTrack.py	/^    def predictOpponent(self, state, p, dt, reverse=False):$/;"	m	class:RCPTrack
predicted_acc	sysid/fitThrottle.py	/^    predicted_acc = getLongitudinalAcc(state,throttle[i],steering[i])$/;"	v
predicted_state	misc/hybridDynamicSimNew.py	/^        predicted_state = simulator(full_states,actions,True)$/;"	v
predicted_state	misc/hybridKinematicSim.py	/^        predicted_state = simulator(full_states,actions,True)$/;"	v
predicted_state	misc/hybridSim.py	/^        predicted_state = simulator(full_states,actions)$/;"	v
prefix	common.py	/^    def prefix(self):$/;"	m	class:PrintObject
prepLog	sysid/meet.py	/^def prepLog(log,skip=1):$/;"	f
prepLog	sysid/motorModel.py	/^def prepLog(log,skip=1):$/;"	f
prepLog	sysid/slipAngle.py	/^def prepLog(log,skip=1):$/;"	f
prepLog	sysid/validateModel.py	/^def prepLog(log,skip=1):$/;"	f
prepareCommandPacket	car/Offboard.py	/^    def prepareCommandPacket(self,throttle=0.0,steering=0.0):$/;"	m	class:Offboard
prepareDiscretizedRaceline	controller/ccmppi/CcmppiCarController.py	/^    def prepareDiscretizedRaceline(self):$/;"	m	class:CcmppiCarController
prepareDiscretizedRaceline	controller/ccmppi/oldCcmppi.py	/^    def prepareDiscretizedRaceline(self):$/;"	m	class:CcmppiCarController
prepareDiscretizedRaceline	controller/cvar/CvarCarController.py	/^    def prepareDiscretizedRaceline(self):$/;"	m	class:CvarCarController
prepareDiscretizedRaceline	misc/ctrlMppiWrapper.py	/^    def prepareDiscretizedRaceline(self):$/;"	m	class:ctrlMppiWrapper
prepareDiscretizedRaceline	track/Track.py	/^    def prepareDiscretizedRaceline(self):$/;"	m	class:Track
prepareEmptyTrack	track/TrackFactory.py	/^def prepareEmptyTrack(config):$/;"	f
prepareGif	extension/Gifsaver.py	/^    def prepareGif(self):$/;"	m	class:Gifsaver
prepareGif	extension/TrajectoryPlotter.py	/^    def prepareGif(self):$/;"	m	class:TrajectoryPlotter
prepareParameterRequestPacket	car/Offboard.py	/^    def prepareParameterRequestPacket(self):$/;"	m	class:Offboard
preparePingPacket	car/Offboard.py	/^    def preparePingPacket(self):$/;"	m	class:Offboard
prepareRcpTrack	track/TrackFactory.py	/^def prepareRcpTrack(config):$/;"	f
prepareRcpTrackSmall	track/TrackFactory.py	/^def prepareRcpTrackSmall(config):$/;"	f
prepareSkidpad	track/TrackFactory.py	/^def prepareSkidpad(config):$/;"	f
prepareTrack	track/RCPTrack.py	/^    def prepareTrack(self,):$/;"	m	class:RCPTrack
prepare_data	misc/throttle_model.py	/^def prepare_data():$/;"	f
prev_coll_c1	copg/car_racing/copg_orca.py	/^        prev_coll_c1 = coll_c1[remaining_xo]#removing elements that died$/;"	v
prev_coll_c1	copg/car_racing/copg_orca.py	/^    prev_coll_c1 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
prev_coll_c1	copg/car_racing/gda_orca.py	/^        prev_coll_c1 = coll_c1[remaining_xo]#removing elements that died$/;"	v
prev_coll_c1	copg/car_racing/gda_orca.py	/^    prev_coll_c1 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
prev_coll_c1	copg/car_racing/results.py	/^prev_coll_c1 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
prev_coll_c1	copg/rcvip_racing/copg_orca.py	/^        prev_coll_c1 = coll_c1[remaining_xo]#removing elements that died$/;"	v
prev_coll_c1	copg/rcvip_racing/copg_orca.py	/^    prev_coll_c1 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
prev_coll_c1	copg/rcvip_racing/gda_orca.py	/^        prev_coll_c1 = coll_c1[remaining_xo]#removing elements that died$/;"	v
prev_coll_c1	copg/rcvip_racing/gda_orca.py	/^    prev_coll_c1 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
prev_coll_c1	copg/rcvip_racing/results.py	/^prev_coll_c1 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
prev_coll_c1	results.py	/^prev_coll_c1 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
prev_coll_c2	copg/car_racing/copg_orca.py	/^        prev_coll_c2 = coll_c2[remaining_xo]#removing elements that died$/;"	v
prev_coll_c2	copg/car_racing/copg_orca.py	/^    prev_coll_c2 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
prev_coll_c2	copg/car_racing/gda_orca.py	/^        prev_coll_c2 = coll_c2[remaining_xo]#removing elements that died$/;"	v
prev_coll_c2	copg/car_racing/gda_orca.py	/^    prev_coll_c2 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
prev_coll_c2	copg/car_racing/results.py	/^prev_coll_c2 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
prev_coll_c2	copg/rcvip_racing/copg_orca.py	/^        prev_coll_c2 = coll_c2[remaining_xo]#removing elements that died$/;"	v
prev_coll_c2	copg/rcvip_racing/copg_orca.py	/^    prev_coll_c2 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
prev_coll_c2	copg/rcvip_racing/gda_orca.py	/^        prev_coll_c2 = coll_c2[remaining_xo]#removing elements that died$/;"	v
prev_coll_c2	copg/rcvip_racing/gda_orca.py	/^    prev_coll_c2 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
prev_coll_c2	copg/rcvip_racing/results.py	/^prev_coll_c2 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
prev_coll_c2	results.py	/^prev_coll_c2 = torch.zeros((curr_batch_size)) <= -0.1$/;"	v
prev_leading_player	copg/car_racing/results.py	/^    prev_leading_player = leading_player[remaining_xo]$/;"	v
prev_leading_player	copg/car_racing/results.py	/^prev_leading_player = torch.cat([torch.zeros(int(curr_batch_size\/2)) <= 0.1,torch.zeros(int(cur/;"	v
prev_leading_player	copg/rcvip_racing/results.py	/^    prev_leading_player = leading_player[remaining_xo]$/;"	v
prev_leading_player	copg/rcvip_racing/results.py	/^prev_leading_player = torch.cat([torch.zeros(int(curr_batch_size\/2)) <= 0.1,torch.zeros(int(cur/;"	v
prev_leading_player	results.py	/^    prev_leading_player = leading_player[remaining_xo]$/;"	v
prev_leading_player	results.py	/^prev_leading_player = torch.cat([torch.zeros(int(curr_batch_size\/2)) <= 0.1,torch.zeros(int(cur/;"	v
prev_size	copg/car_racing/copg_orca.py	/^            prev_size = batch_mat_state1.size(0)$/;"	v
prev_size	copg/car_racing/gda_orca.py	/^            prev_size = batch_mat_state1.size(0)$/;"	v
prev_size	copg/rcvip_racing/copg_orca.py	/^            prev_size = batch_mat_state1.size(0)$/;"	v
prev_size	copg/rcvip_racing/gda_orca.py	/^            prev_size = batch_mat_state1.size(0)$/;"	v
prev_state_c1	copg/car_racing/copg_orca.py	/^        prev_state_c1 = state_c1$/;"	v
prev_state_c1	copg/car_racing/gda_orca.py	/^        prev_state_c1 = state_c1$/;"	v
prev_state_c1	copg/car_racing/results.py	/^    prev_state_c1 = state_c1$/;"	v
prev_state_c1	copg/rcvip_racing/copg_orca.py	/^        prev_state_c1 = state_c1$/;"	v
prev_state_c1	copg/rcvip_racing/gda_orca.py	/^        prev_state_c1 = state_c1$/;"	v
prev_state_c1	copg/rcvip_racing/results.py	/^    prev_state_c1 = state_c1$/;"	v
prev_state_c1	results.py	/^    prev_state_c1 = state_c1$/;"	v
prev_state_c2	copg/car_racing/copg_orca.py	/^        prev_state_c2 = state_c2$/;"	v
prev_state_c2	copg/car_racing/gda_orca.py	/^        prev_state_c2 = state_c2$/;"	v
prev_state_c2	copg/car_racing/results.py	/^    prev_state_c2 = state_c2$/;"	v
prev_state_c2	copg/rcvip_racing/copg_orca.py	/^        prev_state_c2 = state_c2$/;"	v
prev_state_c2	copg/rcvip_racing/gda_orca.py	/^        prev_state_c2 = state_c2$/;"	v
prev_state_c2	copg/rcvip_racing/results.py	/^    prev_state_c2 = state_c2$/;"	v
prev_state_c2	results.py	/^    prev_state_c2 = state_c2$/;"	v
print_debug	common.py	/^    def print_debug(self, *message):$/;"	m	class:PrintObject
print_debug_disable	common.py	/^    def print_debug_disable(self):$/;"	m	class:PrintObject
print_debug_enable	common.py	/^    def print_debug_enable(self):$/;"	m	class:PrintObject
print_error	common.py	/^    def print_error(self, *message):$/;"	m	class:PrintObject
print_error	common.py	/^def print_error(*message):$/;"	f
print_info	common.py	/^    def print_info(self, *message):$/;"	m	class:PrintObject
print_info	common.py	/^def print_info(*message):$/;"	f
print_matrix	controller/ccmppi/ccmppi.cu	/^void print_matrix(float* mtx, int m, int n, char* text){$/;"	f	typeref:typename:void
print_ok	common.py	/^    def print_ok(self, *message):$/;"	m	class:PrintObject
print_ok	common.py	/^def print_ok(*message):$/;"	f
print_warning	common.py	/^    def print_warning(self, *message):$/;"	m	class:PrintObject
print_warning	common.py	/^def print_warning(*message):$/;"	f
prob	misc/cvxpy_test.py	/^prob = cp.Problem(objective, constraints)$/;"	v
process	misc/nanny.py	/^    process = subprocess.Popen(command, shell=True, stdout=None)$/;"	v
process	misc/nanny.py	/^process = subprocess.Popen(command, shell=True, stdout=None)$/;"	v
process	misc/parent.py	/^    process = subprocess.Popen(command, shell=True, stdout=None)$/;"	v
process	misc/parent.py	/^process = subprocess.Popen(command, shell=True, stdout=None)$/;"	v
progress_done1	copg/car_racing/copg_orca.py	/^                progress_done1 = 0$/;"	v
progress_done1	copg/car_racing/copg_orca.py	/^                progress_done1 = progress_done1 + torch.sum(mat_state1.transpose(0, 1)[~remainin/;"	v
progress_done1	copg/car_racing/copg_orca.py	/^                progress_done1 = progress_done1$/;"	v
progress_done1	copg/car_racing/copg_orca.py	/^                progress_done1 = torch.sum(mat_state1.transpose(0, 1)[~remaining_xo][:,mat_state/;"	v
progress_done1	copg/car_racing/gda_orca.py	/^                progress_done1 = 0$/;"	v
progress_done1	copg/car_racing/gda_orca.py	/^                progress_done1 = progress_done1 + torch.sum(mat_state1.transpose(0, 1)[~remainin/;"	v
progress_done1	copg/car_racing/gda_orca.py	/^                progress_done1 = progress_done1$/;"	v
progress_done1	copg/car_racing/gda_orca.py	/^                progress_done1 = torch.sum(mat_state1.transpose(0, 1)[~remaining_xo][:,mat_state/;"	v
progress_done1	copg/rcvip_racing/copg_orca.py	/^                progress_done1 = 0$/;"	v
progress_done1	copg/rcvip_racing/copg_orca.py	/^                progress_done1 = progress_done1 + torch.sum(mat_state1.transpose(0, 1)[~remainin/;"	v
progress_done1	copg/rcvip_racing/copg_orca.py	/^                progress_done1 = progress_done1$/;"	v
progress_done1	copg/rcvip_racing/copg_orca.py	/^                progress_done1 = torch.sum(mat_state1.transpose(0, 1)[~remaining_xo][:,mat_state/;"	v
progress_done1	copg/rcvip_racing/gda_orca.py	/^                progress_done1 = 0$/;"	v
progress_done1	copg/rcvip_racing/gda_orca.py	/^                progress_done1 = progress_done1 + torch.sum(mat_state1.transpose(0, 1)[~remainin/;"	v
progress_done1	copg/rcvip_racing/gda_orca.py	/^                progress_done1 = progress_done1$/;"	v
progress_done1	copg/rcvip_racing/gda_orca.py	/^                progress_done1 = torch.sum(mat_state1.transpose(0, 1)[~remaining_xo][:,mat_state/;"	v
progress_done2	copg/car_racing/copg_orca.py	/^                progress_done2 = progress_done2 + torch.sum(mat_state2.transpose(0, 1)[:, mat_st/;"	v
progress_done2	copg/car_racing/copg_orca.py	/^                progress_done2 = progress_done2 + torch.sum(mat_state2.transpose(0, 1)[~remainin/;"	v
progress_done2	copg/car_racing/copg_orca.py	/^                progress_done2 = progress_done2$/;"	v
progress_done2	copg/car_racing/copg_orca.py	/^                progress_done2 = torch.sum(mat_state2.transpose(0, 1)[~remaining_xo][:,mat_state/;"	v
progress_done2	copg/car_racing/copg_orca.py	/^                progress_done2 =0$/;"	v
progress_done2	copg/car_racing/gda_orca.py	/^                progress_done2 = progress_done2 + torch.sum(mat_state2.transpose(0, 1)[:, mat_st/;"	v
progress_done2	copg/car_racing/gda_orca.py	/^                progress_done2 = progress_done2 + torch.sum(mat_state2.transpose(0, 1)[~remainin/;"	v
progress_done2	copg/car_racing/gda_orca.py	/^                progress_done2 = progress_done2$/;"	v
progress_done2	copg/car_racing/gda_orca.py	/^                progress_done2 = torch.sum(mat_state2.transpose(0, 1)[~remaining_xo][:,mat_state/;"	v
progress_done2	copg/car_racing/gda_orca.py	/^                progress_done2 =0$/;"	v
progress_done2	copg/rcvip_racing/copg_orca.py	/^                progress_done2 = progress_done2 + torch.sum(mat_state2.transpose(0, 1)[:, mat_st/;"	v
progress_done2	copg/rcvip_racing/copg_orca.py	/^                progress_done2 = progress_done2 + torch.sum(mat_state2.transpose(0, 1)[~remainin/;"	v
progress_done2	copg/rcvip_racing/copg_orca.py	/^                progress_done2 = progress_done2$/;"	v
progress_done2	copg/rcvip_racing/copg_orca.py	/^                progress_done2 = torch.sum(mat_state2.transpose(0, 1)[~remaining_xo][:,mat_state/;"	v
progress_done2	copg/rcvip_racing/copg_orca.py	/^                progress_done2 =0$/;"	v
progress_done2	copg/rcvip_racing/gda_orca.py	/^                progress_done2 = progress_done2 + torch.sum(mat_state2.transpose(0, 1)[:, mat_st/;"	v
progress_done2	copg/rcvip_racing/gda_orca.py	/^                progress_done2 = progress_done2 + torch.sum(mat_state2.transpose(0, 1)[~remainin/;"	v
progress_done2	copg/rcvip_racing/gda_orca.py	/^                progress_done2 = progress_done2$/;"	v
progress_done2	copg/rcvip_racing/gda_orca.py	/^                progress_done2 = torch.sum(mat_state2.transpose(0, 1)[~remaining_xo][:,mat_state/;"	v
progress_done2	copg/rcvip_racing/gda_orca.py	/^                progress_done2 =0$/;"	v
pure_pursuit_control	copg/car_racing_simulator/pure_pursuit.py	/^def pure_pursuit_control(state, cx, cy, pind):$/;"	f
q	copg/car_racing/copg_orca.py	/^q = Critic(10).to(device)$/;"	v
q	copg/car_racing/gda_orca.py	/^q = Critic(10)$/;"	v
q	copg/rcvip_racing/copg_orca.py	/^q = Critic(10).to(device)$/;"	v
q	copg/rcvip_racing/gda_orca.py	/^q = Critic(10)$/;"	v
q2R	misc/tf.py	/^    def q2R(self,q):$/;"	m	class:TF
q2euler	misc/tf.py	/^    def q2euler(self,q):$/;"	m	class:TF
qp	qpSmooth.py	/^    qp = QpSmooth()$/;"	v
quit	car/Offboard.py	/^    def quit(self):$/;"	m	class:Offboard
quit	extension/Optitrack.py	/^    def quit(self):$/;"	m	class:_Optitrack
quit	misc/joystick.py	/^    def quit(self):$/;"	m	class:Joystick
r	misc/rpy.py	/^r = Rotation.from_euler("ZYX",[180,0,90],degrees=True)$/;"	v
raceline	controller/cvar/cvar_racecar.cu	/^__device__ float raceline[RACELINE_LEN][RACELINE_DIM];$/;"	v	typeref:typename:float[][]
raceline	controller/mppi/mppi_racecar.cu	/^__device__ float raceline[RACELINE_LEN][RACELINE_DIM];$/;"	v	typeref:typename:float[][]
rand_vals	controller/ccmppi/curand.py	/^    rand_vals = drv.from_device(device_rand_vals,shape=(K*T*m,), dtype=np.float32)$/;"	v
rand_vals	controller/ccmppi/curand.py	/^    rand_vals = np.random.normal(size=(K,T,m))$/;"	v
rand_vals	controller/ccmppi/curand.py	/^rand_vals = np.zeros(K*T*m, dtype=np.float32)$/;"	v
rand_vals	controller/mppi/toy_examples/curand.py	/^    rand_vals = drv.from_device(device_rand_vals,shape=(K*T*m,), dtype=np.float32)$/;"	v
rand_vals	controller/mppi/toy_examples/curand.py	/^    rand_vals = np.random.normal(size=(K,T,m))$/;"	v
rand_vals	controller/mppi/toy_examples/curand.py	/^rand_vals = np.zeros(K*T*m, dtype=np.float32)$/;"	v
randomInput	misc/oldkinematicSimulator.py	/^    def randomInput(self):$/;"	m	class:kinematicSimulator
ratio	controller/ccmppi/ccmppi_dynamic.py	/^    ratio = 1.0$/;"	v
rawlog	sysid/meet.py	/^rawlog = loadLog(filename)$/;"	v
receiveNewFrame	misc/PythonSample.py	/^def receiveNewFrame( frameNumber, markerSetCount, unlabeledMarkersCount, rigidBodyCount, skeleto/;"	f
receiveRigidBodyFrame	extension/Optitrack.py	/^    def receiveRigidBodyFrame(self, optitrack_id, position, rotation ):$/;"	m	class:_Optitrack
receiveRigidBodyFrame	misc/PythonSample.py	/^def receiveRigidBodyFrame( id, position, rotation ):$/;"	f
receiveRigidBodyFrameInit	extension/Optitrack.py	/^    def receiveRigidBodyFrameInit( self, optitrack_id, position, rotation ):$/;"	m	class:_Optitrack
reconstructRaceline	track/RCPTrack.py	/^    def reconstructRaceline(self):$/;"	m	class:RCPTrack
reframe	misc/tf.py	/^    def reframe(self,T, B):$/;"	m	class:TF
reframeR	misc/tf.py	/^    def reframeR(self,T, x,y,z,R):$/;"	m	class:TF
remaining_xo	copg/car_racing/copg_orca.py	/^        remaining_xo = ~done$/;"	v
remaining_xo	copg/car_racing/gda_orca.py	/^        remaining_xo = ~done$/;"	v
remaining_xo	copg/car_racing/results.py	/^    remaining_xo = ~done$/;"	v
remaining_xo	copg/rcvip_racing/copg_orca.py	/^        remaining_xo = ~done$/;"	v
remaining_xo	copg/rcvip_racing/gda_orca.py	/^        remaining_xo = ~done$/;"	v
remaining_xo	copg/rcvip_racing/results.py	/^    remaining_xo = ~done$/;"	v
remaining_xo	results.py	/^    remaining_xo = ~done$/;"	v
requestQuit	third_party/NatNetClient.py	/^    def requestQuit(self):$/;"	m	class:NatNetClient
res	misc/laptime.py	/^    res = minimize(getLaptime,adjustment,args=(mk103,start_grid,start_dir,start_seqno),method='S/;"	v
res	sysid/steeringSysid.py	/^res = minimize(first_order, [0.2], args=(commanded_steering, measured_steering_smooth))$/;"	v
resamplePath	qpSmooth.py	/^    def resamplePath(self,new_n):$/;"	m	class:QpSmooth
reset	car/Car.py	/^    def reset(cls):$/;"	m	class:Car
resolveLogname	extension/Gifsaver.py	/^    def resolveLogname(self,):$/;"	m	class:Gifsaver
resolveLogname	extension/Logger.py	/^    def resolveLogname(self,):$/;"	m	class:Logger
resolveLogname	extension/TrajectoryPlotter.py	/^    def resolveLogname(self,):$/;"	m	class:TrajectoryPlotter
resolveLogname	track/RCPTrack.py	/^    def resolveLogname(self,):$/;"	m	class:RCPTrack
returns1	copg/car_racing/copg_orca.py	/^    returns1 = torch.cat(returns_np1)$/;"	v
returns1	copg/car_racing/gda_orca.py	/^    returns1 = torch.cat(returns_np1)$/;"	v
returns1	copg/rcvip_racing/copg_orca.py	/^    returns1 = torch.cat(returns_np1)$/;"	v
returns1	copg/rcvip_racing/gda_orca.py	/^    returns1 = torch.cat(returns_np1)$/;"	v
returns1_gpu	copg/car_racing/copg_orca.py	/^    returns1_gpu = returns1.view(-1, 1).to(device)$/;"	v
returns1_gpu	copg/car_racing/gda_orca.py	/^    returns1_gpu = returns1.view(-1, 1).to(device)$/;"	v
returns1_gpu	copg/rcvip_racing/copg_orca.py	/^    returns1_gpu = returns1.view(-1, 1).to(device)$/;"	v
returns1_gpu	copg/rcvip_racing/gda_orca.py	/^    returns1_gpu = returns1.view(-1, 1).to(device)$/;"	v
returns_np1	copg/car_racing/copg_orca.py	/^    returns_np1 = get_advantage(next_value, batch_mat_reward1, val1, batch_mat_done, gamma=0.99,/;"	v
returns_np1	copg/car_racing/gda_orca.py	/^    returns_np1 = get_advantage(next_value, batch_mat_reward1, val1, batch_mat_done, gamma=0.99,/;"	v
returns_np1	copg/rcvip_racing/copg_orca.py	/^    returns_np1 = get_advantage(next_value, batch_mat_reward1, val1, batch_mat_done, gamma=0.99,/;"	v
returns_np1	copg/rcvip_racing/gda_orca.py	/^    returns_np1 = get_advantage(next_value, batch_mat_reward1, val1, batch_mat_done, gamma=0.99,/;"	v
reward1	copg/car_racing/copg_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
reward1	copg/car_racing/gda_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
reward1	copg/car_racing/results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
reward1	copg/rcvip_racing/copg_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
reward1	copg/rcvip_racing/fun.py	/^reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTimecollosio/;"	v
reward1	copg/rcvip_racing/gda_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
reward1	copg/rcvip_racing/results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
reward1	results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
reward2	copg/car_racing/copg_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
reward2	copg/car_racing/gda_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
reward2	copg/car_racing/results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
reward2	copg/rcvip_racing/copg_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
reward2	copg/rcvip_racing/fun.py	/^reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTimecollosio/;"	v
reward2	copg/rcvip_racing/gda_orca.py	/^        reward1, reward2, done_c1, done_c2, coll_c1, coll_c2, counter1, counter2 = getfreezeTime/;"	v
reward2	copg/rcvip_racing/results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
reward2	results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
right	track/RCPTrack.py	/^        right = lambda x,y : [(x+1)*self.scale,(y+0.5)*self.scale]$/;"	f	member:RCPTrack.initRaceline	file:
run	controller/mppi/toy_examples/mppiJisModel.py	/^    def run(self):$/;"	m	class:Model
run	misc/QfDemo.py	/^    def run(self):$/;"	m	class:Main
run	misc/benchmark.py	/^    def run(self):$/;"	m	class:Main
run	misc/oldkinematicSimulator.py	/^def run(steps):$/;"	f
run	misc/oneObstacle.py	/^    def run(self):$/;"	m	class:Main
run	misc/validateHybridModel.py	/^def run():$/;"	f
run	run.py	/^    def run(self):$/;"	m	class:Main
run	sysid/torsionPendulum.py	/^    def run(self):$/;"	m	class:TorsionPendulum
run	sysid/validateModel.py	/^def run():$/;"	f
run	third_party/NatNetClient.py	/^    def run( self ):$/;"	m	class:NatNetClient
run_full_model	misc/throttle_model.py	/^def run_full_model():$/;"	f
run_model	misc/throttle_model.py	/^def run_model():$/;"	f
run_simple_controller	misc/cs_test.py	/^def run_simple_controller():$/;"	f
run_ukf	misc/ukfSysid.py	/^def run_ukf():$/;"	f
rx	extension/Optitrack.py	/^            x,y,z,rx,ry,rz = op.getState(i)$/;"	v
ry	extension/Optitrack.py	/^            x,y,z,rx,ry,rz = op.getState(i)$/;"	v
rz	extension/Optitrack.py	/^            x,y,z,rx,ry,rz = op.getState(i)$/;"	v
s	controller/mppi/toy_examples/cudaMppiTest.py	/^    s = 0$/;"	v
s	controller/mppi/toy_examples/cudaMppiTest.py	/^s = 0$/;"	v
s	util/timeUtil.py	/^    def s(self, n=None):$/;"	m	class:execution_timer
s_log_probs1	copg/car_racing/copg_orca.py	/^    s_log_probs1 = log_probs1[0:log_probs1.size(0)].clone() # otherwise it doesn't change values$/;"	v
s_log_probs1	copg/rcvip_racing/copg_orca.py	/^    s_log_probs1 = log_probs1[0:log_probs1.size(0)].clone() # otherwise it doesn't change values$/;"	v
s_log_probs2	copg/car_racing/copg_orca.py	/^    s_log_probs2 = log_probs2[0:log_probs2.size(0)].clone()$/;"	v
s_log_probs2	copg/rcvip_racing/copg_orca.py	/^    s_log_probs2 = log_probs2[0:log_probs2.size(0)].clone()$/;"	v
sample_count	controller/mppi/toy_examples/cudaMppiTest.py	/^sample_count = 1024$/;"	v
sampled_control_noise	controller/cvar/cvar_racecar.cu	/^__device__ float sampled_control_noise[SAMPLE_COUNT*HORIZON*CONTROL_DIM];$/;"	v	typeref:typename:float[]
sampled_noise	controller/mppi/mppi_racecar.cu	/^__device__ float sampled_noise[SAMPLE_COUNT*HORIZON*CONTROL_DIM];$/;"	v	typeref:typename:float[]
sampled_state_noise	controller/cvar/cvar_racecar.cu	/^__device__ float sampled_state_noise[SUBSAMPLE_COUNT*SAMPLE_COUNT*HORIZON*STATE_DIM];$/;"	v	typeref:typename:float[]
samples	misc/QfDemo.py	/^    samples = 4096$/;"	v
samples	misc/benchmark.py	/^                    samples = 4096$/;"	v
samples	misc/oneObstacle.py	/^        samples = 4096$/;"	v
samples_count	controller/mppi/toy_examples/dualMass.py	/^    samples_count = 1000$/;"	v
samples_count	controller/mppi/toy_examples/invertedPendulum.py	/^    samples_count = 1000$/;"	v
save	track/RCPTrack.py	/^    def save(self,filename=None):$/;"	m	class:RCPTrack
saveBlankImg	extension/Visualization.py	/^    def saveBlankImg(self):$/;"	m	class:Visualization
saveFile	misc/vicon.py	/^    def saveFile(self,data,filename):$/;"	m	class:Vicon
saveGif	misc/laptime.py	/^saveGif = True$/;"	v
saveRaceline	track/RCPTrack.py	/^    def saveRaceline(self,filename):$/;"	m	class:RCPTrack
scales	controller/ccmppi/curand.py	/^scales = np.array([1,1],dtype=np.float32)$/;"	v
scales	controller/mppi/toy_examples/curand.py	/^scales = np.array([1,1],dtype=np.float32)$/;"	v
seed	controller/ccmppi/curand.py	/^seed = np.int32(int(time()*10000))$/;"	v
seed	controller/mppi/toy_examples/curand.py	/^seed = np.int32(int(time()*10000))$/;"	v
sendCommand	third_party/NatNetClient.py	/^    def sendCommand( self, command, commandStr, socket, address ):$/;"	m	class:NatNetClient
sendPacket	car/Offboard.py	/^    def sendPacket(self,packet):$/;"	m	class:Offboard
sep_line	util/analyzeBatchExpGrid.py	/^        sep_line = line.split(',')$/;"	v
sep_lines	util/analyzeBatchExpGrid.py	/^    sep_lines = []$/;"	v
setBlockGrid	controller/cvar/CvarCarController.py	/^    def setBlockGrid(self):$/;"	m	class:CvarCarController
setBlockGrid	controller/mppi/MppiCarController.py	/^    def setBlockGrid(self):$/;"	m	class:MppiCarController
setCallback	misc/vicon.py	/^    def setCallback(self,fun):$/;"	m	class:Vicon
setEntry	track/RCPTrack.py	/^    def setEntry(self,entry=None):$/;"	m	class:Node
setExit	track/RCPTrack.py	/^    def setExit(self,exit=None):$/;"	m	class:Node
setParam	car/Offboard.py	/^    def setParam(self,p,i,d):$/;"	m	class:Offboard
setResolution	track/Track.py	/^    def setResolution(self,res):$/;"	m	class:Track
setUpObstacles	track/RCPTrack.py	/^    def setUpObstacles(self):$/;"	m	class:RCPTrack
set_control_limit	controller/cvar/cvar_racecar.cu	/^__global__ void set_control_limit(float* in_control_limit){$/;"	f	typeref:typename:void
set_control_limit	controller/mppi/mppi_racecar.cu	/^__global__ void set_control_limit(float* in_control_limit){$/;"	f	typeref:typename:void
set_control_noise_cov	controller/cvar/cvar_racecar.cu	/^__global__ void set_control_noise_cov(float* in_noise_cov){$/;"	f	typeref:typename:void
set_control_noise_mean	controller/cvar/cvar_racecar.cu	/^__global__ void set_control_noise_mean(float* in_noise_mean){$/;"	f	typeref:typename:void
set_noise_cov	controller/mppi/mppi_racecar.cu	/^__global__ void set_noise_cov(float* in_noise_cov){$/;"	f	typeref:typename:void
set_noise_mean	controller/mppi/mppi_racecar.cu	/^__global__ void set_noise_mean(float* in_noise_mean){$/;"	f	typeref:typename:void
set_obstacle	controller/cvar/cvar_racecar.cu	/^void set_obstacle(int in_obstacle_count, float in_obstacle_radius, float in_obstacles[][2]){$/;"	f	typeref:typename:void
set_raceline	controller/cvar/cvar_racecar.cu	/^__global__ void set_raceline(float* in_raceline){$/;"	f	typeref:typename:void
set_raceline	controller/mppi/mppi_racecar.cu	/^__global__ void set_raceline(float* in_raceline){$/;"	f	typeref:typename:void
set_state_noise_magnitude	controller/cvar/cvar_racecar.cu	/^__global__ void set_state_noise_magnitude(float* in_noise_mag){$/;"	f	typeref:typename:void
set_state_noise_mean	controller/cvar/cvar_racecar.cu	/^__global__ void set_state_noise_mean(float* in_state_mean){$/;"	f	typeref:typename:void
setup	car/Offboard.py	/^    def setup(self):$/;"	m	class:Offboard
setup	misc/mpc.py	/^    def setup(self,n,m,l,p):$/;"	m	class:MPC
setup	planner/MPC.py	/^    def setup(self,n,m,l,p):$/;"	m	class:MPC
setup	planner/old_MPC.py	/^    def setup(self,n,m,l,p):$/;"	m	class:MPC
setupModel	misc/linearizeDynamics.py	/^    def setupModel(self):$/;"	m	class:LinearizeDynamics
setupParam	controller/ccmppi/ccmppi_dynamic.py	/^    def setupParam(self):$/;"	m	class:CCMPPI_DYNAMIC
setupParam	controller/ccmppi/ccmppi_kinematic.py	/^    def setupParam(self):$/;"	m	class:CCMPPI_KINEMATIC
show	misc/ukfSysid.py	/^def show(img):$/;"	f
show	misc/validateHybridModel.py	/^def show(img):$/;"	f
show	sysid/validateModel.py	/^def show(img):$/;"	f
showStats	extension/Laptimer.py	/^    def showStats(self):$/;"	m	class:Laptimer
show_animation	copg/car_racing_simulator/pure_pursuit.py	/^show_animation = True$/;"	v
sim	controller/mppi/toy_examples/dampedBox.py	/^    sim = Box()$/;"	v
sim	misc/advCarSim.py	/^    sim = advCarSim(0,0,radians(90))$/;"	v
sim	misc/ethCarSim.py	/^    sim = ethCarSim(0,0,radians(90))$/;"	v
sim	misc/validateHybridModel.py	/^sim = hybridSim(dtype,device,history_steps,forward_steps,dt)$/;"	v
sim_log_vec	track/RCPTrack.py	/^sim_log_vec = {}$/;"	v
sim_omega_vec	track/RCPTrack.py	/^sim_omega_vec = []$/;"	v
sim_state	misc/testGpuDynamics.py	/^sim_state = np.array([2.4847, 0.9529, 1.9582, 0.2645, 0.1866, 1.6597])$/;"	v
simpleDynamicsCovarianceControl	misc/linearizeDynamics.py	/^    def simpleDynamicsCovarianceControl(self):$/;"	m	class:LinearizeDynamics
simulate	controller/ccmppi/ccmppi_dynamic.py	/^    def simulate(self):$/;"	m	class:CCMPPI_DYNAMIC
simulate	controller/ccmppi/ccmppi_kinematic.py	/^    def simulate(self):$/;"	m	class:CCMPPI_KINEMATIC
simulate_dynamic	controller/ccmppi/ccmppi_dynamic.py	/^    def simulate_dynamic(self):$/;"	m	class:CCMPPI_DYNAMIC
simulate_kinematic	controller/ccmppi/ccmppi_kinematic.py	/^    def simulate_kinematic(self):$/;"	m	class:CCMPPI_KINEMATIC
simulate_linear	controller/ccmppi/ccmppi_dynamic.py	/^    def simulate_linear(self):$/;"	m	class:CCMPPI_DYNAMIC
simulate_linear	controller/ccmppi/ccmppi_kinematic.py	/^    def simulate_linear(self):$/;"	m	class:CCMPPI_KINEMATIC
simulator	misc/hybridDynamicSimNew.py	/^    simulator = hybridKinematicSim(dtype, device, history_steps, forward_steps, dt)$/;"	v
simulator	misc/hybridKinematicSim.py	/^    simulator = hybridKinematicSim(dtype, device, history_steps, forward_steps, dt)$/;"	v
simulator	misc/hybridSim.py	/^    simulator = hybridSim(dtype, device, history_steps, forward_steps, dt)$/;"	v
sinInput	misc/oldkinematicSimulator.py	/^    def sinInput(self,ts):$/;"	m	class:kinematicSimulator
skip	batchRun.py	/^skip = 0$/;"	v
skip	misc/nanny.py	/^skip = 0$/;"	v
skip	misc/ukfSysid.py	/^skip = 200$/;"	v
skip	misc/validateHybridModel.py	/^skip = 200$/;"	v
slipAngle	copg/car_racing_simulator/VehicleModel.py	/^    def slipAngle(self, x, u):$/;"	m	class:VehicleModel
smooth_v	sysid/fitThrottle.py	/^smooth_v = savgol_filter(v,51,2)$/;"	v
sns	util/analyzeBatchExpGrid.py	/^import seaborn as sns$/;"	I	nameref:module:seaborn
solve	misc/cs_solver.py	/^    def solve(self):$/;"	m	class:CSSolver
solve	misc/cs_solver_covariance_only.py	/^    def solve(self):$/;"	m	class:CSSolver
solve	misc/mpc.py	/^    def solve(self):$/;"	m	class:MPC
solve	planner/MPC.py	/^    def solve(self):$/;"	m	class:MPC
solve	planner/old_MPC.py	/^    def solve(self):$/;"	m	class:MPC
solveSingleControl	planner/Planner.py	/^    def solveSingleControl(self,x0,opponent_state):$/;"	m	class:Planner
solver	misc/cs_solver.py	/^    solver = CSSolver()$/;"	v
solver	misc/cs_solver_covariance_only.py	/^    solver = CSSolver()$/;"	v
sqr	misc/ukf.py	/^    def sqr(self,x):$/;"	m	class:UKF
st1_gpu	copg/car_racing/copg_orca.py	/^        st1_gpu = torch.cat([state_c1[:,0:5],state_c2[:,0:5]],dim=1).to(device)$/;"	v
st1_gpu	copg/car_racing/gda_orca.py	/^        st1_gpu = torch.cat([state_c1[:,0:5],state_c2[:,0:5]],dim=1).to(device)$/;"	v
st1_gpu	copg/rcvip_racing/copg_orca.py	/^        st1_gpu = torch.cat([state_c1[:,0:5],state_c2[:,0:5]],dim=1).to(device)$/;"	v
st1_gpu	copg/rcvip_racing/gda_orca.py	/^        st1_gpu = torch.cat([state_c1[:,0:5],state_c2[:,0:5]],dim=1).to(device)$/;"	v
st2_gpu	copg/car_racing/copg_orca.py	/^        st2_gpu = torch.cat([state_c2[:, 0:5], state_c1[:, 0:5]], dim=1).to(device)$/;"	v
st2_gpu	copg/car_racing/gda_orca.py	/^        st2_gpu = torch.cat([state_c2[:, 0:5], state_c1[:, 0:5]], dim=1).to(device)$/;"	v
st2_gpu	copg/rcvip_racing/copg_orca.py	/^        st2_gpu = torch.cat([state_c2[:, 0:5], state_c1[:, 0:5]], dim=1).to(device)$/;"	v
st2_gpu	copg/rcvip_racing/gda_orca.py	/^        st2_gpu = torch.cat([state_c2[:, 0:5], state_c1[:, 0:5]], dim=1).to(device)$/;"	v
start	util/timeUtil.py	/^    def start(self, name = None):$/;"	m	class:execution_timer
start_dir	misc/laptime.py	/^    start_dir = 'd'$/;"	v
start_grid	misc/laptime.py	/^    start_grid = (3,3)$/;"	v
start_seqno	misc/laptime.py	/^    start_seqno = 10$/;"	v
state	controller/ccmppi/ccmppi_dynamic.py	/^    state = np.array([0.6*0.7,0.6*0.5,  radians(130),0.5,0.0,0.0])$/;"	v
state	copg/car_racing_simulator/cpg_main.py	/^    state = State(x=track1.X[3], y=track1.Y[3], yaw=0.0, v=0.0)$/;"	v
state	sysid/fitThrottle.py	/^    state = (x[i],y[i],heading[i],v[i],0,0)$/;"	v
stateTrajToCartesianTraj	planner/Planner.py	/^    def stateTrajToCartesianTraj(self,traj):$/;"	m	class:Planner
state_c1	copg/car_racing/copg_orca.py	/^        state_c1 = (state_c1.transpose(0, 1) * (~done_c1) + prev_state_c1.transpose(0, 1) * (don/;"	v
state_c1	copg/car_racing/copg_orca.py	/^        state_c1 = state_c1[remaining_xo]$/;"	v
state_c1	copg/car_racing/copg_orca.py	/^        state_c1 = vehicle_model.dynModelBlendBatch(state_c1.view(-1,6), action1.view(-1,2)).vie/;"	v
state_c1	copg/car_racing/copg_orca.py	/^    state_c1 = torch.zeros(curr_batch_size, config["n_state"])#state[:,0:6].view(6)$/;"	v
state_c1	copg/car_racing/gda_orca.py	/^        state_c1 = (state_c1.transpose(0, 1) * (~done_c1) + prev_state_c1.transpose(0, 1) * (don/;"	v
state_c1	copg/car_racing/gda_orca.py	/^        state_c1 = state_c1[remaining_xo]$/;"	v
state_c1	copg/car_racing/gda_orca.py	/^        state_c1 = vehicle_model.dynModelBlendBatch(state_c1.view(-1,6), action1.view(-1,2)).vie/;"	v
state_c1	copg/car_racing/gda_orca.py	/^    state_c1 = torch.zeros(curr_batch_size, config["n_state"])#state[:,0:6].view(6)$/;"	v
state_c1	copg/car_racing/results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
state_c1	copg/car_racing/results.py	/^    state_c1 = (state_c1.transpose(0, 1) * (~done_c1) + prev_state_c1.transpose(0, 1) * (done_c1/;"	v
state_c1	copg/car_racing/results.py	/^    state_c1 = state_c1[remaining_xo]$/;"	v
state_c1	copg/car_racing/results.py	/^    state_c1 = vehicle_model.dynModelBlendBatch(state_c1.view(-1, 6), action1.view(-1, 2)).view(/;"	v
state_c1	copg/car_racing/results.py	/^state_c1 = torch.zeros(curr_batch_size, config["n_state"])  # state[:, 6:12].view(6)$/;"	v
state_c1	copg/rcvip_racing/copg_orca.py	/^        state_c1 = (state_c1.transpose(0, 1) * (~done_c1) + prev_state_c1.transpose(0, 1) * (don/;"	v
state_c1	copg/rcvip_racing/copg_orca.py	/^        state_c1 = state_c1[remaining_xo]$/;"	v
state_c1	copg/rcvip_racing/copg_orca.py	/^        state_c1 = vehicle_model.dynModelBlendBatch(state_c1.view(-1,6), action1.view(-1,2)).vie/;"	v
state_c1	copg/rcvip_racing/copg_orca.py	/^    state_c1 = torch.zeros(curr_batch_size, config["n_state"])#state[:,0:6].view(6)$/;"	v
state_c1	copg/rcvip_racing/gda_orca.py	/^        state_c1 = (state_c1.transpose(0, 1) * (~done_c1) + prev_state_c1.transpose(0, 1) * (don/;"	v
state_c1	copg/rcvip_racing/gda_orca.py	/^        state_c1 = state_c1[remaining_xo]$/;"	v
state_c1	copg/rcvip_racing/gda_orca.py	/^        state_c1 = vehicle_model.dynModelBlendBatch(state_c1.view(-1,6), action1.view(-1,2)).vie/;"	v
state_c1	copg/rcvip_racing/gda_orca.py	/^    state_c1 = torch.zeros(curr_batch_size, config["n_state"])#state[:,0:6].view(6)$/;"	v
state_c1	copg/rcvip_racing/results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
state_c1	copg/rcvip_racing/results.py	/^    state_c1 = (state_c1.transpose(0, 1) * (~done_c1) + prev_state_c1.transpose(0, 1) * (done_c1/;"	v
state_c1	copg/rcvip_racing/results.py	/^    state_c1 = state_c1[remaining_xo]$/;"	v
state_c1	copg/rcvip_racing/results.py	/^    state_c1 = vehicle_model.dynModelBlendBatch(state_c1.view(-1, 6), action1.view(-1, 2)).view(/;"	v
state_c1	copg/rcvip_racing/results.py	/^state_c1 = torch.zeros(curr_batch_size, config["n_state"])  # state[:, 6:12].view(6)$/;"	v
state_c1	results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
state_c1	results.py	/^    state_c1 = (state_c1.transpose(0, 1) * (~done_c1) + prev_state_c1.transpose(0, 1) * (done_c1/;"	v
state_c1	results.py	/^    state_c1 = state_c1[remaining_xo]$/;"	v
state_c1	results.py	/^    state_c1 = vehicle_model.dynModelBlendBatch(state_c1.view(-1, 6), action1.view(-1, 2)).view(/;"	v
state_c1	results.py	/^state_c1 = torch.zeros(curr_batch_size, config["n_state"])  # state[:, 6:12].view(6)$/;"	v
state_c2	copg/car_racing/copg_orca.py	/^        state_c2 = (state_c2.transpose(0, 1) * (~done_c2) + prev_state_c2.transpose(0, 1) * (don/;"	v
state_c2	copg/car_racing/copg_orca.py	/^        state_c2 = state_c2[remaining_xo]$/;"	v
state_c2	copg/car_racing/copg_orca.py	/^        state_c2 = vehicle_model.dynModelBlendBatch(state_c2.view(-1,6), action2.view(-1,2)).vie/;"	v
state_c2	copg/car_racing/copg_orca.py	/^    state_c2 = torch.zeros(curr_batch_size, config["n_state"])#state[:, 6:12].view(6)$/;"	v
state_c2	copg/car_racing/gda_orca.py	/^        state_c2 = (state_c2.transpose(0, 1) * (~done_c2) + prev_state_c2.transpose(0, 1) * (don/;"	v
state_c2	copg/car_racing/gda_orca.py	/^        state_c2 = state_c2[remaining_xo]$/;"	v
state_c2	copg/car_racing/gda_orca.py	/^        state_c2 = vehicle_model.dynModelBlendBatch(state_c2.view(-1,6), action2.view(-1,2)).vie/;"	v
state_c2	copg/car_racing/gda_orca.py	/^    state_c2 = torch.zeros(curr_batch_size, config["n_state"])#state[:, 6:12].view(6)$/;"	v
state_c2	copg/car_racing/results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
state_c2	copg/car_racing/results.py	/^    state_c2 = (state_c2.transpose(0, 1) * (~done_c2) + prev_state_c2.transpose(0, 1) * (done_c2/;"	v
state_c2	copg/car_racing/results.py	/^    state_c2 = state_c2[remaining_xo]$/;"	v
state_c2	copg/car_racing/results.py	/^    state_c2 = vehicle_model.dynModelBlendBatch(state_c2.view(-1, 6), action2.view(-1, 2)).view(/;"	v
state_c2	copg/car_racing/results.py	/^state_c2 = torch.zeros(curr_batch_size, config["n_state"])  # state[:, 6:12].view(6)$/;"	v
state_c2	copg/rcvip_racing/copg_orca.py	/^        state_c2 = (state_c2.transpose(0, 1) * (~done_c2) + prev_state_c2.transpose(0, 1) * (don/;"	v
state_c2	copg/rcvip_racing/copg_orca.py	/^        state_c2 = state_c2[remaining_xo]$/;"	v
state_c2	copg/rcvip_racing/copg_orca.py	/^        state_c2 = vehicle_model.dynModelBlendBatch(state_c2.view(-1,6), action2.view(-1,2)).vie/;"	v
state_c2	copg/rcvip_racing/copg_orca.py	/^    state_c2 = torch.zeros(curr_batch_size, config["n_state"])#state[:, 6:12].view(6)$/;"	v
state_c2	copg/rcvip_racing/gda_orca.py	/^        state_c2 = (state_c2.transpose(0, 1) * (~done_c2) + prev_state_c2.transpose(0, 1) * (don/;"	v
state_c2	copg/rcvip_racing/gda_orca.py	/^        state_c2 = state_c2[remaining_xo]$/;"	v
state_c2	copg/rcvip_racing/gda_orca.py	/^        state_c2 = vehicle_model.dynModelBlendBatch(state_c2.view(-1,6), action2.view(-1,2)).vie/;"	v
state_c2	copg/rcvip_racing/gda_orca.py	/^    state_c2 = torch.zeros(curr_batch_size, config["n_state"])#state[:, 6:12].view(6)$/;"	v
state_c2	copg/rcvip_racing/results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
state_c2	copg/rcvip_racing/results.py	/^    state_c2 = (state_c2.transpose(0, 1) * (~done_c2) + prev_state_c2.transpose(0, 1) * (done_c2/;"	v
state_c2	copg/rcvip_racing/results.py	/^    state_c2 = state_c2[remaining_xo]$/;"	v
state_c2	copg/rcvip_racing/results.py	/^    state_c2 = vehicle_model.dynModelBlendBatch(state_c2.view(-1, 6), action2.view(-1, 2)).view(/;"	v
state_c2	copg/rcvip_racing/results.py	/^state_c2 = torch.zeros(curr_batch_size, config["n_state"])  # state[:, 6:12].view(6)$/;"	v
state_c2	results.py	/^    reward1, reward2, done_c1, done_c2,state_c1, state_c2, n_c1, n_c2  = getNFcollosionreward(st/;"	v
state_c2	results.py	/^    state_c2 = (state_c2.transpose(0, 1) * (~done_c2) + prev_state_c2.transpose(0, 1) * (done_c2/;"	v
state_c2	results.py	/^    state_c2 = state_c2[remaining_xo]$/;"	v
state_c2	results.py	/^    state_c2 = vehicle_model.dynModelBlendBatch(state_c2.view(-1, 6), action2.view(-1, 2)).view(/;"	v
state_c2	results.py	/^state_c2 = torch.zeros(curr_batch_size, config["n_state"])  # state[:, 6:12].view(6)$/;"	v
state_data	copg/car_racing_simulator/cpg_main.py	/^    state_data = np.array(state_data)$/;"	v
state_data	copg/car_racing_simulator/cpg_main.py	/^    state_data =[]$/;"	v
state_diff	misc/sysidTrainDynamicHybridSim.py	/^def state_diff(src,ref,test):$/;"	f
state_diff	misc/sysidTrainDynamicNewHybridSim.py	/^def state_diff(src,ref,test):$/;"	f
state_diff	misc/sysidTrainKinematicHybridSim.py	/^def state_diff(src,ref,test):$/;"	f
state_dim	controller/ccmppi/curand.py	/^state_dim = 6$/;"	v
state_dim	controller/mppi/toy_examples/cudaMppiTest.py	/^state_dim = 4$/;"	v
state_dim	controller/mppi/toy_examples/curand.py	/^state_dim = 6$/;"	v
state_gpu_p1	copg/car_racing/copg_orca.py	/^    state_gpu_p1 = torch.cat([batch_mat_state1, batch_mat_state2], dim=1).to(device)$/;"	v
state_gpu_p1	copg/car_racing/gda_orca.py	/^    state_gpu_p1 = torch.cat([batch_mat_state1, batch_mat_state2], dim=1).to(device)$/;"	v
state_gpu_p1	copg/rcvip_racing/copg_orca.py	/^    state_gpu_p1 = torch.cat([batch_mat_state1, batch_mat_state2], dim=1).to(device)$/;"	v
state_gpu_p1	copg/rcvip_racing/gda_orca.py	/^    state_gpu_p1 = torch.cat([batch_mat_state1, batch_mat_state2], dim=1).to(device)$/;"	v
state_gpu_p2	copg/car_racing/copg_orca.py	/^    state_gpu_p2 = torch.cat([batch_mat_state2, batch_mat_state1], dim=1).to(device)$/;"	v
state_gpu_p2	copg/car_racing/gda_orca.py	/^    state_gpu_p2 = torch.cat([batch_mat_state2, batch_mat_state1], dim=1).to(device)$/;"	v
state_gpu_p2	copg/rcvip_racing/copg_orca.py	/^    state_gpu_p2 = torch.cat([batch_mat_state2, batch_mat_state1], dim=1).to(device)$/;"	v
state_gpu_p2	copg/rcvip_racing/gda_orca.py	/^    state_gpu_p2 = torch.cat([batch_mat_state2, batch_mat_state1], dim=1).to(device)$/;"	v
state_noise_mag	controller/cvar/cvar_racecar.cu	/^__device__ float state_noise_mag[STATE_DIM];$/;"	v	typeref:typename:float[]
state_noise_mean	controller/cvar/cvar_racecar.cu	/^__device__ float state_noise_mean[STATE_DIM];$/;"	v	typeref:typename:float[]
std_baseline	util/analyzeBatchExpGrid.py	/^    std_baseline = 9.081$/;"	v
steering	car/Car.py	/^    def steering(self):$/;"	m	class:Car
steering	car/Car.py	/^    def steering(self,val):$/;"	m	class:Car
steering	misc/advCarSim.py	/^        steering = radians(10)$/;"	v
steering	misc/ethCarSim.py	/^        steering = radians(10)$/;"	v
steering	misc/readlog.py	/^steering = data[:,7]$/;"	v
steering	misc/ukfSysid.py	/^steering = data[skip:end,4]$/;"	v
steering	misc/validateHybridModel.py	/^steering = data[skip:,4]$/;"	v
steering	sysid/fitThrottle.py	/^steering = data[:,4]$/;"	v
steering	sysid/readlog.py	/^steering = data[:,7]$/;"	v
steering_vec	track/RCPTrack.py	/^steering_vec = []$/;"	v
step	controller/mppi/toy_examples/dampedBox.py	/^    def step(self,u,dt):$/;"	m	class:Box
step	controller/mppi/toy_examples/dualMass.py	/^    def step(self,dt,u):$/;"	m	class:dualMass
step	controller/mppi/toy_examples/invertedPendulum.py	/^    def step(self,dt,u):$/;"	m	class:InvertedPendulum
step	controller/mppi/toy_examples/mppiJisModel.py	/^    def step(self,u,dt=None):$/;"	m	class:Model
step	copg/copg_optim/copg.py	/^    def step(self, ob, ob_tot,lp1,lp2):$/;"	m	class:RCoPG
step	copg/copg_optim/copg.py	/^    def step(self, ob_tot,lp1,lp2):$/;"	m	class:CoPG
step	misc/oldkinematicSimulator.py	/^    def step(self,dt,action=None):$/;"	m	class:kinematicSimulator
step_raw	sysid/validateModel.py	/^def step_raw(state,control,dt=0.01,slip_f_override=None):$/;"	f
step_rig	sysid/validateModel.py	/^def step_rig(state,control,dt=0.01,slip_f_override=None):$/;"	f
stop	misc/QfDemo.py	/^    def stop(self,):$/;"	m	class:Main
stop	misc/benchmark.py	/^    def stop(self,):$/;"	m	class:Main
stop	misc/oneObstacle.py	/^    def stop(self,):$/;"	m	class:Main
stop	run.py	/^    def stop(self,):$/;"	m	class:Main
stopDynamicSimulation	misc/advCarSim.py	/^    def stopDynamicSimulation(self,car):$/;"	m	class:advCarSim
stopEthSimulation	misc/ethCarSim.py	/^    def stopEthSimulation(self,car):$/;"	m	class:ethCarSim
stopOptitrack	extension/Optitrack.py	/^    def stopOptitrack(self,car):$/;"	m	class:Optitrack
stopUpdateDaemon	misc/vicon.py	/^    def stopUpdateDaemon(self):$/;"	m	class:Vicon
streamingClient	misc/PythonSample.py	/^streamingClient = NatNetClient()$/;"	v
summary	util/timeUtil.py	/^    def summary(self):$/;"	m	class:execution_timer
synthesizeControl	controller/cvar/CvarCarController.py	/^    def synthesizeControl(self, cost_vec, sampled_control_rate):$/;"	m	class:CvarCarController
synthesizeControl	controller/mppi/MppiCarController.py	/^    def synthesizeControl(self, cost_vec, sampled_control_rate):$/;"	m	class:MppiCarController
synthesizeControlMin	controller/cvar/CvarCarController.py	/^    def synthesizeControlMin(self, cost_vec, sampled_control):$/;"	m	class:CvarCarController
synthesizeControlMin	controller/mppi/MppiCarController.py	/^    def synthesizeControlMin(self, cost_vec, sampled_control):$/;"	m	class:MppiCarController
sysid	misc/sysidTrainDynamicHybridSim.py	/^def sysid(log_names):$/;"	f
sysid	misc/sysidTrainDynamicNewHybridSim.py	/^def sysid(log_names):$/;"	f
sysid	misc/sysidTrainKinematicHybridSim.py	/^def sysid(log_names):$/;"	f
t	copg/car_racing/results.py	/^        t=t+1$/;"	v
t	copg/car_racing/results.py	/^t=0$/;"	v
t	copg/rcvip_racing/results.py	/^        t=t+1$/;"	v
t	copg/rcvip_racing/results.py	/^t=0$/;"	v
t	misc/cvxpy_test.py	/^t = time()$/;"	v
t	misc/readlog.py	/^t = data[:,0]$/;"	v
t	misc/readlog.py	/^t = t-t[0]$/;"	v
t	misc/ukfSysid.py	/^t = data[skip:end,0]$/;"	v
t	misc/ukfSysid.py	/^t = t-t[0]$/;"	v
t	misc/validateHybridModel.py	/^t = data[skip:,0]$/;"	v
t	misc/validateHybridModel.py	/^t = t-t[0]$/;"	v
t	results.py	/^        t=t+1$/;"	v
t	results.py	/^t=0$/;"	v
t	sysid/fitThrottle.py	/^t = data[:,0]$/;"	v
t	sysid/fitThrottle.py	/^t = t-t[0]$/;"	v
t	sysid/readlog.py	/^t = data[:,0]$/;"	v
t	sysid/readlog.py	/^t = t-t[0]$/;"	v
t	sysid/steeringSysid.py	/^t = data[:,0,0] - data[0,0,0]$/;"	v
t	util/timeUtil.py	/^    t = execution_timer(True)$/;"	v
t0	misc/linearizeDynamics.py	/^    t0 = time()$/;"	v
t0	misc/nanny.py	/^t0 = time()$/;"	v
tToS	planner/Planner.py	/^        def tToS(t_start,t_end,steps=10):$/;"	f	member:Planner.genSamplePath	file:
t_cpu	controller/ccmppi/curand.py	/^t_cpu = (tac-tic)\/100.0$/;"	v
t_cpu	controller/mppi/toy_examples/curand.py	/^t_cpu = (tac-tic)\/100.0$/;"	v
t_cuda	controller/ccmppi/curand.py	/^t_cuda = (tac-tic)\/100.0$/;"	v
t_cuda	controller/mppi/toy_examples/curand.py	/^t_cuda = (tac-tic)\/100.0$/;"	v
tac	controller/ccmppi/curand.py	/^tac = time()$/;"	v
tac	controller/mppi/toy_examples/cudaMppiTest.py	/^tac = time()$/;"	v
tac	controller/mppi/toy_examples/curand.py	/^tac = time()$/;"	v
tac	controller/mppi/toy_examples/dampedBox.py	/^    tac = time()$/;"	v
takeSnapshot	extension/SnapshotSaver.py	/^    def takeSnapshot(self,duration=100,interval=20):$/;"	m	class:SnapshotSaver
target_ind	copg/car_racing_simulator/cpg_main.py	/^        d, delta, target_ind = cpg_controller(track1.X, track1.Y, state, target_ind)$/;"	v
target_ind	copg/car_racing_simulator/cpg_main.py	/^    target_ind = calc_target_index(state, track1.X, track1.Y)$/;"	v
target_states	misc/hybridDynamicSimNew.py	/^        target_states = batch[:,-forward_steps:,:]$/;"	v
target_states	misc/hybridKinematicSim.py	/^        target_states = batch[:,-forward_steps:,:]$/;"	v
target_states	misc/hybridSim.py	/^        target_states = batch[:,-forward_steps:,:]$/;"	v
temp	copg/car_racing_simulator/cpg_main.py	/^    temp=1$/;"	v
temperature	controller/ccmppi/curand.py	/^temperature = 1$/;"	v
temperature	controller/mppi/toy_examples/curand.py	/^temperature = 1$/;"	v
temperature	controller/mppi/toy_examples/dualMass.py	/^    temperature = 1$/;"	v
temperature	controller/mppi/toy_examples/invertedPendulum.py	/^    temperature = 1$/;"	v
terminalConditionVal	controller/mppi/toy_examples/mppiJisModel.py	/^    def terminalConditionVal(self):$/;"	m	class:Model
terminal_cov	misc/benchmark.py	/^                        terminal_cov = -1$/;"	v
terminal_cov	misc/benchmark.py	/^                        terminal_cov = experiment.performance_tracker.terminal_cov$/;"	v
test	copg/rcvip_racing/trackTest.py	/^test = Test()$/;"	v
test	misc/sysidTrainDynamicHybridSim.py	/^def test(test_data_loader,history_steps,forward_steps,simulator,device,criterion,optimizer,test_/;"	f
test	misc/sysidTrainDynamicNewHybridSim.py	/^def test(test_data_loader,history_steps,forward_steps,simulator,device,criterion,optimizer,test_/;"	f
test	misc/sysidTrainKinematicHybridSim.py	/^def test(test_data_loader,history_steps,forward_steps,simulator,device,criterion,optimizer,test_/;"	f
test	planner/Planner.py	/^    def test(self):$/;"	m	class:Planner
testBezierCurve	qpSmooth.py	/^    def testBezierCurve(self):$/;"	m	class:QpSmooth
testBigMatrices	misc/linearizeDynamics.py	/^    def testBigMatrices(self,offset = 0):$/;"	m	class:LinearizeDynamics
testBigMatricesJacob	misc/linearizeDynamics.py	/^    def testBigMatricesJacob(self, offset = 0):$/;"	m	class:LinearizeDynamics
testCartesianToPolar	misc/ukf.py	/^    def testCartesianToPolar(self):$/;"	m	class:UKF
testCurvatureJac	qpSmooth.py	/^    def testCurvatureJac(self,param=0):$/;"	m	class:QpSmooth
testForward	misc/hybridKinematicSim.py	/^    def testForward(self,full_states, actions,i=0,sim = None):$/;"	m	class:hybridKinematicSim
testForward	misc/hybridSim.py	/^    def testForward(self,full_states, actions,i=0,sim = None):$/;"	m	class:hybridSim
testFreq	misc/vicon.py	/^    def testFreq(self,packets=100):$/;"	m	class:Vicon
testGetRefTraj	misc/linearizeDynamics.py	/^    def testGetRefTraj(self):$/;"	m	class:LinearizeDynamics
testK	misc/linearizeDynamics.py	/^    def testK(self):$/;"	m	class:LinearizeDynamics
testLagrangeDer	qpSmooth.py	/^    def testLagrangeDer(self):$/;"	m	class:QpSmooth
testLinearization	controller/ccmppi/ccmppi_dynamic.py	/^    def testLinearization(self,offset = 0):$/;"	m	class:CCMPPI_DYNAMIC
testLinearization	controller/ccmppi/ccmppi_kinematic.py	/^    def testLinearization(self,offset = 0):$/;"	m	class:CCMPPI_KINEMATIC
testLinearize	misc/linearizeDynamics.py	/^    def testLinearize(self):$/;"	m	class:LinearizeDynamics
testPredict	misc/ukfSysid.py	/^def testPredict(ukf,show=False):$/;"	f
testSimpleDynamics	misc/linearizeDynamics.py	/^    def testSimpleDynamics(self):$/;"	m	class:LinearizeDynamics
testSingleFrame	controller/ccmppi/ccmppi_dynamic.py	/^    def testSingleFrame(self):$/;"	m	class:CCMPPI_DYNAMIC
testSingleFrame	controller/ccmppi/ccmppi_kinematic.py	/^    def testSingleFrame(self):$/;"	m	class:CCMPPI_KINEMATIC
testSqr	misc/ukf.py	/^    def testSqr(self):$/;"	m	class:UKF
testTrack	qpSmooth.py	/^    def testTrack(self):$/;"	m	class:QpSmooth
test_matrix_multiplication	controller/ccmppi/ccmppi.cu	/^void test_matrix_multiplication(){$/;"	f	typeref:typename:void
text	misc/benchmark.py	/^                    text = "%25s, %d, %d, %.4f, %d, %.5f, %.5f, %.5f, %d, %s, %.2f, %.2f"%( algo/;"	v
text	util/analyzeBatchExpGrid.py	/^    text = '(boundary_data + obstacle_data)\/101*11'$/;"	v
textlog_filename	util/analyzeBatchExpGrid.py	/^    textlog_filename = os.path.join(os.path.dirname(sys.argv[0]),'..\/..\/log',name,'textlog.txt/;"	v
theta	sysid/cg.py	/^    theta = np.arcsin(float(-delta[i])\/tw)$/;"	v
theta2d	extension/Optitrack.py	/^            x2d,y2d,theta2d = op.getState2d(i)$/;"	v
thisdir	sysid/meet.py	/^thisdir = os.path.dirname(os.path.abspath(__file__))$/;"	v
thisdir	sysid/motorModel.py	/^thisdir = os.path.dirname(os.path.abspath(__file__))$/;"	v
thisdir	sysid/validateModel.py	/^thisdir = os.path.dirname(os.path.abspath(__file__))$/;"	v
throttle	car/Car.py	/^    def throttle(self):$/;"	m	class:Car
throttle	car/Car.py	/^    def throttle(self,val):$/;"	m	class:Car
throttle	misc/advCarSim.py	/^        throttle = 0$/;"	v
throttle	misc/ethCarSim.py	/^        throttle = 0.24 + 0.5$/;"	v
throttle	misc/readlog.py	/^throttle = data[:,8]$/;"	v
throttle	misc/ukfSysid.py	/^throttle = data[skip:end,5]$/;"	v
throttle	misc/validateHybridModel.py	/^throttle = data[skip:,5]$/;"	v
throttle	sysid/fitThrottle.py	/^throttle = data[:,5]$/;"	v
throttle	sysid/readlog.py	/^throttle = data[:,8]$/;"	v
tic	controller/ccmppi/curand.py	/^tic = time()$/;"	v
tic	controller/mppi/toy_examples/cudaMppiTest.py	/^tic = time()$/;"	v
tic	controller/mppi/toy_examples/curand.py	/^tic = time()$/;"	v
tic	controller/mppi/toy_examples/dampedBox.py	/^    tic = time()$/;"	v
time	misc/cs_solver.py	/^    def time(self):$/;"	m	class:CSSolver
time	misc/cs_solver_covariance_only.py	/^    def time(self):$/;"	m	class:CSSolver
time	run.py	/^    def time(self):$/;"	m	class:Main
tireCurve	misc/hybridDynamicSimNew.py	/^    def tireCurve(self,slip):$/;"	m	class:hybridDynamicSimNew
tireCurve	sysid/tire.py	/^def tireCurve(slip):$/;"	f
tire_curve	controller/cvar/cvar_racecar.cu	/^float tire_curve( float slip){$/;"	f	typeref:typename:float
tire_curve	controller/mppi/mppi_racecar.cu	/^float tire_curve( float slip){$/;"	f	typeref:typename:float
tire_w	sysid/cg.py	/^tire_w = 10$/;"	v
to_device	controller/cvar/CvarCarController.py	/^    def to_device(self,data):$/;"	m	class:CvarCarController
to_device	controller/mppi/MppiCarController.py	/^    def to_device(self,data):$/;"	m	class:MppiCarController
total_acc	sysid/fitThrottle.py	/^lat_acc, lon_acc, total_acc = getAccCarFrame(x,y,dt)$/;"	v
total_norm	copg/car_racing/gda_orca.py	/^    total_norm = 0$/;"	v
total_norm	copg/car_racing/gda_orca.py	/^    total_norm = total_norm ** (1. \/ 2)$/;"	v
total_norm	copg/rcvip_racing/gda_orca.py	/^    total_norm = 0$/;"	v
total_norm	copg/rcvip_racing/gda_orca.py	/^    total_norm = total_norm ** (1. \/ 2)$/;"	v
trace	third_party/NatNetClient.py	/^def trace( *args ):$/;"	f
trace_model	misc/throttle_model.py	/^def trace_model():$/;"	f
track	misc/plotAllTrajectory.py	/^track = TrackFactory(name='full')$/;"	v
track	misc/plotFrontier.py	/^track = TrackFactory(name='full')$/;"	v
track	misc/plotSingleTrajectory.py	/^track = TrackFactory(name='full')$/;"	v
track	misc/ukfSysid.py	/^track = RCPtrack()$/;"	v
track	misc/validateHybridModel.py	/^track = RCPtrack()$/;"	v
track	util/plotTrajectory.py	/^track = TrackFactory(config_track)$/;"	v
track	util/timeUtil.py	/^    def track(self, name, var):$/;"	m	class:execution_timer
track1	copg/car_racing/results.py	/^track1 = Track.Track(config)$/;"	v
track1	copg/car_racing_simulator/cpg_main.py	/^    track1 = Track.Track(config)$/;"	v
track1	copg/rcvip_racing/results.py	/^track1 = Track.Track(config)$/;"	v
track1	results.py	/^track1 = Track.Track(config)$/;"	v
track_img	misc/plotFrontier.py	/^    track_img = pickle.load(f)$/;"	v
track_img	util/plotTrajectory.py	/^    track_img = pickle.load(f)$/;"	v
track_len	misc/laptime.py	/^    track_len = len(descrip)$/;"	v
track_size	misc/laptime.py	/^    track_size = (6,4)$/;"	v
train	misc/sysidTrainDynamicHybridSim.py	/^def train(train_data_loader,history_steps,forward_steps,simulator,device,criterion,optimizer,tra/;"	f
train	misc/sysidTrainDynamicNewHybridSim.py	/^def train(train_data_loader,history_steps,forward_steps,simulator,device,criterion,optimizer,tra/;"	f
train	misc/sysidTrainKinematicHybridSim.py	/^def train(train_data_loader,history_steps,forward_steps,simulator,device,criterion,optimizer,tra/;"	f
train_model	misc/throttle_model.py	/^def train_model():$/;"	f
transforms	controller/ccmppi/ccmppi_dynamic.py	/^import matplotlib.transforms as transforms$/;"	I	nameref:module:matplotlib.transforms
transforms	controller/ccmppi/ccmppi_kinematic.py	/^import matplotlib.transforms as transforms$/;"	I	nameref:module:matplotlib.transforms
transforms	misc/ukf.py	/^import matplotlib.transforms as transforms$/;"	I	nameref:module:matplotlib.transforms
tt	controller/mppi/toy_examples/dampedBox.py	/^    tt = np.linspace(0,T,int(T\/dt)+1)$/;"	v
u	controller/mppi/toy_examples/invertedPendulum.py	/^        u = 2*main.m*main.g*main.L*np.sin(main.x[0]) - D*main.x[1]$/;"	v
u0	copg/car_racing/copg_orca.py	/^u0 = torch.zeros(config["n_batch"], config["n_control"])$/;"	v
u0	copg/car_racing/gda_orca.py	/^u0 = torch.zeros(config["n_batch"], config["n_control"])$/;"	v
u0	copg/car_racing_simulator/cpg_main.py	/^        u0 = torch.FloatTensor([[d,delta]])$/;"	v
u0	copg/car_racing_simulator/cpg_main.py	/^    u0 = torch.zeros(config["n_batch"], config["n_control"])$/;"	v
u0	copg/rcvip_racing/copg_orca.py	/^u0 = torch.zeros(config["n_batch"], config["n_control"])$/;"	v
u0	copg/rcvip_racing/gda_orca.py	/^u0 = torch.zeros(config["n_batch"], config["n_control"])$/;"	v
u0	misc/linearizeDynamics.py	/^    u0 = main.ref_ctrl[i,:]$/;"	v
u1	controller/mppi/toy_examples/cudaMppiTest.py	/^u1 = np.ones([sample_count,horizon_steps,1])$/;"	v
u2	controller/mppi/toy_examples/cudaMppiTest.py	/^u2 = 3*np.ones([sample_count,horizon_steps,1])$/;"	v
u_max	controller/mppi/toy_examples/dampedBox.py	/^    u_max = 100$/;"	v
u_max	controller/mppi/toy_examples/invertedPendulum.py	/^            u_max = u$/;"	v
u_max	controller/mppi/toy_examples/invertedPendulum.py	/^    u_max = 0$/;"	v
ukf	misc/ukf.py	/^    ukf = UKF()$/;"	v
ukf	misc/ukfSysid.py	/^    ukf = run_ukf()$/;"	v
unscentedTrans	misc/ukf.py	/^    def unscentedTrans(self,var,P,fun, *args):$/;"	m	class:UKF
up	track/RCPTrack.py	/^        up = lambda x,y : [(x+0.5)*self.scale,(y+1)*self.scale]$/;"	f	member:RCPTrack.initRaceline	file:
update	copg/car_racing_simulator/pure_pursuit.py	/^def update(state, a, delta):$/;"	f
update	extension/BoundaryChecker.py	/^    def update(self):$/;"	m	class:BoundaryChecker
update	extension/CollisionChecker.py	/^    def update(self):$/;"	m	class:CollisionChecker
update	extension/CrosstrackErrorTracker.py	/^    def update(self):$/;"	m	class:CrosstrackErrorTracker
update	extension/Extension.py	/^    def update(self):$/;"	m	class:Extension
update	extension/Gifsaver.py	/^    def update(self):$/;"	m	class:Gifsaver
update	extension/LapCounter.py	/^    def update(self):$/;"	m	class:LapCounter
update	extension/Laptimer.py	/^    def update(self):$/;"	m	class:Laptimer
update	extension/Laptimer.py	/^    def update(self,coord,current_time=None):$/;"	m	class:_Laptimer
update	extension/Logger.py	/^    def update(self):$/;"	m	class:Logger
update	extension/SteeringTracker.py	/^    def update(self):$/;"	m	class:SteeringTracker
update	extension/StepCounter.py	/^    def update(self):$/;"	m	class:StepCounter
update	extension/TrajectoryPlotter.py	/^    def update(self):$/;"	m	class:TrajectoryPlotter
update	extension/simulator/DynamicSimulator.py	/^    def update(self): $/;"	m	class:DynamicSimulator
update	extension/simulator/KinematicSimulator.py	/^    def update(self): $/;"	m	class:KinematicSimulator
update	misc/QfDemo.py	/^    def update(self,):$/;"	m	class:Main
update	misc/benchmark.py	/^    def update(self,):$/;"	m	class:Main
update	misc/joystick.py	/^    def update(self,):$/;"	m	class:Joystick
update	misc/oneObstacle.py	/^    def update(self,):$/;"	m	class:Main
update	misc/throttle_model.m	/^function wR_new = update(wRi, T)$/;"	f
update	misc/ukf.py	/^    def update(self, state, state_cov, y_real):$/;"	m	class:UKF
update	run.py	/^    def update(self,):$/;"	m	class:Main
update	util/kalmanFilter.py	/^    def update(self,z,timestamp=None):$/;"	m	class:KalmanFilter
updateAction	extension/Optitrack.py	/^    def updateAction(self,action):$/;"	m	class:_Optitrack
updateCar	misc/advCarSim.py	/^    def updateCar(self,dt,sim_states,throttle,steering):$/;"	m	class:advCarSim
updateCar	misc/ethCarSim.py	/^    def updateCar(self,dt,sim_states,throttle,steering):$/;"	m	class:ethCarSim
updateCar	misc/oldkinematicSimulator.py	/^    def updateCar(self,dt,state,throttle,beta,v_override=None):$/;"	m	class:kinematicSimulator
updateCarStates	extension/Optitrack.py	/^    def updateCarStates(self):$/;"	m	class:Optitrack
updateDaemon	misc/joystick.py	/^    def updateDaemon(self,):$/;"	m	class:Joystick
updateDynamicSimulation	misc/advCarSim.py	/^    def updateDynamicSimulation(self,car):$/;"	m	class:advCarSim
updateEthSimulation	misc/ethCarSim.py	/^    def updateEthSimulation(self,car):$/;"	m	class:ethCarSim
updateOptitrack	extension/Optitrack.py	/^    def updateOptitrack(self,car):$/;"	m	class:Optitrack
update_dynamics	controller/ccmppi/ccmppi_dynamic.py	/^    def update_dynamics(self, x0, u0, dt):$/;"	m	class:CCMPPI_DYNAMIC
update_dynamics	controller/ccmppi/ccmppi_kinematic.py	/^    def update_dynamics(self, x0, u0, dt):$/;"	m	class:CCMPPI_KINEMATIC
update_dynamics	misc/cs_test.py	/^    def update_dynamics(self, state, input, dt, nn=None, throttle_nn=None, cartesian=np.array([]/;"	m	class:Model
update_dynamics	misc/linearizeDynamics.py	/^    def update_dynamics(self,states,controls,dt):$/;"	m	class:LinearizeDynamics
update_dynamics	misc/throttle_model.py	/^def update_dynamics(state, input, nn=None):$/;"	f
uu	controller/mppi/toy_examples/dampedBox.py	/^        uu = np.array(mpc.solve())$/;"	v
uu	controller/mppi/toy_examples/dualMass.py	/^        uu = mppi.control_single(main.x,[[-1,2]]*horizon_steps,[[-50,50]]*2)$/;"	v
uu	controller/mppi/toy_examples/invertedPendulum.py	/^        uu = mppi.control_single(main.x,[0]*horizon_steps,[[-50,50]])$/;"	v
v	sysid/fitThrottle.py	/^v = ds\/dt$/;"	v
v	sysid/fitThrottle.py	/^v = v*v_is_forward$/;"	v
v	sysid/steadyStateThrottle.py	/^v = [0.937,1.22,1.4,1.68]$/;"	v
v2c	qpSmooth.py	/^        v2c = lambda x: int((x-self.min_v)\/(self.max_v-self.min_v)*255)$/;"	f	member:QpSmooth.drawRaceline	file:
v2c	track/EmptyTrack.py	/^        v2c = lambda x: int((x-self.min_v)\/(self.max_v-self.min_v)*255)$/;"	f	member:EmptyTrack.drawPolyline	file:
v2c	track/RCPTrack.py	/^        v2c = lambda x: int((x-self.min_v)\/(self.max_v-self.min_v)*255)$/;"	f	member:RCPTrack.drawPolyline	file:
v2c	track/RCPTrack.py	/^        v2c = lambda x: int((x-self.min_v)\/(self.max_v-self.min_v)*255)$/;"	f	member:RCPTrack.drawRaceline	file:
v_forward	misc/readlog.py	/^v_forward = data[:,4]$/;"	v
v_forward	sysid/readlog.py	/^v_forward = data[:,4]$/;"	v
v_is_forward	sysid/fitThrottle.py	/^v_is_forward = ((dot_product > 0) - 0.5)* (2)$/;"	v
v_sideway	misc/readlog.py	/^v_sideway = data[:,5]$/;"	v
v_sideway	sysid/readlog.py	/^v_sideway = data[:,5]$/;"	v
val	qpSmooth.py	/^    val = qp.optimizePath()$/;"	v
val1	copg/car_racing/copg_orca.py	/^    val1 = q(torch.cat([batch_mat_state1,batch_mat_state2],dim=1).to(device))$/;"	v
val1	copg/car_racing/copg_orca.py	/^    val1 = val1.detach().to('cpu')$/;"	v
val1	copg/car_racing/gda_orca.py	/^    val1 = q(torch.cat([batch_mat_state1,batch_mat_state2],dim=1).to(device))$/;"	v
val1	copg/car_racing/gda_orca.py	/^    val1 = val1.detach().to('cpu')$/;"	v
val1	copg/rcvip_racing/copg_orca.py	/^    val1 = q(torch.cat([batch_mat_state1,batch_mat_state2],dim=1).to(device))$/;"	v
val1	copg/rcvip_racing/copg_orca.py	/^    val1 = val1.detach().to('cpu')$/;"	v
val1	copg/rcvip_racing/gda_orca.py	/^    val1 = q(torch.cat([batch_mat_state1,batch_mat_state2],dim=1).to(device))$/;"	v
val1	copg/rcvip_racing/gda_orca.py	/^    val1 = val1.detach().to('cpu')$/;"	v
val1_p	copg/car_racing/copg_orca.py	/^    val1_p = advantage_mat1.to(device)$/;"	v
val1_p	copg/car_racing/gda_orca.py	/^    val1_p = advantage_mat1.to(device)$/;"	v
val1_p	copg/rcvip_racing/copg_orca.py	/^    val1_p = advantage_mat1.to(device)$/;"	v
val1_p	copg/rcvip_racing/gda_orca.py	/^    val1_p = advantage_mat1.to(device)$/;"	v
value	util/analyzeBatchExpGrid.py	/^    value = eval(text)$/;"	v
vecToPoint	copg/car_racing_simulator/Track.py	/^    def vecToPoint(self, index, x):$/;"	m	class:Track
vecTrack	copg/car_racing_simulator/Track.py	/^    def vecTrack(self, index):$/;"	m	class:Track
vehicle_model	copg/car_racing/copg_orca.py	/^vehicle_model = VehicleModel.VehicleModel(config["n_batch"], 'cpu', config)$/;"	v
vehicle_model	copg/car_racing/gda_orca.py	/^vehicle_model = VehicleModel.VehicleModel(config["n_batch"], device, config)$/;"	v
vehicle_model	copg/car_racing/results.py	/^vehicle_model = VehicleModel.VehicleModel(config["n_batch"], device, config)$/;"	v
vehicle_model	copg/car_racing_simulator/cpg_main.py	/^    vehicle_model = VehicleModel.VehicleModel(config["n_batch"], device, config)$/;"	v
vehicle_model	copg/rcvip_racing/copg_orca.py	/^vehicle_model = VehicleModel.VehicleModel(config["n_batch"], 'cpu', config)$/;"	v
vehicle_model	copg/rcvip_racing/gda_orca.py	/^vehicle_model = VehicleModel.VehicleModel(config["n_batch"], device, config)$/;"	v
vehicle_model	copg/rcvip_racing/results.py	/^vehicle_model = VehicleModel.VehicleModel(config["n_batch"], device, config)$/;"	v
vehicle_model	results.py	/^vehicle_model = VehicleModel.VehicleModel(config["n_batch"], device, config)$/;"	v
verify	track/RCPTrack.py	/^    def verify(self,K=None):$/;"	m	class:RCPTrack
verifyCost	planner/Planner.py	/^    def verifyCost(self,u):$/;"	m	class:Planner
verifyIniial	planner/Planner.py	/^    def verifyIniial(self,u):$/;"	m	class:Planner
verifySpeedProfile	track/RCPTrack.py	/^    def verifySpeedProfile(self,n_steps=1000):$/;"	m	class:RCPTrack
verifyTangentialConstraint	planner/Planner.py	/^    def verifyTangentialConstraint(self,x0,u):$/;"	m	class:Planner
vi	misc/vicon.py	/^    vi = Vicon(daemon=True)$/;"	v
viconUpateDaemon	misc/vicon.py	/^    def viconUpateDaemon(self):$/;"	m	class:Vicon
visualizeConfidenceEllipse	controller/ccmppi/ccmppi_dynamic.py	/^    def visualizeConfidenceEllipse(self):$/;"	m	class:CCMPPI_DYNAMIC
visualizeConfidenceEllipse	controller/ccmppi/ccmppi_kinematic.py	/^    def visualizeConfidenceEllipse(self):$/;"	m	class:CCMPPI_KINEMATIC
visualizeOnTrack	controller/ccmppi/ccmppi_dynamic.py	/^    def visualizeOnTrack(self):$/;"	m	class:CCMPPI_DYNAMIC
visualizeOnTrack	controller/ccmppi/ccmppi_kinematic.py	/^    def visualizeOnTrack(self):$/;"	m	class:CCMPPI_KINEMATIC
vv	misc/getThrustCurve.py	/^vv = np.linspace(0,10)$/;"	v
vx	misc/ukfSysid.py	/^vx = np.hstack([0,np.diff(data[:,1])])\/dt$/;"	v
vx	misc/ukfSysid.py	/^vx = vx[skip:end]$/;"	v
vx	misc/validateHybridModel.py	/^vx = exp_kf_vx$/;"	v
vx	misc/validateHybridModel.py	/^vx = np.hstack([0,np.diff(x)])\/dt$/;"	v
vx_car	misc/ukfSysid.py	/^vx_car = vx*np.cos(heading) + vy*np.sin(heading)$/;"	v
vy	misc/ukfSysid.py	/^vy = np.hstack([0,np.diff(data[:,2])])\/dt$/;"	v
vy	misc/ukfSysid.py	/^vy = vy[skip:end]$/;"	v
vy	misc/validateHybridModel.py	/^vy = exp_kf_vy$/;"	v
vy	misc/validateHybridModel.py	/^vy = np.hstack([0,np.diff(y)])\/dt$/;"	v
vy_car	misc/ukfSysid.py	/^vy_car = -vx*np.sin(heading) + vy*np.cos(heading)$/;"	v
w	sysid/cg.py	/^w = tw = 59$/;"	v
wR_new	misc/throttle_model.m	/^    wR_new = wRi + (A*wRi + B0 + B1*T + B2*T^2);$/;"	v
wR_sim	misc/throttle_model.m	/^wR_sim = zeros(1,length(wR));$/;"	v
wRi	misc/throttle_model.m	/^    wRi = update(wRi, throttle(ii));$/;"	v
wRi	misc/throttle_model.m	/^wRi = wR(1);$/;"	v
wand_id	misc/vicon.py	/^    wand_id = vi.getItemID('Wand')$/;"	v
wrap	sysid/meet.py	/^    wrap = lambda x: np.mod(x + np.pi, 2*np.pi) - np.pi$/;"	f	function:wrapContinuous	file:
wrap	sysid/validateModel.py	/^            wrap = lambda x: np.mod(x + np.pi, 2*np.pi) - np.pi$/;"	f	function:run	file:
wrap	sysid/validateModel.py	/^    wrap = lambda x: np.mod(x + np.pi, 2*np.pi) - np.pi$/;"	f	function:wrapContinuous	file:
wrap	util/kalmanFilter.py	/^    def wrap(self,val):$/;"	m	class:KalmanFilter
wrapContinuous	sysid/meet.py	/^def wrapContinuous(val):$/;"	f
wrapContinuous	sysid/validateModel.py	/^def wrapContinuous(val):$/;"	f
wrapMu	copg/car_racing_simulator/Track.py	/^    def wrapMu(self, mu):$/;"	m	class:Track
wrapMu	copg/car_racing_simulator/VehicleModel.py	/^    def wrapMu(self, mu):$/;"	m	class:VehicleModel
writer	copg/car_racing/copg_orca.py	/^writer = SummaryWriter('.\/' + folder_location + experiment_name + 'data')$/;"	v
writer	copg/car_racing/gda_orca.py	/^writer = SummaryWriter('..\/' + folder_location + experiment_name + 'data')$/;"	v
writer	copg/rcvip_racing/copg_orca.py	/^writer = SummaryWriter('.\/' + folder_location + experiment_name + 'data')$/;"	v
writer	copg/rcvip_racing/gda_orca.py	/^writer = SummaryWriter('..\/' + folder_location + experiment_name + 'data')$/;"	v
x	controller/mppi/cost_visualization.py	/^x = np.linspace(-0.30,0.30)$/;"	v
x	controller/mppi/toy_examples/cudaMppiTest.py	/^        x = dynamics(x,[1,3],0.1)$/;"	v
x	controller/mppi/toy_examples/cudaMppiTest.py	/^    x = dynamics(x,[2,6],0.1)$/;"	v
x	controller/mppi/toy_examples/cudaMppiTest.py	/^    x = x0.copy()$/;"	v
x	controller/mppi/toy_examples/cudaMppiTest.py	/^x = x0.copy()$/;"	v
x	extension/Optitrack.py	/^            x,y,z,rx,ry,rz = op.getState(i)$/;"	v
x	misc/cvxpy_test.py	/^x = cp.Variable(n)$/;"	v
x	misc/readlog.py	/^x = data[:,1]$/;"	v
x	misc/rpy.py	/^x = [-3,0,1]$/;"	v
x	misc/ukfSysid.py	/^x = data[skip:end,1]$/;"	v
x	misc/validateHybridModel.py	/^x = data[skip:,1]$/;"	v
x	misc/validateHybridModel.py	/^x = exp_kf_x$/;"	v
x	sysid/fitThrottle.py	/^x = data[:,1]$/;"	v
x	sysid/readlog.py	/^x = data[:,1]$/;"	v
x0	controller/mppi/toy_examples/cudaMppiTest.py	/^x0 = np.array([0,0,0,0]).astype(np.float32)$/;"	v
x0	controller/mppi/toy_examples/dampedBox.py	/^        x0 = sim.x$/;"	v
x0	copg/car_racing/copg_orca.py	/^x0 = torch.zeros(config["n_batch"], config["n_state"])$/;"	v
x0	copg/car_racing/gda_orca.py	/^x0 = torch.zeros(config["n_batch"], config["n_state"])$/;"	v
x0	copg/car_racing_simulator/cpg_main.py	/^        x0 = vehicle_model.dynModelBlend(x0, u0)$/;"	v
x0	copg/car_racing_simulator/cpg_main.py	/^    x0 = torch.zeros(config["n_batch"], config["n_state"])$/;"	v
x0	copg/rcvip_racing/copg_orca.py	/^x0 = torch.zeros(config["n_batch"], config["n_state"])$/;"	v
x0	copg/rcvip_racing/gda_orca.py	/^x0 = torch.zeros(config["n_batch"], config["n_state"])$/;"	v
x0	misc/linearizeDynamics.py	/^    x0 = main.ref_traj[i,:]$/;"	v
x2d	extension/Optitrack.py	/^            x2d,y2d,theta2d = op.getState2d(i)$/;"	v
x_t_fun	planner/Planner.py	/^        x_t_fun = lambda t:t$/;"	f	member:Planner.genSamplePath	file:
xref	controller/mppi/toy_examples/dampedBox.py	/^    xref = np.vstack([(np.sin(tt)+1),np.zeros_like(tt)]).T$/;"	v
xref	controller/mppi/toy_examples/dampedBox.py	/^    xref = xref.reshape([-1,n,1])$/;"	v
xx	sysid/tire.py	/^    xx = np.linspace(radians(-40),radians(40),1000)$/;"	v
y	controller/mppi/cost_visualization.py	/^y = (np.arctan(-(x-0.1)*100)\/np.pi*2 + 1)*3$/;"	v
y	controller/mppi/cost_visualization.py	/^y = 20*(np.arctan(-(0.25-(np.abs(x)+0.05))*100)\/np.pi*2+1.0)$/;"	v
y	extension/Optitrack.py	/^            x,y,z,rx,ry,rz = op.getState(i)$/;"	v
y	misc/readlog.py	/^y = data[:,2]$/;"	v
y	misc/ukfSysid.py	/^y = data[skip:end,2]$/;"	v
y	misc/validateHybridModel.py	/^y = data[skip:,2]$/;"	v
y	misc/validateHybridModel.py	/^y = exp_kf_y$/;"	v
y	sysid/fitThrottle.py	/^y = data[:,2]$/;"	v
y	sysid/readlog.py	/^y = data[:,2]$/;"	v
y2	controller/mppi/cost_visualization.py	/^y2 = (np.arctan(-(np.abs(x-car_pos)-0.1)*100)\/np.pi*2 + 1)*3$/;"	v
y2d	extension/Optitrack.py	/^            x2d,y2d,theta2d = op.getState2d(i)$/;"	v
y_t_fun	planner/Planner.py	/^        y_t_fun = lambda t:np.sin(t)$/;"	f	member:Planner.genSamplePath	file:
z	extension/Optitrack.py	/^            x,y,z,rx,ry,rz = op.getState(i)$/;"	v
z	sysid/fitThrottle.py	/^    z = (x[i],y[i],heading[i])$/;"	v
z	sysid/fitThrottle.py	/^    z = np.matrix(z).reshape(3,1)$/;"	v
zero_grad	copg/copg_optim/copg.py	/^    def zero_grad(self):$/;"	m	class:CoPG
zero_grad	copg/copg_optim/copg.py	/^    def zero_grad(self):$/;"	m	class:RCoPG
zero_grad	copg/copg_optim/utils.py	/^def zero_grad(params):$/;"	f
